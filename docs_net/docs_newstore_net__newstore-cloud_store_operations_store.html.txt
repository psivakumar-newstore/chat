Store operations | NewStore Documentation
Skip to main content
ðŸš€ User docs have moved
to a new docs experience platform!
.
This site will now host ONLY the API docs
.
API Explorer
Search
API Explorer
Integration APIs
Inventory management
Inventory Manager
Packages
Stock Locations
Store operations
Event Stream and GraphQL
Catalog and SFCC
Delivery
Order management
Payments
Fiscalization and taxes
Store fulfillment
Omnichannel Manager
Discounts and promotions
Customer
Shopping App
Configuration APIs
Webhooks
New Generation APIs
Employees
get
List employees
post
Create employee
get
Get employee
patch
Update employee
get
Get store employees
Printer Locations
get
Get printer location
put
Update printer location.
del
Delete printer location
Printers
get
List printers
post
Create printer
get
Get printer
put
Update printer
del
Delete printer
Stores
post
Create store
get
List stores
get
Get store
patch
Update store
API docs by Redocly
Store operations
(
0.1
)
Download OpenAPI specification
:
Download
URL:
https://apidocs.newstore.io
API for managing stores and related entities, such as employees.
Employees
Employees represent the personnel that are employed at a store and contain details such as contact
information and the associated
store
.
Use it to create, update, and retrieve employees.
List employees
Retrieves the list of employees.
Related methods:
Get employee
Update employee
Responses
200
400
Incorrect request.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
get
/employees
/v0/d
/employees
/employees
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"employees"
:
[
{
"id"
:
"4vpg8bG5iilWGkyCkUpwb0"
,
"email"
:
"jay.doubleyou@example.com"
,
"first_name"
:
"Jay"
,
"last_name"
:
"DoubleYou"
,
"telephone_number"
:
"202-111-2367"
,
"store_id"
:
"78b4fc81-d4a2-5edd-84d9-149a84312400"
,
"image_url"
:
"www.test-image-url.com"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"store"
:
{
"label"
:
"string"
}
,
"printer_location"
:
{
"uuid"
:
"stringstringstringstringstringstring"
,
"name"
:
"string"
}
,
"is_active"
:
true
}
]
}
Create employee
Creates a new employee. Before using this method, ensure you have
created a store
.
Related methods:
List employees
Get employee
Update employee
Request Body schema:
application/json
id
string
<= 36 characters
email
required
string
<= 256 characters
first_name
required
string
<= 256 characters
last_name
required
string
<= 256 characters
telephone_number
required
string
<= 32 characters
store_id
string or null
[ 1 .. 256 ] characters
image_url
string or null
<= 256 characters
created_at
string
<
date-time
>
updated_at
string
<
date-time
>
store
object or null
printer_location
object or null
is_active
boolean
Responses
200
The employee has been created successfully.
409
Conflict, requested employee identifier already exists.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
post
/employees
/v0/d
/employees
/employees
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"id"
:
"4vpg8bG5iilWGkyCkUpwb0"
,
"email"
:
"jay.doubleyou@example.com"
,
"first_name"
:
"Jay"
,
"last_name"
:
"DoubleYou"
,
"telephone_number"
:
"202-111-2367"
,
"store_id"
:
"78b4fc81-d4a2-5edd-84d9-149a84312400"
,
"image_url"
:
"www.test-image-url.com"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"store"
:
{
"label"
:
"string"
}
,
"printer_location"
:
{
"uuid"
:
"stringstringstringstringstringstring"
,
"name"
:
"string"
}
,
"is_active"
:
true
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"id"
:
"4vpg8bG5iilWGkyCkUpwb0"
,
"email"
:
"jay.doubleyou@example.com"
,
"first_name"
:
"Jay"
,
"last_name"
:
"DoubleYou"
,
"telephone_number"
:
"202-111-2367"
,
"store_id"
:
"78b4fc81-d4a2-5edd-84d9-149a84312400"
,
"image_url"
:
"www.test-image-url.com"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"store"
:
{
"label"
:
"string"
}
,
"printer_location"
:
{
"uuid"
:
"stringstringstringstringstringstring"
,
"name"
:
"string"
}
,
"is_active"
:
true
}
Get employee
Retrieves the employee"s details.
path
Parameters
employee_id
required
string
The unique identifier of an employee.
Responses
200
404
Employee not found.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
get
/employees/{employee_id}
/v0/d
/employees/{employee_id}
/employees/{employee_id}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"id"
:
"4vpg8bG5iilWGkyCkUpwb0"
,
"email"
:
"jay.doubleyou@example.com"
,
"first_name"
:
"Jay"
,
"last_name"
:
"DoubleYou"
,
"telephone_number"
:
"202-111-2367"
,
"store_id"
:
"78b4fc81-d4a2-5edd-84d9-149a84312400"
,
"image_url"
:
"www.test-image-url.com"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"store"
:
{
"label"
:
"string"
}
,
"printer_location"
:
{
"uuid"
:
"stringstringstringstringstringstring"
,
"name"
:
"string"
}
,
"is_active"
:
true
}
Update employee
Updates the employee. Only attributes specified in the request are changed.
path
Parameters
employee_id
required
string
The unique identifier of an employee.
Request Body schema:
application/json
id
string
<= 36 characters
email
required
string
<= 256 characters
first_name
required
string
<= 256 characters
last_name
required
string
<= 256 characters
telephone_number
required
string
<= 32 characters
store_id
string or null
[ 1 .. 256 ] characters
image_url
string or null
<= 256 characters
created_at
string
<
date-time
>
updated_at
string
<
date-time
>
store
object or null
printer_location
object or null
is_active
boolean
Responses
200
400
Bad request - Request data is invalid.
404
Employee not found.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
patch
/employees/{employee_id}
/v0/d
/employees/{employee_id}
/employees/{employee_id}
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"id"
:
"4vpg8bG5iilWGkyCkUpwb0"
,
"email"
:
"jay.doubleyou@example.com"
,
"first_name"
:
"Jay"
,
"last_name"
:
"DoubleYou"
,
"telephone_number"
:
"202-111-2367"
,
"store_id"
:
"78b4fc81-d4a2-5edd-84d9-149a84312400"
,
"image_url"
:
"www.test-image-url.com"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"store"
:
{
"label"
:
"string"
}
,
"printer_location"
:
{
"uuid"
:
"stringstringstringstringstringstring"
,
"name"
:
"string"
}
,
"is_active"
:
true
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"id"
:
"4vpg8bG5iilWGkyCkUpwb0"
,
"email"
:
"jay.doubleyou@example.com"
,
"first_name"
:
"Jay"
,
"last_name"
:
"DoubleYou"
,
"telephone_number"
:
"202-111-2367"
,
"store_id"
:
"78b4fc81-d4a2-5edd-84d9-149a84312400"
,
"image_url"
:
"www.test-image-url.com"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"store"
:
{
"label"
:
"string"
}
,
"printer_location"
:
{
"uuid"
:
"stringstringstringstringstringstring"
,
"name"
:
"string"
}
,
"is_active"
:
true
}
Get store employees
Gets all employees belonging to a store.
path
Parameters
store_id
required
string
The identifier of the store.
Responses
200
Successful response.
400
Request data is invalid.
404
Store not found.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
get
/stores/{store_id}/employees
/v0/d
/stores/{store_id}/employees
/stores/{store_id}/employees
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"employees"
:
[
{
"id"
:
"4vpg8bG5iilWGkyCkUpwb0"
,
"email"
:
"jay.doubleyou@example.com"
,
"first_name"
:
"Jay"
,
"last_name"
:
"DoubleYou"
,
"telephone_number"
:
"202-111-2367"
,
"store_id"
:
"78b4fc81-d4a2-5edd-84d9-149a84312400"
,
"image_url"
:
"www.test-image-url.com"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"store"
:
{
"label"
:
"string"
}
,
"printer_location"
:
{
"uuid"
:
"stringstringstringstringstringstring"
,
"name"
:
"string"
}
,
"is_active"
:
true
}
]
}
Printer Locations
Groups printers in a physical location of the store.
Get printer location
Returns the printer location with the given ID.
path
Parameters
uuid
required
string
The identifier of the printer location.
store_id
required
string
The identifier of the store.
Responses
200
404
The printer location was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/stores/{store_id}/printer_locations/{uuid}
/v0/d
/stores/{store_id}/printer_locations/{uuid}
/stores/{store_id}/printer_locations/{uuid}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer_location"
:
{
"created_at"
:
"2019-08-24T14:15:22Z"
,
"name"
:
"string"
,
"printers"
:
[
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
,
"revision"
:
0
,
"store_id"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Update printer location.
Update existing printer location with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer location.
store_id
required
string
The identifier of the store.
Request Body schema:
*/*
name
required
string
non-empty
Responses
200
404
The printer location was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
put
/stores/{store_id}/printer_locations/{uuid}
/v0/d
/stores/{store_id}/printer_locations/{uuid}
/stores/{store_id}/printer_locations/{uuid}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer_location"
:
{
"created_at"
:
"2019-08-24T14:15:22Z"
,
"name"
:
"string"
,
"printers"
:
[
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
,
"revision"
:
0
,
"store_id"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Delete printer location
Remove the printer location with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer location.
store_id
required
string
The identifier of the store.
Responses
200
The printer location was deleted successfully.
404
The printer location was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
delete
/stores/{store_id}/printer_locations/{uuid}
/v0/d
/stores/{store_id}/printer_locations/{uuid}
/stores/{store_id}/printer_locations/{uuid}
Printers
Represents a printer in the store.
List printers
Returns the list of printers set up in the store.
path
Parameters
store_id
required
string
The identifier of the store.
Responses
200
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/stores/{store_id}/printers
/v0/d
/stores/{store_id}/printers
/stores/{store_id}/printers
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printers"
:
[
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
}
Create printer
Creates a new printer.
path
Parameters
store_id
required
string
The identifier of the store.
Request Body schema:
application/json
ipv4
string
<= 16 characters
ipv6
string
<= 40 characters
location
string
<= 100 characters
mac_address
string
[ 17 .. 32 ] characters
manufacturer
required
string
Enum
:
"Virtual"
"Star"
"AirPrint"
"Posnet"
"Epson"
model
string
[ 3 .. 64 ] characters
name
required
string
[ 3 .. 64 ] characters
paper_size
string or null
<= 32 characters
printer_location_id
string
= 36 characters
store_id
required
string
[ 1 .. 256 ] characters
type
required
string
Enum
:
"document_printer"
"label_printer"
"fiscal_printer"
url
string
<= 256 characters
port
integer
serial_number
string
[ 1 .. 256 ] characters
Responses
201
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
post
/stores/{store_id}/printers
/v0/d
/stores/{store_id}/printers
/stores/{store_id}/printers
Request samples
Payload
Content type
application/json
Copy
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
}
Response samples
201
Content type
application/json
Copy
Expand all
Collapse all
{
"printer"
:
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Get printer
Returns the printer with the given ID.
path
Parameters
uuid
required
string
The identifier of the printer.
store_id
required
string
The identifier of the store.
Responses
200
404
The printer was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/stores/{store_id}/printers/{uuid}
/v0/d
/stores/{store_id}/printers/{uuid}
/stores/{store_id}/printers/{uuid}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer"
:
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Update printer
Updates existing printer with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer.
store_id
required
string
The identifier of the store.
Request Body schema:
appplication/json
ipv4
string
<= 16 characters
ipv6
string
<= 40 characters
location
string
<= 100 characters
mac_address
string
[ 17 .. 32 ] characters
manufacturer
required
string
Enum
:
"Virtual"
"Star"
"AirPrint"
"Posnet"
"Epson"
model
string
[ 3 .. 64 ] characters
name
required
string
[ 3 .. 64 ] characters
paper_size
string or null
<= 32 characters
printer_location_id
string
= 36 characters
store_id
required
string
[ 1 .. 256 ] characters
type
required
string
Enum
:
"document_printer"
"label_printer"
"fiscal_printer"
url
string
<= 256 characters
port
integer
serial_number
string
[ 1 .. 256 ] characters
Responses
200
OK
404
The printer was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
put
/stores/{store_id}/printers/{uuid}
/v0/d
/stores/{store_id}/printers/{uuid}
/stores/{store_id}/printers/{uuid}
Request samples
Payload
Content type
appplication/json
Copy
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer"
:
{
"ipv4"
:
"string"
,
"ipv6"
:
"string"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"port"
:
0
,
"serial_number"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Delete printer
Removes the printer with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer.
store_id
required
string
The identifier of the store.
Responses
200
The printer was deleted successfully.
404
The printer was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
delete
/stores/{store_id}/printers/{uuid}
/v0/d
/stores/{store_id}/printers/{uuid}
/stores/{store_id}/printers/{uuid}
Stores
Represents a physical store in your business. It holds information on street and postal addresses,
service hours, and delivery details.
Use it to create, update, and retrieve stores. Use the queue_prioritization property to define the
priority for fulfillment requests on NewStore Fulfillment App. See
About order fulfillment
.
Create store
Creates a store. See the
Setting up a store tutorial
.
After you have created a store, you can:
add employees to it
import stock into it
.
Ensure that you have
imported a price book
before you assign it to a store. See the
Importing master data tutorial
.
To set up a shipping strategy for the store, including shipping methods, provider rates, and routes,
create a fulfillment configuration
.
See the
fulfillment config tutorial
.
By default a fulfillment location will also be created with the same id as the store's id. If you are using custom fulfilment location IDs,
then you will need to:
create the fulfillment location
with its custom ID so that Store Fulfillment
can work with your store after creating the Store.
Related methods:
Get store
List stores
Request Body schema:
application/json
label
string
<= 256 characters
physical_address
object
(
Address
)
Represents an address
shipping_address
object or null
(
Address
)
Represents an address
division_name
string or null
Division of the company this store belongs to.
manager_id
string or null
<= 36 characters
image_url
string or null
phone_number
string or null
The telephone number at which the store can be reached.
active_status
boolean
supported_shipping_methods
Array of
strings
Items
Enum
:
"traditional_carrier"
"same_day_delivery"
"in_store_pick_up"
"in_store_handover"
gift_wrapping
boolean
pricebook
string or null
Identifier of a pricebook which should be used for this store. The pricebook defines prices for all products sold in the store. If a pricebook is not specified, a default pricebook will be used by the store.
delivery_zip_codes
Array of
strings
[ items
[ 2 .. 32 ] characters
]
shipping_provider_info
object
Shipping provider information containing all external provider (like zip codes, the external store id and so on).
business_hours
Array of
objects
timezone
string
<= 256 characters
Only allows timezone values that comply with the
tz database
.
tax_id
string or null
= 9 characters
tax_included
boolean
If true, the prices associated with this store include tax.
queue_prioritization
Array of
objects
catalog
string or null
<= 256 characters
The name of the catalog containing the list of products that can be sold at this store.
locale
string or null
<= 32 characters
The locale of the catalog assigned to the store. The product data in the catalog is displayed based on the locale specified here.
store_id
string
[ 1 .. 256 ] characters
^[a-zA-Z0-9_-]*$
store id (only for store creation)
display_price_unit_type
string
Enum
:
"net"
"gross"
Responses
200
The store has been created successfully.
400
Bad Request - Request data is invalid.
404
Required data, such as catalogs are not found.
409
Conflict, requested store identifier already exists.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
post
/stores
/v0/d
/stores
/stores
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"label"
:
"001_US_ABC_Street"
,
"physical_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"latitude"
:
40.7256956
,
"longitude"
:
-74.0023217
,
"state"
:
"NY"
,
"zip_code"
:
"10001"
}
,
"shipping_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"state"
:
"NY"
,
"zip_code"
:
"10002"
}
,
"division_name"
:
"US"
,
"manager_id"
:
"466ba016-42d4-47cb-a953-0b808c949b64"
,
"image_url"
:
"www.image-url.com"
,
"phone_number"
:
"202-555-0138"
,
"active_status"
:
true
,
"supported_shipping_methods"
:
[
"in_store_pick_up"
]
,
"gift_wrapping"
:
false
,
"pricebook"
:
"dodici-ca"
,
"delivery_zip_codes"
:
[
"10001"
,
"10002"
]
,
"shipping_provider_info"
:
{ }
,
"business_hours"
:
[
{
"from_time"
:
"09:00"
,
"to_time"
:
"21:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
0
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
1
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
2
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
3
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
4
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
5
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
6
}
]
,
"timezone"
:
"America/New_York"
,
"tax_id"
:
null
,
"tax_included"
:
true
,
"queue_prioritization"
:
[
{
"display_priority_type"
:
"priority"
,
"priority"
:
3
,
"shipping_type"
:
"same_day_delivery"
}
,
{
"display_priority_type"
:
"priority"
,
"priority"
:
2
,
"shipping_type"
:
"in_store_pick_up"
}
,
{
"display_priority_type"
:
"normal"
,
"priority"
:
1
,
"shipping_type"
:
"traditional_carrier"
}
]
,
"catalog"
:
"storefront-catalog-en"
,
"locale"
:
"en-US"
,
"store_id"
:
"050_Mc_Avenue"
,
"display_price_unit_type"
:
"gross"
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"label"
:
"001_US_ABC_Street"
,
"physical_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"latitude"
:
40.7256956
,
"longitude"
:
-74.0023217
,
"state"
:
"NY"
,
"zip_code"
:
"10001"
}
,
"shipping_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"state"
:
"NY"
,
"zip_code"
:
"10002"
}
,
"division_name"
:
"US"
,
"manager_id"
:
"466ba016-42d4-47cb-a953-0b808c949b64"
,
"image_url"
:
"www.image-url.com"
,
"phone_number"
:
"202-555-0138"
,
"active_status"
:
true
,
"supported_shipping_methods"
:
[
"in_store_pick_up"
]
,
"gift_wrapping"
:
false
,
"pricebook"
:
"dodici-ca"
,
"delivery_zip_codes"
:
[
"10001"
,
"10002"
]
,
"shipping_provider_info"
:
{ }
,
"business_hours"
:
[
{
"from_time"
:
"09:00"
,
"to_time"
:
"21:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
0
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
1
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
2
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
3
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
4
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
5
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
6
}
]
,
"timezone"
:
"America/New_York"
,
"tax_id"
:
null
,
"tax_included"
:
true
,
"queue_prioritization"
:
[
{
"display_priority_type"
:
"priority"
,
"priority"
:
3
,
"shipping_type"
:
"same_day_delivery"
}
,
{
"display_priority_type"
:
"priority"
,
"priority"
:
2
,
"shipping_type"
:
"in_store_pick_up"
}
,
{
"display_priority_type"
:
"normal"
,
"priority"
:
1
,
"shipping_type"
:
"traditional_carrier"
}
]
,
"catalog"
:
"storefront-catalog-en"
,
"locale"
:
"en-US"
,
"store_id"
:
"050_Mc_Avenue"
,
"display_price_unit_type"
:
"gross"
,
"revision"
:
1
,
"updated_at"
:
null
,
"created_at"
:
null
}
List stores
Retrieves the list of stores.
Related methods:
Get store
Update store
Create store
query
Parameters
lat
number
Used if you want to fetch nearby stores. You must provide both latitude and longitude to query by location.
long
number
Used if you want to fetch nearby stores. You must provide both latitude and longitude to query by location.
radius
number
Used if you want to fetch nearby stores. Given a set of coordinates, only stores within this distance (in meters) will be returned.
max_stores
number
Used if you want to fetch nearby stores. Maximum number of stores returned when fetching by location. Latitude and longitude parameters are mandatory.
Responses
200
Successful response.
400
Bad Request - Request data is invalid.
500
An internal error occurred.
503
Temporarily not available - Service not available, try again later.
get
/stores
/v0/d
/stores
/stores
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"stores"
:
[
{
"label"
:
"001_US_ABC_Street"
,
"physical_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"latitude"
:
40.7256956
,
"longitude"
:
-74.0023217
,
"state"
:
"NY"
,
"zip_code"
:
"10001"
}
,
"shipping_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"state"
:
"NY"
,
"zip_code"
:
"10002"
}
,
"division_name"
:
"US"
,
"manager_id"
:
"466ba016-42d4-47cb-a953-0b808c949b64"
,
"image_url"
:
"www.image-url.com"
,
"phone_number"
:
"202-555-0138"
,
"active_status"
:
true
,
"supported_shipping_methods"
:
[
"in_store_pick_up"
]
,
"gift_wrapping"
:
false
,
"pricebook"
:
"dodici-ca"
,
"delivery_zip_codes"
:
[
"10001"
,
"10002"
]
,
"shipping_provider_info"
:
{ }
,
"business_hours"
:
[
{
"from_time"
:
"09:00"
,
"to_time"
:
"21:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
0
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
1
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
2
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
3
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
4
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
5
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
6
}
]
,
"timezone"
:
"America/New_York"
,
"tax_id"
:
null
,
"tax_included"
:
true
,
"queue_prioritization"
:
[
{
"display_priority_type"
:
"priority"
,
"priority"
:
3
,
"shipping_type"
:
"same_day_delivery"
}
,
{
"display_priority_type"
:
"priority"
,
"priority"
:
2
,
"shipping_type"
:
"in_store_pick_up"
}
,
{
"display_priority_type"
:
"normal"
,
"priority"
:
1
,
"shipping_type"
:
"traditional_carrier"
}
]
,
"catalog"
:
"storefront-catalog-en"
,
"locale"
:
"en-US"
,
"store_id"
:
"050_Mc_Avenue"
,
"display_price_unit_type"
:
"gross"
,
"revision"
:
1
,
"updated_at"
:
null
,
"created_at"
:
null
}
]
}
Get store
Gets the store and all its detailed information.
path
Parameters
store_id
required
string
The unique identifier of a store.
Responses
200
Successful response.
400
Request data is invalid.
404
Store not found.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
get
/stores/{store_id}
/v0/d
/stores/{store_id}
/stores/{store_id}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"label"
:
"001_US_ABC_Street"
,
"physical_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"latitude"
:
40.7256956
,
"longitude"
:
-74.0023217
,
"state"
:
"NY"
,
"zip_code"
:
"10001"
}
,
"shipping_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"state"
:
"NY"
,
"zip_code"
:
"10002"
}
,
"division_name"
:
"US"
,
"manager_id"
:
"466ba016-42d4-47cb-a953-0b808c949b64"
,
"image_url"
:
"www.image-url.com"
,
"phone_number"
:
"202-555-0138"
,
"active_status"
:
true
,
"supported_shipping_methods"
:
[
"in_store_pick_up"
]
,
"gift_wrapping"
:
false
,
"pricebook"
:
"dodici-ca"
,
"delivery_zip_codes"
:
[
"10001"
,
"10002"
]
,
"shipping_provider_info"
:
{ }
,
"business_hours"
:
[
{
"from_time"
:
"09:00"
,
"to_time"
:
"21:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
0
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
1
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
2
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
3
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
4
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
5
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
6
}
]
,
"timezone"
:
"America/New_York"
,
"tax_id"
:
null
,
"tax_included"
:
true
,
"queue_prioritization"
:
[
{
"display_priority_type"
:
"priority"
,
"priority"
:
3
,
"shipping_type"
:
"same_day_delivery"
}
,
{
"display_priority_type"
:
"priority"
,
"priority"
:
2
,
"shipping_type"
:
"in_store_pick_up"
}
,
{
"display_priority_type"
:
"normal"
,
"priority"
:
1
,
"shipping_type"
:
"traditional_carrier"
}
]
,
"catalog"
:
"storefront-catalog-en"
,
"locale"
:
"en-US"
,
"store_id"
:
"050_Mc_Avenue"
,
"display_price_unit_type"
:
"gross"
,
"revision"
:
1
,
"updated_at"
:
null
,
"created_at"
:
null
}
Update store
Updates the store. Only attributes supplied in the request are changed.
Note
: When you deactivate a store, ensure that the store has no employees assigned to it.
To prevent routing orders to deactivated stores, also
contact NewStore support
to ensure that:
there is no stock left in the store.
the fulfillment configuration is updated to remove the
fulfillment_node_id
matching the store.
Related methods:
Create store
path
Parameters
store_id
required
string
The unique identifier of a store.
Request Body schema:
application/json
label
string
<= 256 characters
physical_address
object
(
Address
)
Represents an address
shipping_address
object or null
(
Address
)
Represents an address
division_name
string or null
Division of the company this store belongs to.
manager_id
string or null
<= 36 characters
image_url
string or null
phone_number
string or null
The telephone number at which the store can be reached.
active_status
boolean
supported_shipping_methods
Array of
strings
Items
Enum
:
"traditional_carrier"
"same_day_delivery"
"in_store_pick_up"
"in_store_handover"
gift_wrapping
boolean
pricebook
string or null
Identifier of a pricebook which should be used for this store. The pricebook defines prices for all products sold in the store. If a pricebook is not specified, a default pricebook will be used by the store.
delivery_zip_codes
Array of
strings
[ items
[ 2 .. 32 ] characters
]
shipping_provider_info
object
Shipping provider information containing all external provider (like zip codes, the external store id and so on).
business_hours
Array of
objects
timezone
string
<= 256 characters
Only allows timezone values that comply with the
tz database
.
tax_id
string or null
= 9 characters
tax_included
boolean
If true, the prices associated with this store include tax.
queue_prioritization
Array of
objects
catalog
string or null
<= 256 characters
The name of the catalog containing the list of products that can be sold at this store.
locale
string or null
<= 32 characters
The locale of the catalog assigned to the store. The product data in the catalog is displayed based on the locale specified here.
store_id
string
[ 1 .. 256 ] characters
^[a-zA-Z0-9_-]*$
store id (only for store creation)
display_price_unit_type
string
Enum
:
"net"
"gross"
Responses
200
The store has been updated successfully.
400
Request data is invalid.
404
Store not found.
500
An internal error occurred.
503
Temporarily not available - service not available, try again later.
patch
/stores/{store_id}
/v0/d
/stores/{store_id}
/stores/{store_id}
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"label"
:
"001_US_ABC_Street"
,
"physical_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"latitude"
:
40.7256956
,
"longitude"
:
-74.0023217
,
"state"
:
"NY"
,
"zip_code"
:
"10001"
}
,
"shipping_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"state"
:
"NY"
,
"zip_code"
:
"10002"
}
,
"division_name"
:
"US"
,
"manager_id"
:
"466ba016-42d4-47cb-a953-0b808c949b64"
,
"image_url"
:
"www.image-url.com"
,
"phone_number"
:
"202-555-0138"
,
"active_status"
:
true
,
"supported_shipping_methods"
:
[
"in_store_pick_up"
]
,
"gift_wrapping"
:
false
,
"pricebook"
:
"dodici-ca"
,
"delivery_zip_codes"
:
[
"10001"
,
"10002"
]
,
"shipping_provider_info"
:
{ }
,
"business_hours"
:
[
{
"from_time"
:
"09:00"
,
"to_time"
:
"21:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
0
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
1
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
2
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
3
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
4
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
5
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
6
}
]
,
"timezone"
:
"America/New_York"
,
"tax_id"
:
null
,
"tax_included"
:
true
,
"queue_prioritization"
:
[
{
"display_priority_type"
:
"priority"
,
"priority"
:
3
,
"shipping_type"
:
"same_day_delivery"
}
,
{
"display_priority_type"
:
"priority"
,
"priority"
:
2
,
"shipping_type"
:
"in_store_pick_up"
}
,
{
"display_priority_type"
:
"normal"
,
"priority"
:
1
,
"shipping_type"
:
"traditional_carrier"
}
]
,
"catalog"
:
"storefront-catalog-en"
,
"locale"
:
"en-US"
,
"store_id"
:
"050_Mc_Avenue"
,
"display_price_unit_type"
:
"gross"
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"label"
:
"001_US_ABC_Street"
,
"physical_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"latitude"
:
40.7256956
,
"longitude"
:
-74.0023217
,
"state"
:
"NY"
,
"zip_code"
:
"10001"
}
,
"shipping_address"
:
{
"address_line_1"
:
"12 ABC Street"
,
"city"
:
"New York"
,
"country_code"
:
"US"
,
"state"
:
"NY"
,
"zip_code"
:
"10002"
}
,
"division_name"
:
"US"
,
"manager_id"
:
"466ba016-42d4-47cb-a953-0b808c949b64"
,
"image_url"
:
"www.image-url.com"
,
"phone_number"
:
"202-555-0138"
,
"active_status"
:
true
,
"supported_shipping_methods"
:
[
"in_store_pick_up"
]
,
"gift_wrapping"
:
false
,
"pricebook"
:
"dodici-ca"
,
"delivery_zip_codes"
:
[
"10001"
,
"10002"
]
,
"shipping_provider_info"
:
{ }
,
"business_hours"
:
[
{
"from_time"
:
"09:00"
,
"to_time"
:
"21:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
0
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
1
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
2
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
3
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
4
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
5
}
,
{
"from_time"
:
"09:00"
,
"to_time"
:
"20:00"
,
"earliest_pick_up"
:
"10:00"
,
"latest_pick_up"
:
"20:00"
,
"weekday"
:
6
}
]
,
"timezone"
:
"America/New_York"
,
"tax_id"
:
null
,
"tax_included"
:
true
,
"queue_prioritization"
:
[
{
"display_priority_type"
:
"priority"
,
"priority"
:
3
,
"shipping_type"
:
"same_day_delivery"
}
,
{
"display_priority_type"
:
"priority"
,
"priority"
:
2
,
"shipping_type"
:
"in_store_pick_up"
}
,
{
"display_priority_type"
:
"normal"
,
"priority"
:
1
,
"shipping_type"
:
"traditional_carrier"
}
]
,
"catalog"
:
"storefront-catalog-en"
,
"locale"
:
"en-US"
,
"store_id"
:
"050_Mc_Avenue"
,
"display_price_unit_type"
:
"gross"
,
"revision"
:
1
,
"updated_at"
:
null
,
"created_at"
:
null
}
Previous
Stock Locations
Next
Event Stream Observability API
Copyright Â© 2025 NewStore, Inc.