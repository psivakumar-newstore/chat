NewStore SFCC Integration API | NewStore Documentation
Skip to main content
ðŸš€ User docs have moved
to a new docs experience platform!
.
This site will now host ONLY the API docs
.
API Explorer
Search
API Explorer
Integration APIs
Inventory management
Event Stream and GraphQL
Catalog and SFCC
Import Schemas
Pricebook Export
Product Export
Customer API (current)
Customer API (experimental)
Import Data API
Catalog Locale Manager API
NewStore SFCC Integration API
Delivery
Order management
Payments
Fiscalization and taxes
Store fulfillment
Omnichannel Manager
Discounts and promotions
Customer
Shopping App
Configuration APIs
Webhooks
New Generation APIs
Create and Config a New Job
post
Create a new Catalog Export job
post
Create a new Pricebook Export job
post
Get job config for an order export
post
Get job config for a inventory import
post
Inventory import callback
post
Start the availability export from NS
Job History
get
Shows a filterable list of created import jobs.
get
Import job details
get
Get import job logs
get
Downloads the input file provided.
OCAPI credentials
post
Store credentials for OCAPI access
Checkout Options
post
Get routing options from the NewStore Platform.
post
Get in-store pickup options from the NewStore Platform.
Mapping Config
post
Store mapping config for a catalog.
get
Get all catalog mapping configurations for a tenant.
post
Store mapping config for a pricebook import.
get
Get all pricebook mapping configurations for a tenant.
post
Store mapping config for a availability.
get
Get all availability mapping configurations for a tenant.
post
Store mapping config for inventory lists.
get
Get all inventory mapping configurations for a tenant.
Mapping Script
post
Store mapping script for a catalog.
post
Store mapping script for an order.
get
Get the latest order mapping script
API docs by Redocly
NewStore SFCC Integration API
(
1.0.0
)
Download OpenAPI specification
:
Download
Description
Provides integration between SalesForce Commerce Cloud and NewStore.
Create and Config a New Job
Create a new Catalog Export job
Create a new Catalog Export job and returns the URL for its input location.
Request Body schema:
application/json
job_id
required
string
execution_id
required
string
site_id
required
string
cartridge_version
required
string
Responses
201
Upload URL has been successfully generated.
403
post
/job_config/catalog
/sfcc-api/v1
/job_config/catalog
Request samples
Payload
Content type
application/json
Copy
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
}
Response samples
201
Content type
application/json
Copy
{
"upload_url"
:
"
https://s3.us-east-1.amazonaws.com/v.sfcc.newstore.transformation.data/catalog/d0260f24-6101-4d31-91d3-d30b1a616315.zip?X-Amz-Algorithm=...
"
}
Create a new Pricebook Export job
Create a new Pricebook Export job and returns the URL for its input location.
Request Body schema:
application/json
job_id
required
string
execution_id
required
string
site_id
required
string
cartridge_version
required
string
Responses
201
Upload URL has been successfully generated.
403
post
/job_config/pricebook
/sfcc-api/v1
/job_config/pricebook
Request samples
Payload
Content type
application/json
Copy
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
}
Response samples
201
Content type
application/json
Copy
{
"upload_url"
:
"
https://s3.us-east-1.amazonaws.com/v.sfcc.newstore.transformation.data/pricebook/d0260f24-6101-4d31-91d3-d30b1a616315.zip?X-Amz-Algorithm=...
"
}
Get job config for an order export
Get job config for an order export. Returns the URL for its input location.
Request Body schema:
application/json
job_id
required
string
execution_id
required
string
site_id
required
string
cartridge_version
required
string
Responses
201
Upload URL was successfully generated.
403
post
/job_config/order
/sfcc-api/v1
/job_config/order
Request samples
Payload
Content type
application/json
Copy
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
}
Response samples
201
Content type
application/json
Copy
{
"upload_url"
:
"string"
}
Get job config for a inventory import
Returns the URL for its input location.
Request Body schema:
application/json
job_id
required
string
execution_id
required
string
site_id
required
string
cartridge_version
required
string
Responses
201
Upload URL has been successfully generated.
post
/job_config/inventory
/sfcc-api/v1
/job_config/inventory
Request samples
Payload
Content type
application/json
Copy
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
}
Response samples
201
Content type
application/json
Copy
{
"upload_url"
:
"string"
}
Inventory import callback
Notify Callback from SFCC after successful inventory import
Request Body schema:
application/json
job_id
required
string
execution_id
required
string
site_id
required
string
cartridge_version
required
string
custom
required
object
Responses
200
post
/job_config/inventory/callback
/sfcc-api/v1
/job_config/inventory/callback
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
,
"custom"
:
{ }
}
Start the availability export from NS
Start the availability export from NS
Request Body schema:
application/json
job_id
required
string
execution_id
required
string
site_id
required
string
cartridge_version
required
string
custom
required
object
Responses
200
post
/job_config/availability
/sfcc-api/v1
/job_config/availability
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
,
"custom"
:
{ }
}
Job History
Shows a filterable list of created import jobs.
Returns a JSON object containing a
jobs[]
list.
If the result has more than one page, the response will also contain a
nextPage
hash.
Pagination:
If the
nextPage
hash is returned, it means we have more than one page.
To fetch the next page, call this endpoint again with the hash as a query parameter.
Example:
/job_history?nextPage=PASTE_THE_HASH_HERE
.
Filtering:
This endpoint supports the following filters:
entity
(catalog, pricebook, order, availability, inventory)          Example:
/job_history?entity=catalog
status
(pending, running, finished, failed)          Example:
/job_history?status=pending
query
Parameters
entity
string
Enum
:
"catalog"
"pricebook"
"order"
"availability"
"inventory"
status
string
Enum
:
"pending"
"running"
"finished"
"failed"
"skipped"
nextPage
string
Responses
200
400
get
/job_history
/sfcc-api/v1
/job_history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"jobs"
:
{
"uuid"
:
"string"
,
"entity"
:
"catalog"
,
"createdAt"
:
"string"
,
"status"
:
"pending"
,
"message"
:
"string"
,
"catalogImportId"
:
"string"
,
"metadata"
:
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
}
,
"links"
:
{
"logs"
:
"string"
,
"input"
:
"string"
,
"output"
:
"string"
,
"details"
:
"string"
}
}
,
"nextPage"
:
"string"
}
Import job details
Shows information about a specific import job with a link for its logs.
path
Parameters
uuid
required
string
Responses
200
404
Import job not found
get
/job_history/{uuid}
/sfcc-api/v1
/job_history/{uuid}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"uuid"
:
"string"
,
"entity"
:
"catalog"
,
"createdAt"
:
"string"
,
"status"
:
"pending"
,
"message"
:
"string"
,
"catalogImportId"
:
"string"
,
"metadata"
:
{
"job_id"
:
"string"
,
"execution_id"
:
"string"
,
"site_id"
:
"string"
,
"cartridge_version"
:
"string"
}
,
"links"
:
{
"logs"
:
"string"
,
"input"
:
"string"
,
"output"
:
"string"
,
"details"
:
"string"
}
,
"statusHistory"
:
[
{
"status"
:
"pending"
,
"message"
:
"string"
,
"transitionedAt"
:
"string"
}
]
,
"catalogMappingContext"
:
{
"property1"
:
"string"
,
"property2"
:
"string"
}
}
Get import job logs
Downloads the logs generated by an import job.
path
Parameters
uuid
required
string
Responses
200
get
/job_history/{uuid}/logs
/sfcc-api/v1
/job_history/{uuid}/logs
Downloads the input file provided.
Redirects to a pre-signed S3 URL to download the desired input or output file.
path
Parameters
uuid
required
string
fileSourceType
required
string
Enum
:
"input"
"output"
Responses
302
Redirects to pre-signed S3 URL
get
/job_history/{uuid}/{fileSourceType}
/sfcc-api/v1
/job_history/{uuid}/{fileSourceType}
OCAPI credentials
Store credentials for OCAPI access
Allows the provided credentials to be stored securely, and then used for calls to OCAPI.
    Either to read data from the API or to start job executions. The availability import from NewStore to SFCC
     requires these credentials to be set.
Request Body schema:
application/json
client_id
required
string
OCAPI client ID. Note for an SFCC sandbox instance, a value of "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" can be used.
client_secret
required
string
OCAPI client secret. Note for an SFCC sandbox instance, a value of "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" can be used.
Responses
200
401
post
/ocapi_credentials
/sfcc-api/v1
/ocapi_credentials
Request samples
Payload
Content type
application/json
Copy
{
"client_id"
:
"string"
,
"client_secret"
:
"string"
}
Checkout Options
Get routing options from the NewStore Platform.
Allows to route an order from a store.
Request Body schema:
application/json
shopping_cart
required
object
An array of flat items from the shopping bag.
routing_strategy
required
object
The strategy used to route the order
.
If no value is specified
,
the default strategy is
  used and the order is routed to the best location based on the fulfillment configuration
.
service_levels
Array of
strings
shipping_address
Array of
objects
(
RoutingOptionsRequestShippingAddress
)
Responses
200
The list of possible routing options is returned.
400
post
/checkout_options/routing_options
/sfcc-api/v1
/checkout_options/routing_options
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"shopping_cart"
:
{
"catalog"
:
{
"shop_id"
:
"string"
,
"shop_locale"
:
"string"
}
,
"items"
:
[
{
"is_preorder"
:
true
,
"online_from"
:
"2019-08-24T14:15:22Z"
,
"preorder_start"
:
"2019-08-24T14:15:22Z"
,
"price"
:
{
"amount"
:
0
,
"currency"
:
"string"
}
,
"product_id"
:
"string"
}
]
}
,
"routing_strategy"
:
{
"strategy"
:
"default"
,
"fulfillment_node_ids"
:
[
"string"
]
,
"service_level_identifier"
:
{ }
}
,
"service_levels"
:
[
"string"
]
,
"shipping_address"
:
[
{
"address_line_1"
:
"string"
,
"address_line_2"
:
"string"
,
"city"
:
"string"
,
"country"
:
"string"
,
"phone"
:
"string"
,
"state"
:
"string"
,
"zip_code"
:
"string"
}
]
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"items"
:
[
{
"id"
:
"string"
,
"name"
:
"string"
,
"deliveryTime"
:
"string"
,
"shippingCosts"
:
{
"value"
:
0
,
"currency"
:
"string"
}
,
"fulfillmentNodes"
:
[
{
"id"
:
"string"
,
"products"
:
[
{
"productId"
:
"string"
,
"quantity"
:
0
}
]
,
"shippingOfferToken"
:
"string"
,
"cost"
:
{
"value"
:
0
,
"currency"
:
"string"
}
}
]
}
]
}
Get in-store pickup options from the NewStore Platform.
Allows collecting an order from a store.
Request Body schema:
application/json
bag
required
Array of
objects
(
InStorePickupOptionsRequestBag
)
location
required
object
A reference geo-location. For example, the location of the customer.
options
required
object
In-store pickup options request parameters.
Responses
200
400
Returned if there is an issue with the address data.
post
/checkout_options/in_store_pickup_options
/sfcc-api/v1
/checkout_options/in_store_pickup_options
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"bag"
:
[
{
"product_id"
:
"string"
,
"quantity"
:
0
}
]
,
"location"
:
{
"geo"
:
{
"latitude"
:
0
,
"longitude"
:
0
}
,
"address"
:
{
"country"
:
"US"
,
"postal_code"
:
"04864"
}
}
,
"options"
:
{
"limit"
:
0
,
"search_radius"
:
0
,
"show_stores_without_atp"
:
true
}
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"items"
:
[
{
"fulfillmentNodeId"
:
"string"
,
"storeId"
:
"string"
,
"storeName"
:
"string"
,
"hasAtp"
:
true
,
"phoneNumber"
:
"string"
,
"cost"
:
{
"currencyCode"
:
"string"
,
"price"
:
0
}
,
"deliveryTime"
:
"string"
,
"distance"
:
0
,
"shippingOfferToken"
:
"string"
,
"address"
:
{
"address1"
:
"string"
,
"address2"
:
"string"
,
"city"
:
"string"
,
"countryCode"
:
"string"
,
"latitude"
:
0
,
"longitude"
:
0
,
"province"
:
"string"
,
"state"
:
"string"
,
"zipCode"
:
"string"
}
}
]
}
Mapping Config
Store mapping config for a catalog.
Stores the mapping config for a particular catalog, which then will be used for the transformation from the SFCC XML to NewStore JSON format.
Request Body schema:
application/json
sfcc_catalog_id
required
string
The Catalog ID as defined in SalesForce Commerce Cloud.
      This ID is read when processing the uploaded input file
      and used to retrieve the associated mapping config.
config
required
object
(
CatalogMappingConfigClassDTO
)
Responses
201
Mapping config was successfully stored.
403
post
/mapping_config/catalog
/sfcc-api/v1
/mapping_config/catalog
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"sfcc_catalog_id"
:
"string"
,
"config"
:
{
"languagesPriority"
:
[
"en-us"
,
"de-de"
,
"x-default"
]
,
"sitesPriority"
:
[
"RefArch"
]
,
"images"
:
{
"include"
:
[
"string"
]
,
"is_swatch_view_type"
:
"string"
,
"pathTemplate"
:
"string"
,
"placeHolder"
:
{ }
}
,
"header"
:
{
"categories"
:
{
"shop"
:
"storefront-catalog-en"
,
"locale"
:
"en-us"
,
"is_master"
:
true
}
,
"products"
:
{
"catalog_id"
:
"storefront-catalog-en"
,
"locale"
:
"en-us"
,
"internal_disable_image_processing"
:
true
,
"is_master"
:
true
,
"searchable_attributes"
:
[
{
"name"
:
"material"
,
"path"
:
"$.material"
,
"weight"
:
1
}
,
{
"name"
:
"color"
,
"path"
:
"$.color"
,
"weight"
:
2
}
]
,
"filterable_attributes"
:
[
{
"name"
:
"color"
,
"path"
:
"$.color"
}
]
}
}
,
"properties_mapping"
:
{ }
,
"categories"
:
{
"assign_unassigned_to_root"
:
true
}
}
}
Get all catalog mapping configurations for a tenant.
Retrives all catalog mapping configurations for a particular tenant. These will be used for the transformation from the SFCC XML to NewStore JSON format.
Responses
200
Mapping configurations successfully retrieved.
403
get
/mapping_config/catalog
/sfcc-api/v1
/mapping_config/catalog
Store mapping config for a pricebook import.
Stores the mapping config for pricebook imports, which then will be used for the transformation from SFCC XML to NewStore JSON.
Request Body schema:
application/json
config
required
object
Responses
201
Mapping config was successfully stored.
403
post
/mapping_config/pricebook
/sfcc-api/v1
/mapping_config/pricebook
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"config"
:
{ }
}
Get all pricebook mapping configurations for a tenant.
Retrive all pricebook mapping configurations for a particular tenant. These will be used for the transformation from the SFCC XML to NewStore JSON format.
Responses
200
Pricebook Mapping configurations successfully retrieved.
403
get
/mapping_config/pricebook
/sfcc-api/v1
/mapping_config/pricebook
Store mapping config for a availability.
Stores the mapping config for a particular availability list, which then will be used for the transformation from NewStore JSON format to SFCC XML.
Request Body schema:
application/json
inventory_list_id
required
string
config
required
object
Responses
201
Mapping config was successfully stored.
403
post
/mapping_config/availability
/sfcc-api/v1
/mapping_config/availability
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"inventory_list_id"
:
"string"
,
"config"
:
{ }
}
Get all availability mapping configurations for a tenant.
Retrive all availability mapping configurations for a particular tenant. These will be used for the transformation from the SFCC XML to NewStore JSON format.
Responses
200
Availability Mapping configurations successfully retrieved.
403
get
/mapping_config/availability
/sfcc-api/v1
/mapping_config/availability
Store mapping config for inventory lists.
Stores the mapping config for a particular inventory list, which then will be used for the transformation from SFCC XML to NewStore JSON format.
Request Body schema:
application/json
inventory_list_id
required
string
config
required
object
Responses
201
Mapping config was successfully stored.
403
post
/mapping_config/inventory
/sfcc-api/v1
/mapping_config/inventory
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"inventory_list_id"
:
"string"
,
"config"
:
{ }
}
Get all inventory mapping configurations for a tenant.
Retrive all inventory mapping configurations for a particular tenant. These will be used for the transformation from the SFCC XML to NewStore JSON format.
Responses
200
Inventory Mapping configurations successfully retrieved.
403
get
/mapping_config/inventory
/sfcc-api/v1
/mapping_config/inventory
Mapping Script
Store mapping script for a catalog.
Stores the mapping for a catalog.
query
Parameters
sfcc_catalog_id
required
string
Responses
201
Catalog Mapping script was successfully stored.
403
post
/mapping_script/catalog
/sfcc-api/v1
/mapping_script/catalog
Store mapping script for an order.
Stores the mapping script for an order.
Responses
201
Mapping script was successfully stored.
403
post
/mapping_script/order
/sfcc-api/v1
/mapping_script/order
Get the latest order mapping script
Get the latest order mapping script
Responses
200
Latest order mapping script
403
Client is not authorized to perform this request
404
No order mapping file available for download
500
Internal server error
get
/mapping_script/order
/sfcc-api/v1
/mapping_script/order
Previous
Catalog Locale Manager API
Next
Delivery API
Copyright Â© 2025 NewStore, Inc.