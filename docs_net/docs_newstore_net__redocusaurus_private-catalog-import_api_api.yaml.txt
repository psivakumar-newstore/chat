openapi: 3.0.0
info:
  title: Import Data API
  version: v0
  description: >
    Use import jobs to import products, categories, price books, and stock on
    hand, into NewStore.

    For more information on how to prepare your data and import it, see
    [Importing data](/docs/development/integration/importdata.html) in our
    documentation.


    ### Products


    The only way you can create or update products, is by importing them into
    NewStore.


    A product in NewStore refers to a stock-keeping unit (SKU). For example,
    **Toby Sweater, Black, Size 6**, and **Toby Sweater

    Beige, Size 6**, are `variants` and have different `SKUs`. They are created
    as two separate products, and in this example, they belong to the same
    variant group.


    Products are imported into a shop for a specific locale. A `shop` represents
    the hierarchical entity into which you import products and categories. It is
    not a physical store.


    The product details that you provide during import determine the product
    attributes that are displayed in NewStore applications and the information
    that is included in reports.


    To understand the JSON schema for importing `products`, see

    [JSON schema for products](#import_products_post). **Do not** use this
    method to import products. This is only documentation of the schema.


    To import products, use the import process described in [Importing
    data](/docs/development/integration/importdata.html).


    ### Categories


    The only way you can create or update product categories, is by importing
    them into NewStore.


    A category refers to the hierarchy applied to your products, in order to
    organize them. Product categories may differ across different sales
    channels. For example, the category for Toby Sweater Black Size 6, could be
    **Shop > Clothing**  or **Featured > Winter**.


    Categories are imported into a `shop`, and for a specific `locale`.


    To understand the JSON schema for importing ``categories``, see

    [JSON schema for categories](#import_categories_post). **Do not** use this
    method to import categories.  This is only the documentation of the schema.


    To import categories, use the import process described in [Importing
    data](/docs/development/integration/importdata.html).


    ### Price books


    The only way you can create or update price books, is by importing them into
    NewStore.


    A price book is a collection of prices for products, in a specific currency.
    You can import multiple price books. For example, each sales channel can
    have a different price book.


    To understand the the JSON schema for importing `price books`, see

    [JSON schema for price books](#import_prices_post). **Do not** use this
    method to import price books. This is only documentation of the schema.


    To import your price books, use the import process described in [Importing
    data](/docs/development/integration/importdata.html).


    ### Stock on hand


    The only way you can create or update stock on hand, is by importing it into
    NewStore.


    Stock on hand refers to the total inventory, at a particular time. Unlike
    products, you import stock on hand into a fulfillment location (distribution
    center), and not into a `shop`.


    To understand the JSON schema for importing `stock on hand`, see

    [JSON schema for stock on hand](#import_availability_post). **Do not** use
    this method to import stock on hand.  This is only the documentation of the
    schema.


    To import stock on hand, use the import process described in [Importing
    data](/docs/development/integration/importdata.htm).


    ### Distribution Centers


    There is no explicit way to create distribution centers (DCs) on your own.
    When you import stock on hand, the location of the stock is automatically
    created as a `fulfillment_node_id` in NewStore.


    To indicate that the fulfillment location in `fulfillment_node_id` is a
    distribution center, ensure that the `store_id` is `null`. See [JSON schema
    for stock on hand](#import_availability_post). **Do not** use this method to
    import stock on hand.  This is only the documentation of the schema.


    NewStore can create DCs for your business. For more information, contact
    [NewStore Support](mailto:support@newstore.com).
servers:
  - url: https://dodici.x.newstore.net/v0/d
security:
  - newStoreAccessToken: []
paths:
  /import:
    post:
      summary: Create an import job to import data into NewStore
      operationId: create-import-job
      description: >
        Creates an import job to import data into NewStore. The job will not be
        processed automatically.

        To process it, call the [Start import job
        method](#/start-start-import-job).


        **Important**: The import job's `source_uri` property must point to a
        ZIP file for each entity. The

        uncompressed file size must be lower than 240 MB for products. For other
        import entities, the file size

        must be lower than 80 MB.
      requestBody:
        content:
          application/json:
            example:
              provider:
name: product_import_20170306
              source_uri: https://some-uri-location/my_data.zip
              entities:
                - products
                - categories
                - prices
              full: true
            schema:
              type: object
              description: Contains an array of products.
              required:
                - provider
                - source_uri
                - entities
              properties:
                provider:
                  type: string
                  description: >-
                    The name of the provider of the data, for example,
                    Salesforce Commerce Cloud.
                source_uri:
                  type: string
                  format: uri
                  description: >-
                    File location of the original file from the provider (only
                    for information). The uncompressed file size per entity must
                    be lower than 80 MB.
                name:
                  type: string
                  description: The name of the job.
                revision:
                  type: integer
                  description: >-
                    DEPRECATED: The revision will be automatically generated as
                    a Unix timestamp.
                type:
                  type: string
                  description: >-
                    DEPRECATED: The type of the job. Use the 'entities' property
                    instead.
                entities:
                  type: array
                  description: >-
                    The type of data provided in this request. The possible
                    values of this fields also determine the naming convention
                    of the JSON files you might import in a ZIP file via the
                    'POST /import/{import_id}/start' method.
                  items:
                    type: string
                    enum:
                      - products
                      - categories
                      - availabilities
                      - prices
                      - dwre_orders
                  uniqueItems: true
                full:
                  type: boolean
                  description: >-
                    Determines if the job is a full or a partial import. A full
                    import deletes the existing data and imports the new data. A
                    partial import adds data on top of existing data.
                  default: false
        required: true
      responses:
        '201':
          description: >
            The import request has been submitted successfully. The job's state
            is `received`.

            To process it, call the [Start import job
            method](#/start-start-import-job).


            Use the [Get import job method](#/{import_id}-get-import-job) with
            returned `import_id` to check the import job's status.
          content:
            application/json:
              schema:
                type: object
                description: Provides the ID for the newly created import job.
                properties:
                  id:
                    description: >-
                      Unique identifier of the created import job. Use it to
                      retrieve the import job status via the 'GET
                      /import/{import_id}' method.
                    type: string
        '422':
          description: >
            This error can occur when you try to create an import job with an
            erroneous `type` property.

            To fix this issue, use the 'entities' property instead.
        '429':
          description: >
            This error occurs if imports are disabled and:

            - You reach the configured rate limit for import jobs with one or
            more of the imported entities.

            - You create too many import jobs in a short timeframe, for example
            more than 60 imports in less than 15 minutes.

            The import job is rejected. Enable imports and then restart the
            specified import job.

            To restart the import job, contact the support team.
        '500':
          description: Internal server error.
    get:
      summary: List import jobs
      operationId: list-import-jobs
      description: >
        Returns a list of import jobs.


        **Note:** Import jobs are deleted after 30 days and not returned by this
        method anymore.**
      responses:
        '200':
          description: The list of import jobs.
          content:
            application/json:
              schema:
                type: object
                description: Provides a list of import jobs.
                required:
                  - items
                allOf:
                  - type: object
                    description: Contains default fields for paginatable APIs.
                    required:
                      - pagination_info
                    properties:
                      pagination_info:
                        type: object
                        required:
                          - count
                          - total
                          - offset
                          - prev_url
                          - next_url
                        properties:
                          count:
                            description: Contains the count of the contained array.
                            type: integer
                          total:
                            description: >-
                              Contains the total count of documents. This
                              property is 'null' if the API is not able to
                              determine the total count.
                            type: integer
                            nullable: true
                          offset:
                            description: Contains the current offset.
                            type: integer
                          prev_url:
                            description: >-
                              An URI that can be used to get the previous page.
                              This property is 'null' if the current page is
                              equal to the first page.
                            type: string
                            format: uri
                            nullable: true
                          next_url:
                            description: >-
                              A URI that can be used to get the next page. This
                              property is 'null' if the current page is equal to
                              the last page.
                            type: string
                            format: uri
                            nullable: true
                  - type: object
                    properties:
                      items:
                        type: array
                        description: A list of information about all the import jobs.
                        items:
                          type: object
                          description: Provides the status for the import request.
                          properties:
                            import_id:
                              type: string
                              description: The unique identifier of the job.
                            entities:
                              type: array
                              description: The type of data provided in the import job.
                              items:
                                type: string
                                enum:
                                  - products
                                  - categories
                                  - availabilities
                                  - prices
                              minItems: 1
                              uniqueItems: true
                            received_at:
                              type: string
                              format: date-time
                              description: >-
                                The UTC timestamp indicating when the
                                corresponding import request was received.
                            completed_at:
                              type: string
                              format: date-time
                              description: >-
                                The UTC timestamp indicating when the import
                                request was completed.
                            name:
                              type: string
                              description: The name of the job.
                            state:
                              type: string
                              description: >-
                                The state of the import job. When all import
                                chunks failed, the state is 'failed' . When all
                                chunks are done and at least one chunk was
                                successfully processed, the state is 'finished'
                                otherwise the state is in 'progress'.
                              enum:
                                - received
                                - waiting
                                - processing
                                - failed
                                - finished
                                - cleaning
                            full:
                              type: boolean
                              description: >-
                                Determines if the job is a full or a partial
                                import. A full import deletes the existing data
                                and imports the new data. A partial import adds
                                data on top of existing data.
                              default: false
        '400':
          description: >
            The requested count and offset resulted in a list fragment greater
            than the maximum count

            of the import job list. Change your pagination parameters.
        '500':
          description: |
            An error occurred while trying to retrieve the list of import jobs.
  /import/{import_id}:
    parameters:
      - name: import_id
        in: path
        required: true
        schema:
          type: string
        description: >-
          Identifier received in the response of [Create import job
          method](#import-jobs-create-import-job)
    get:
      summary: Get the status of an import job
      operationId: get-import-job
      description: >
        Retrieves the status information of the specified import job. See the
        [list of
        statuses](/docs/development/api/guides/importdata.html#job-statuses) for
        more information.


        **Important:** The `finished` status does not mean there were no errors.


        **Related methods:**

        - [Get import chunk](#/chunks-get-import-chunk)

        - [List import errors](#/errors-list-errors-for-import)

        - [Start import job](#/start-start-import-job)


        **Note:** Import jobs are deleted after 30 days and not returned by this
        method anymore.**
      responses:
        '200':
          description: |
            The current status of the import job.
          content:
            application/json:
              example:
                import_id: 39029b6c-7eb9-4eb3-8823-7f4f8f6e4252
                entities:
                  - prices
                source: ''
                provider:
source_uri: https://some-uri-location/my_data.zip
                transformed_uri: https://some-uri-location/my_data.zip
                revision: 1510828770
                name: product_import_20170306
                received_at: '2017-11-16T10:39:30.888848149Z'
                completed_at: '2017-11-16T10:39:33.03405691Z'
                state: finished
                reason: ''
                full: true
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '404':
          description: No job with the given import_id exists.
        '500':
          description: |
            An error occurred while trying to retrieve the import job status.
    put:
      summary: Update an import job
      operationId: update-import-job
      description: >
        Updates the import job.


        For example, this method can

        be used to start a job (created using [Create import
        job](#import-jobs-create-import-job)) by

        setting `transformed_uri` and `state` to `processing`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Updates the import job
              properties:
                transformed_uri:
                  type: string
                  format: uri
                  description: >-
                    File location of the transformed file, this field cannot be
                    set to a different value after it's set the first time.
                state:
                  type: string
                  description: The new state of the import job.
                  enum:
                    - processing
        required: true
      responses:
        '200':
          description: >
            The import request has been submitted successfully and will be
            processed.


            Use the [Get import job method](#/{import_id}-get-import-job) to
            check the import job's status.
          content:
            application/json:
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '400':
          description: |
            The body contains wrong data.
        '404':
          description: |
            The import job ID could not be found.
        '500':
          description: |
            An error occurred while trying to update the import job.
      deprecated: true
      x-annotation-deprecated:
        since: 03/2017
        replaceWith: Use the [Start import job method](#/start-start-import-job) instead.\n
  /import/{import_id}/start:
    parameters:
      - name: import_id
        in: path
        required: true
        schema:
          type: string
        description: >-
          Identifier received in the response of [Create import job
          method](#import-jobs-create-import-job)
    post:
      summary: Queue the import job for processing
      operationId: start-import-job
      description: >
        Adds the import job to the processing queue. It is automatically
        processed when it reaches the 1st position of the queue.


        After you call this method, the following updates happen:


        1- The state of the job is automatically updated:
           - While the job is waiting to be processed, `state` is set to `waiting`, and the job starts when previous waiting jobs have been processed.
           - When the job is being processed, the `state` is set to `processing`.

        2- The import job `transformed_uri` property is set. This field must
        point to a ZIP file containing all the JSON files to import.

        This field cannot point to a JSON file.


        Each JSON file must:

        - Contain only one type of entity, formatted as described in the
        `/products`, `/availability`, `/categories`
          and `/prices` methods.
        - Have the entity type it describes ("products", "categories",
        "availabilities", "prices")
          in its path/filename.

          For example, if you have a file containing the prices of your products, you can name it `prices_1.json`.

        **Related methods:**

        - [Get import job](#/{import_id}-get-import-job)

        - [Get import chunk](#/chunks-get-import-chunk)

        - [List import errors](#/errors-list-errors-for-import)


        **Note:** Import jobs are deleted after 30 days and not handled by this
        method anymore.**
      requestBody:
        content:
          application/json:
            example:
              transformed_uri: >-
                https://assets.mycompany.com/integrations/newstore/products-transformed-1536677418000.zip
            schema:
              type: object
              description: Requires the transformed URI in order to start the import job
              required:
                - transformed_uri
              properties:
                transformed_uri:
                  type: string
                  format: uri
                  description: >-
                    URI to the ZIP file containing the source files in the
                    required NewStore JSON format. This field cannot be set to a
                    different value once it's been set the first time. Each JSON
                    file in the ZIP file must contain the entity type it
                    represents in its filename. For example, if you have a file
                    for prices, it must contain 'prices' in its filename. The
                    list of entity names can be found in the 'Create import job'
                    method documentation. This URI must be either an HTTPS URIs
                    or an Amazon S3 bucket URI, and NewStore must have acces to
                    it.
                  minLength: 1
        required: true
      responses:
        '200':
          description: >
            The import request has been submitted successfully.

            Use the [Get import job method](#/{import_id}-get-import-job) to
            check the import job's status.
          content:
            application/json:
              example:
                cleaned_entities: null
                completed_at: null
                created_by: 22IB3UROr1S3Je9hDaRh7f
                entities:
                  - products
                import_id: 90955bbb-74a6-490b-80d0-fb20e459118c
                name: Scheduled Products Import Job
                provider: Salesforce Commerce Cloud
                reason: ''
                received_at: '2018-09-11T14:50:19.272756Z'
                revision: 1536677419000
                source: ''
                source_uri: >-
                  s3://aws.amazon.com/mycompany/erp/export/products/products-export-1536677417000.xml
                state: waiting
                transformed_uri: >-
                  https://assets.mycompany.com/integrations/newstore/products-transformed-1536677418000.zip
                version: 0
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '400':
          description: |
            The body contains wrong data.
        '404':
          description: |
            The import job ID could not be found.
        '500':
          description: |
            An error occurred while trying to start the import job.
  /import/{import_id}/errors:
    parameters:
      - name: import_id
        in: path
        required: true
        schema:
          type: string
        description: >-
          Identifier received in the response of [Create import job
          method](#import-jobs-create-import-job)
    get:
      summary: List errors for import job
      operationId: list-errors-for-import
      description: >
        Retrieves a list of errors for the specified import job.


        **Note:** Import jobs are deleted after 30 days and not returned by this
        method anymore.**
      responses:
        '200':
          description: |
            Current errors of the import job.
          content:
            application/json:
              examples:
                all_good:
                  value:
                    items: []
                image_not_found:
                  value:
                    items:
                      - entity_type: images
                        entity_id: >-
                          http://newstore-assets-75124431543-useast1.s3-website-us-east-1.amazonaws.com/abcd/someimage.jpg
                        reason: >-
                          inspecting item {ctx:{UserID:0ce50c9b6b517a9add277c
                          RequestID:5341.3.364 Tenant:abcd
                          CorrelationIDs:map[import_id:030f09ec-b2]} stage:x
                          url:http://newstore-assets-751244-website-us-east-1.amazonaws.com/absc/tank_back.jpg
                          receivedAt:{sec:63645845363 nsec:748581294 loc:
}
                          result:0xc42024c060} failed: error while calculating
                          file information: non-200 status code 404 while
                          fetching source file with url:
                          http://newstore-assets-7555644-website-us-east-1.amazonaws.com/absc/someimage.jpg
                        created_at: '2017-11-09T17:29:47.459703Z'
                zip_file_invalid:
                  value:
                    items:
                      - entity_type: products
                        entity_id: MWTASMA04QE001
                        reason: >-
                          variation_size_gender must be one of the following:
                          'male', 'female', 'unisex'
                        created_at: '2020-01-20T15:35:44.784951Z'
                wrong_definitions:
                  value:
                    items:
                      - entity_type: products
                        entity_id: '2359717'
                        reason: 'Invalid type. Expected: number, given: string'
                        created_at: '2018-10-26T08:36:35.283416Z'
                path_required:
                  value:
                    items:
                      - entity_type: categories
                        entity_id:
reason: path is required
                        created_at: '2017-04-09T09:11:35.141803Z'
                import_chunk_error:
                  value:
                    items:
                      - entity_type: availabilities
                        entity_id: 7f86a2a9-4e66-4761-b044-42399ddced78
                        reason: failing item as whole import chunk failed
                        created_at: '2018-06-06T22:12:14.194537Z'
              schema:
                type: object
                description: Provides the error log information for the import request.
                required:
                  - items
                properties:
                  items:
                    type: array
                    description: The import error message.
                    items:
                      title: Import item error
                      type: object
                      description: Import item error message.
                      required:
                        - entity_type
                        - entity_id
                        - reason
                        - created_at
                      properties:
                        entity_type:
                          type: string
                          description: Type of the entity to be imported.
                          enum:
                            - products
                            - categories
                            - availabilities
                            - prices
                            - images
                        entity_id:
                          type: string
                          description: Entity ID of the import log (product id, image url).
                        reason:
                          type: string
                          description: Import log message entry.
                        created_at:
                          type: string
                          format: date-time
                          description: >-
                            The UTC timestamp that indicates when the
                            corresponding import log error was recorded.
        '404':
          description: |
            The import job ID could not be found.
        '500':
          description: |
            An error occurred while trying to retrieve the import job errors.
    post:
      summary: Persist import errors
      operationId: save-import-errors
      description: >
        Saves import errors to the database. Use it to report errors occurring
        during an import.

        For example, transformation services, integration scripts such as lambda
        functions can call this method to report errors.


        **Note:** Import jobs are deleted after 30 days and not handled by this
        method anymore.**
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: import item error schema
              items:
                type: object
                required:
                  - error_id
                  - entity_type
                  - entity_id
                  - reason
                properties:
                  error_id:
                    type: string
                    description: A random uuid that identify this error
                    format: uuid
                  entity_type:
                    type: string
                    description: The import entity for which this error occurred.
                    enum:
                      - products
                      - categories
                      - availabilities
                      - prices
                  entity_id:
                    type: string
                    description: The ID of the import item which failed to be imported.
                  reason:
                    type: string
                    description: >-
                      The error message or reason why an item failed to be
                      imported.
        required: true
      responses:
        '200':
          description: |
            The errors have been saved.
          content:
            application/json:
              schema:
                type: array
                description: post import item error response schema
                items:
                  type: object
                  properties:
                    acknowledged:
                      type: boolean
                      description: >-
                        Indicates if the provided import item errors where
                        successfully pushed to the related import job.
        '400':
          description: |
            The body contains wrong data.
        '404':
          description: |
            The import job ID could not be found.
        '500':
          description: |
            An error occurred while trying to save the import job errors.
  /import/{import_id}/chunks:
    parameters:
      - name: import_id
        in: path
        required: true
        schema:
          type: string
        description: >-
          Identifier received in the response of [Create import job
          method](#import-jobs-create-import-job)
    get:
      summary: Get chunk information for import job
      operationId: get-import-chunk
      description: >
        Retrieves chunk information for the specified import job.


        A import job is split into chunks of items. Use this method to get
        information about each of these chunks.

        Chunks are only created once the import job has reached the `processing`
        status.


        **Related methods:**

        - [Get import job](#/{import_id}-get-import-job)


        **Note:** Chunks are deleted after 30 days and not returned by this
        method anymore.**
      responses:
        '200':
          description: |
            Current chunks of the specified import job.
          content:
            application/json:
              example:
                items:
                  - chunk_id: 6424454cf0aae3e1ef4362f308d880f4714908dd
                    created_at: '2017-11-16T10:39:31.42703Z'
                    completed_at: '2017-11-16T10:39:31.457705Z'
                    size: 1
                    failed: false
                    failure_message: ''
                  - chunk_id: d21d20cfc5450e9b3412ff584fff1902c4300424
                    created_at: '2017-11-16T10:39:31.451872Z'
                    completed_at: '2017-11-16T10:39:31.730535Z'
                    size: 50
                    failed: false
                    failure_message: ''
              schema:
                type: object
                description: Provides chunk information for the import request.
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      title: Import job chunk information.
                      properties:
                        chunk_id:
                          description: Identifier of the chunk.
                          type: string
                        created_at:
                          description: Time when the chunk was created.
                          type: string
                          format: date-time
                        completed_at:
                          description: Time when the chunk processing was completed.
                          type: string
                          format: date-time
                          nullable: true
                        size:
                          description: Number of items in the chunk.
                          type: integer
                        failed:
                          description: Indicates if this chunk failed to be processed.
                          type: boolean
                        failure_message:
                          description: The reason of the failure.
                          type: string
        '404':
          description: |
            The import job ID could not be found.
        '500':
          description: >
            An error occurred while trying to retrieve the chunks of the import
            job.
  /import/{import_id}/set_fail:
    parameters:
      - name: import_id
        in: path
        required: true
        schema:
          type: string
        description: >-
          Identifier received in the response of [Create import job
          method](#import-jobs-create-import-job)
    post:
      summary: Set an import job to failed
      operationId: set-status-to-failed
      description: >
        Sets the specified import job's status to `failed` for the provided
        reason.


        **Related methods:**

        - [Get import job](#/{import_id}-get-import-job)

        - [List import errors](#/errors-list-errors-for-import)


        **Note:** Import jobs are deleted after 30 days and not handled by this
        method anymore.**
      requestBody:
        content:
          application/json:
            example:
              reason: incorrect data
            schema:
              type: object
              description: Contains the reason why the import job failed.
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: The reason why the import job failed.
                  minLength: 1
        required: true
      responses:
        '200':
          description: >
            The import job's status has been set to `failed` for the provided
            reason.
          content:
            application/json:
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '404':
          description: |
            The import job ID could not be found.
        '500':
          description: |
            An error occurred while trying to retrieve update the import job.
  /import/availability:
    post:
      summary: Availability JSON schema
      operationId: stock
      description: >
        This JSON schema represents the expected structure of the availability
        data for a successful

        import.


        **Do not use this method for integration tasks.** This schema is
        presented here as reference documentation only.


        See the [import data
        tutorial](/docs/development/tutorials/import-data.html) to learn how to
        import data.

        To import your data, use the [Create import job
        method](#import-jobs-create-import-job), and the [Start import job
        method](#/start-start-import-job).
      requestBody:
        content:
          application/json:
            examples:
              import_products_with_timestamps:
                value:
                  head:
                    store_mapping:
                      - store_id: b99c8c93-b4ea-4eb1-a037-f7e79b71700e
                        fulfillment_node_id: US01
                    mode: atp
                  items:
                    - product_id: '1000101'
                      quantity: 100
                      fulfillment_node_id: US01
                      revision: 1531156343845
                    - product_id: '1000102'
                      quantity: 100
                      fulfillment_node_id: US01
                      revision: 1531156343845
              import_products_with_future_inventory:
                value:
                  head:
                    store_mapping:
                      - store_id: null
                        fulfillment_node_id: DC01
                    mode: atp
                  items:
                    - product_id: '1000101'
                      future_inventory:
                        quantity: 100
                        date: '2020-01-01T00:00:00.000Z'
                      fulfillment_node_id: US01
                      revision: 1531156343845
              import_products_with_future_and_regular_inventory:
                value:
                  head:
                    store_mapping:
                      - store_id: null
                        fulfillment_node_id: DC01
                    mode: atp
                  items:
                    - product_id: '1000101'
                      quantity: 50
                      future_inventory:
                        quantity: 100
                        date: '2020-01-01T00:00:00.000Z'
                      fulfillment_node_id: US01
                      revision: 1531156343845
            schema:
              type: object
              description: >-
                Contains an array of availability entries to set the stock on
                hand. When the import job API (i.e. using /import/
/start) is
                used for availability import, the json data is only validated
                when import job starts. If validation fails here, the import job
                could fail or, remain in 'processing' state (in some edge-cases)
                Refer to the description of each property below for details.
              required:
                - head
                - items
              properties:
                head:
                  type: object
                  properties:
                    store_mapping:
                      type: array
                      description: Assigns a NewStore store ID to a fulfillment node.
                      items:
                        type: object
                        properties:
                          store_id:
                            type: string
                            description: Identifier of the store in the NewStore platform.
                            nullable: true
                          fulfillment_node_id:
                            type: string
                            description: >-
                              Identifier of the fulfillment node in the NewStore
                              platform. This value can be equal to the
                              'store_id'.
                    mode:
                      type: string
                      description: >-
                        The mode of the availability import.
                         On_hand: When this value is specified, the import quantity is set as the stock on hand for the product in the specified fulfillment location in the platform. Allocations for items that have not been shipped and safety stock will be deducted to calculate the ATP for the product.
                        ATP: When this value is specified, the import quantity
                        is set as the ATP of the product at the fulfillment
                        location. No adjustments are made to this value.
                      enum:
                        - on_hand
                        - atp
                      default: on_hand
                items:
                  type: array
                  minLength: 1
                  items:
                    title: Availability
                    type: object
                    oneOf:
                      - required:
                          - product_id
                          - fulfillment_node_id
                          - quantity
                        not:
                          required:
                            - future_inventory
                        description: >-
                          Provide 'quantity' to set the current inventory for
                          the specific product.
                      - required:
                          - product_id
                          - fulfillment_node_id
                          - future_inventory
                        not:
                          required:
                            - quantity
                        description: >-
                          Provide 'future_inventory' to set the future inventory
                          for the specific product.
                      - required:
                          - product_id
                          - fulfillment_node_id
                          - quantity
                          - future_inventory
                        description: >-
                          Provide values for both 'quantity' and
                          'future_inventory' when you want to set current and
                          future inventory.
                    properties:
                      product_id:
                        type: string
                        minLength: 1
                        description: >-
                          The unique identifier of the product to which this
                          availability update applies.
                      quantity:
                        type: integer
                        minimum: 0
                        description: >-
                          Current quantity in the specified store, as identified
                          by the 'fulfillment_node_id'.
                      future_inventory:
                        type: object
                        required:
                          - quantity
                          - date
                        description: >-
                          Sets the future inventory for the specified product at
                          the fulfillment location.
                        properties:
                          quantity:
                            type: integer
                            minimum: 0
                            description: >-
                              Specifies the number of items that will be
                              available on the specified 'date'.
                          date:
                            type: string
                            description: >-
                              Specifies the date when the future inventory
                              becomes available. Use this format: 'YYYY-MM-DD'.
                            example: '2020-12-25'
                      distribution_location_label:
                        type: string
                        description: >-
                          DEPRECATED: Label which uniquely identifies the
                          `DistributionLocation`.
                        maxLength: 256
                      fulfillment_node_id:
                        type: string
                        description: >-
                          Label which uniquely identifies the `FulfillmentNode`.
                          A fulfillment node typically represents a place able
                          to store and fulfill products.
                        minLength: 1
                        maxLength: 256
                      revision:
                        type: integer
                        description: >-
                          Revision of the current item in Unix epoch time in
                          milliseconds.
                        minimum: 1
                      bin_locations:
                        type: array
                        items:
                          type: string
                        description: Bin Locations of items in StorageLocation.
        required: true
      responses:
        '200':
          description: >
            The import request has been submitted successfully and will be
            processed.


            Use the [Get import job method](#/{import_id}-get-import-job) with
            returned `import_id` to check the import job's status or

            open the returned `status_url`.
          content:
            application/json:
              example:
                cleaned_entities: null
                completed_at: null
                created_by: c77ae36c-42e9-4eb1-ae65-8b7b3047012a
                entities:
                  - availabilities
                import_id: 5779319e-facd-46e9-b03c-cd521f10235e
                name: availabilities_import
                provider: ''
                reason: ''
                received_at: '2018-07-09T19:49:43.604058278Z'
                revision: 1531165783604
                source: ''
                source_uri: ''
                state: processing
                transformed_uri: ''
                version: 0
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '500':
          description: |
            A server error occurred. Try again later.
      parameters:
        - name: full
          in: query
          description: >-
            Determines if the job is a full or partial import. Defaults to
            false.
          schema:
            type: boolean
      deprecated: true
      x-annotation-deprecated:
        since: 01/2017
        replaceWith: >-
          Use the [Create import job method](#import-jobs-create-import-job)
          instead.
  /import/categories:
    post:
      summary: Category JSON schema
      operationId: categories
      description: >
        This JSON schema represents the expected structure of the category data
        for a successful

        import.


        **Do not use this method for integration tasks.** This schema is
        presented here as reference documentation only.


        See the [import data
        tutorial](/docs/development/tutorials/import-data.html) to learn how to
        import data.

        To import your data, use the [Create import job
        method](#import-jobs-create-import-job), and the [Start import job
        method](#/start-start-import-job).


        **Deprecated:** Use the [Create import job
        method](#import-jobs-create-import-job) instead.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Contains an array of categories.
              required:
                - head
                - items
              allOf:
                - type: object
                  properties:
                    head:
                      type: object
                      anyOf:
                        - required:
                            - shop
                            - locale
                          properties:
                            shop:
                              type: string
                              description: Identifier of the shop using these categories.
                            locale:
                              type: string
                              description: The language of the categories.
                            is_master:
                              type: boolean
                              description: >-
                                Defines whether the imported locale is the
                                master one. If this value is omitted, the
                                imported locale is treated as master locale.
                              default: true
                        - required:
                            - catalog
                            - locale
                          properties:
                            catalog:
                              type: string
                              description: >-
                                Identifier of the catalog using these
                                categories.
                            locale:
                              type: string
                              description: The language of the categories.
                            is_master:
                              type: boolean
                              description: >-
                                Defines whether the imported locale is the
                                master one. If this value is omitted, the
                                imported locale is treated as master locale.
                              default: true
                - type: object
                  properties:
                    items:
                      type: array
                      minLength: 1
                      items:
                        title: Category
                        type: object
                        description: >-
                          Category object. A category is an arbitrary group of
                          products that are related. For example, shoes or
                          accessories. Categories are typically organized
                          hierarchically. For example 'Shop > Shoes > Sandals'.
                          Some of these fields are not used by default but can
                          be manipulated via the NewStore SDK to be exposed in
                          the Consumer App or the Associate App.
                        required:
                          - path
                        properties:
                          path:
                            description: >-
                              The hierarchy of the category. Categories and
                              sub-categories must be separated by an angle
                              bracket ([space]>[space]). For example, 'Shop >
                              Clothing > Jackets'.
                            type: string
                          description:
                            description: The description of the category.
                            type: string
                          images:
                            type: array
                            items:
                              type: object
                              title: Category Image
                              description: Information about a category image.
                              required:
                                - url
                              properties:
                                url:
                                  description: >-
                                    Category image URL. The server hosting the
                                    images must be available to NewStore.
                                  type: string
                                  format: uri
                                title:
                                  description: Category image title.
                                  type: string
                                identifier:
                                  type: string
                                  description: >-
                                    Category image identifier (e.g.
                                    image-top-1).
                                is_main:
                                  type: boolean
                                  description: >-
                                    Identifies the main image. The image that is
                                    considered the 'main image' is the first
                                    image of the category that
                                    consumers/associates see in the
                                    applications.
                                alt_text:
                                  description: >-
                                    The alternative text for the image, used if
                                    the image fails to be displayed.
                                  type: string
                                  nullable: true
                                tags:
                                  description: Tenant-specific tags.
                                  type: array
                                  items:
                                    type: string
                          keywords:
                            description: >-
                              List of keywords describing the category. By
                              default, this field has no effect in the NewStore
                              applications.
                            type: array
                            minItems: 0
                            items:
                              type: string
                          position:
                            description: >-
                              The position of this category in the category
                              listing in the NewStore applications. By default,
                              this field has no effect in the NewStore
                              applications.
                            type: integer
                          google_category:
                            type: string
                            description: >-
                              The size category of the products in this
                              category.
                            enum:
                              - clothing
                              - shoes
                              - hat
                              - gloves
                              - none
                          extended_attributes:
                            description: >-
                              A collection of key-value pairs for custom
                              diversification of the product category. By
                              default, you can include a maximum of 500 extended
                              attributes.
                            maxItems: 500
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  description: >-
                                    The name or key of the extended attribute.
                                    By default, the length of the name can be a
                                    maximum of 250 characters.
                                  maxLength: 250
                                  type: string
                                value:
                                  description: >-
                                    The value of the extended attribute. By
                                    default, the length of the value can be a
                                    maximum of 2000 characters.
                                  maxLength: 2000
                                  type: string
        required: true
      responses:
        '200':
          description: >
            The import request has been submitted successfully and will be
            processed.


            Use the [Get import job method](#/{import_id}-get-import-job) with
            returned `import_id` to check the import job's status or

            open the returned `status_url`.
          content:
            application/json:
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '500':
          description: |
            A server error occurred. Try again later.
      parameters:
        - name: full
          in: query
          description: >-
            Determines if the job is a full or partial import. Defaults to
            false.
          schema:
            type: boolean
      deprecated: true
      x-annotation-deprecated:
        since: 03/2017
        replaceWith: Use the [Start import job method](#/start-start-import-job) instead.\n
  /import/prices:
    post:
      summary: Pricebook JSON schema
      operationId: price-books
      description: >
        This JSON schema represents the expected structure of the price data for
        a successful

        import.


        **Do not use this method for integration tasks.** This schema is
        presented here as reference documentation only.


        See the [import data
        tutorial](/docs/development/tutorials/import-data.html) to learn how to
        import data.

        To import your data, use the [Create import job
        method](#import-jobs-create-import-job), and the [Start import job
        method](#/start-start-import-job).


        **Important:** If you want to import several price books in one job, set
        the import type to `true` and create a zip file that contains separate
        price book files.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Contains an array of prices.
              required:
                - head
                - items
              allOf:
                - type: object
                  properties:
                    head:
                      anyOf:
                        - type: object
                          required:
                            - pricebook
                            - catalog
                            - currency
                          properties:
                            pricebook:
                              description: >-
                                The identifier of the pricebook. All product
                                prices for the defined catalog are included to
                                these pricebook. The pricebook that contains the
                                default prices must be named 'default'.
                              type: string
                            catalog:
                              type: string
                              description: >-
                                The catalog to which the products in this
                                pricebook belong to.
                            currency:
                              type: string
                              description: The currency for the prices in this pricebook.
                            traits:
                              type: array
                              items:
                                type: string
                                description: A trait of this pricebook.
                        - type: object
                          required:
                            - pricebook
                            - shop
                            - currency
                          properties:
                            pricebook:
                              description: >-
                                The identifier of the pricebook. All product
                                prices for the defined catalog are included to
                                these pricebook. The pricebook that contains the
                                default prices must be named 'default'.
                              type: string
                            shop:
                              type: string
                              description: >-
                                The shop to which the products in this pricebook
                                belong to.
                            currency:
                              type: string
                              description: The currency for the prices in this pricebook.
                            traits:
                              type: array
                              items:
                                type: string
                                description: A trait of this pricebook.
                - type: object
                  properties:
                    items:
                      type: array
                      minLength: 1
                      items:
                        title: Price
                        type: object
                        description: Price object
                        required:
                          - product_id
                          - value
                        properties:
                          product_id:
                            type: string
                            description: The unique identifier for the product.
                          value:
                            description: Product price for the specific pricebook.
                            type: number
        required: true
      parameters:
        - name: full
          in: query
          description: >
            Determines if the job is a full or partial import. A full import
            deletes the existing data and imports

            the new data. A partial import adds data on top of existing data.
          schema:
            type: boolean
      responses:
        '200':
          description: >
            The import request has been submitted successfully and will be
            processed.


            Use the [Get import job method](#/{import_id}-get-import-job) with
            returned `import_id` to check the import job's status or

            open the returned `status_url`.
          content:
            application/json:
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '500':
          description: |
            A server error occurred. Try again later.
      deprecated: true
      x-annotation-deprecated:
        since: 01/2017
        replaceWith: >
          Use the [Create import job method](#import-jobs-create-import-job)
          instead.
  /import/products:
    post:
      summary: Product JSON schema
      operationId: products
      description: >
        This JSON schema represents the expected structure of the product data
        for a successful

        import.


        **Do not use this method for integration tasks.** This schema is
        presented here as reference documentation only.


        Importing products is complex, you must read the [import data
        tutorial](/docs/development/tutorials/import-data.html)

        to learn how to import data, ensure your products can be listed and that
        their variations are grouped properly in Associate App.


        To import your data, use the [Create import job
        method](#import-jobs-create-import-job),

        and the [Start import job method](#/start-start-import-job).
      requestBody:
        content:
          application/json:
            example:
              head:
                shop: storefront-catalog-en
                locale: en-US
                is_master: true
                filterable_attributes:
                  - name: material
                    path: $.material
                  - name: fit
                    path: $.extended_attributes[?(@.name == 'fit')].value
                searchable_attributes:
                  - name: product_id
                    path: $.product_id
                    weight: 10
                  - name: ean13
                    path: $.external_identifiers[?(@.type == 'ean13')].value
                    weight: 5
              items:
                - product_id: '1000101'
                  variant_group_id: variant_group_10001
                  title: Bohemian Print Cutout Chiffon Maxi Dress
                  caption: >-
                    Our summer-ready chiffon dress features a bohemian print and
                    beaded cut-outs for a textural twist to maxi styles. Full of
                    creativity on every level, it offers delicate transparencies
                    with a pleated hem for extra swish as you move through the
                    summer heat.
                  description: Bohemian Print Chiffon Gathered Waist Silk Dress
                  show_in_listing: true
                  online_to: '2030-04-01T07:00:00Z'
                  images:
                    - url: >-
                        https://mycompany/hoster/images/default/products/SU16/10001_014_Multi_OFR-1.jpg
                      internal_dimension_height: 2000
                      internal_dimension_width: 1414
                      internal_dominant_color: '#F4F2F4'
                      is_main: true
                    - url: >-
                        https://mycompany/hoster/images/default/products/SU16/10001_014_Multi_OSP-2.jpg
                      internal_dimension_height: 2000
                      internal_dimension_width: 1414
                      internal_dominant_color: '#F4F2F4'
                  tax_class_id: standard
                  categories:
                    - path: Promotion Eligible
                    - path: Releases > SUMMER 1
                    - path: Shop > Dresses
                      position: 10
                      is_main: true
                  material: LADIES' 100% SILK WOVEN DRESS
                  country_of_origin: CN
                  product_hts_number: 6204.49.1000
                  shipping_weight_value: 1
                  shipping_weight_unit: lb
                  shipping_dimension_length: 5
                  shipping_dimension_width: 5
                  shipping_dimension_height: 5
                  shipping_dimension_unit: in
                  variation_color_value: Grace Sweater Beige
                  variation_size_value: '4'
                  variation_size_gender: unisex
                  google_category: none
                  variation_size_type: regular
                  variation_size_system: US
                  external_identifiers:
                    - type: sku
                      value: '3825952358'
                    - type: ean13
                      value: '1000101000007'
                  extended_attributes:
                    - name: care
                      value: >-
                        1000101 This product doesn't need special caring
                        instructions. Handwash at 50°F is sufficent enough.
                    - name: fit
                      value: 1000101 Tight
            schema:
              type: object
              description: >-
                Contains an array of products. Importing products is complex,
                read the `import data tutorial` to learn how to import data,
                ensure your products can be listed and that their variations are
                grouped properly in Associate App.
              required:
                - head
                - items
              allOf:
                - type: object
                  properties:
                    head:
                      anyOf:
                        - type: object
                          required:
                            - catalog
                            - locale
                          properties:
                            catalog:
                              type: string
                              description: The catalog those Categories are in.
                            locale:
                              type: string
                              description: >-
                                Determines the language those categories is in.
                                This value is case insensitive and lower-cased
                                internally. It must be in the following
                                format:`[a-z]{2}-[a-z]{2}`.
                            internal_disable_image_processing:
                              type: boolean
                              description: >-
                                Defines if the product images should be uploaded
                                to NewStore's hosting platform. If you set this
                                field to `true`, ensure that you are hosting the
                                images on a server that can handle the load.
                              default: false
                            is_master:
                              type: boolean
                              description: >-
                                Defines whether the imported locale is the
                                master locale. If this value is not provided,
                                the imported locale is treated as master locale.
                              default: true
                            searchable_attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: >-
                                      Name of the attribute to be used when
                                      filtering in API.
                                  path:
                                    type: string
                                    description: >-
                                      JSONPath of the attribute to use to
                                      search/filter with, for example
                                      `$.material` will get material to filter
                                      with. For more information about JSONPath
                                      check: http://jsonpath.com/.
                                  weight:
                                    type: integer
                                    description: >-
                                      Weight of the attribute in the full text
                                      search, the bigger the weight the more the
                                      attribute will matter in the search
                                      result.
                            filterable_attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: >-
                                      Name of the attribute to be used when
                                      filtering in API.
                                  path:
                                    type: string
                                    description: >-
                                      JSONPath of the attribute to use to
                                      search/filter with, for example
                                      `$.material` will get material to filter
                                      with. For more information about JSONPath
                                      check: http://jsonpath.com/
                        - type: object
                          required:
                            - shop
                            - locale
                          properties:
                            shop:
                              type: string
                              description: >-
                                The shop those categories are in. The value of
                                this field must be `storefront-catalog-en`. It
                                has no impact on your locale.
                            locale:
                              type: string
                              description: >-
                                Determines the language those categories is in.
                                This value is case insensitive and lower-cased
                                internally. It must be in the following
                                format:`[a-z]{2}-[a-z]{2}`.
                            internal_disable_image_processing:
                              type: boolean
                              description: >-
                                Defines if the product images should be uploaded
                                to NewStore's hosting platform. If you set this
                                field to `true`, ensure that you are hosting the
                                images on a server that can handle the load.
                              default: false
                            is_master:
                              type: boolean
                              description: >-
                                Defines whether the imported locale is the
                                master locale. If this value is not provided,
                                the imported locale is treated as master locale.
                              default: true
                            searchable_attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: >-
                                      Name of the attribute to be used when
                                      filtering in API.
                                  path:
                                    type: string
                                    description: >-
                                      JSONPath of the attribute to use to
                                      search/filter with, for example
                                      `$.material` will get material to filter
                                      with. For more information about JSONPath
                                      check: http://jsonpath.com/.
                                  weight:
                                    type: integer
                                    description: >-
                                      Weight of the attribute in the full text
                                      search, the bigger the weight the more the
                                      attribute will matter in the search
                                      result.
                            filterable_attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: >-
                                      Name of the attribute to be used when
                                      filtering in API.
                                  path:
                                    type: string
                                    description: >-
                                      JSONPath of the attribute to use to
                                      search/filter with, for example
                                      `$.material` will get material to filter
                                      with. For more information about JSONPath
                                      check: http://jsonpath.com/
                - type: object
                  properties:
                    items:
                      type: array
                      minLength: 1
                      items:
                        title: Product
                        type: object
                        description: >-
                          A product is a buyable item. These fields describe
                          products and some of these fields are not used by
                          default but can be manipulated via the NewStore SDK to
                          be exposed in the Consumer App or the Associate App.
                        required:
                          - product_id
                          - variant_group_id
                        properties:
                          product_id:
                            description: >-
                              Unique identifier of the product. This identifier
                              is used in all NewStore APIs that are related to
                              products.
                            type: string
                            minLength: 1
                          variant_group_id:
                            description: >-
                              **REQUIRED** The identifier of the variant group
                              to which this product belongs. The variant group
                              identifier groups all the variants of a product.
                              For example, Grace Sweater Beige Size 4 and Grace
                              Sweater Beige Size 6 are both variants of the same
                              product and should be grouped with a single
                              ``variant_group_id``. If a product has only one
                              variant, create a unique variant group for it to
                              represent it as a variantless product. Ensure that
                              the same product is not assigned to multiple
                              variant groups in the same shop.
                            type: string
                          show_in_listing:
                            description: >-
                              Determines if this product is displayed in the
                              search results and product listings returned by
                              NewStore applications.
                            type: boolean
                          sku:
                            description: >-
                              **DEPRECATED** Use the 'external_identifiers' list
                              to store the SKU. The stock keeping unit number of
                              the product.
                            type: string
                          title:
                            description: The product title. This field is user-facing.
                            type: string
                          brand:
                            description: >-
                              The product's brand name. This field is
                              user-facing.
                            type: string
                          caption:
                            description: >-
                              A short version of the product's description used
                              for meta tags or thumbnails.
                            type: string
                            nullable: true
                          description:
                            description: >-
                              The product's description. This field is
                              user-facing.
                            type: string
                            nullable: true
                          keywords:
                            description: >-
                              List of keywords describing the product. By
                              default, this field has no effect in the NewStore
                              applications.
                            type: array
                            items:
                              type: string
                          is_published:
                            description: >-
                              Free boolean field to be used for custom
                              implementations. By default, this field has no
                              effect in the NewStore applications.
                            type: boolean
                          is_active:
                            description: >-
                              Free boolean field to be used for custom
                              implementations. By default, this field has no
                              effect in the NewStore applications.
                            type: boolean
                          shipping_weight_value:
                            description: >-
                              The weight of the product. Set the weight unit
                              with 'shipping_weight_unit'. Not required during
                              import, but this information might be required if
                              you want to ship your products.
                            type: number
                          shipping_weight_unit:
                            description: >-
                              The weight unit of the product. Set the weight
                              with 'shipping_weight_value'. Not required during
                              import, but this information might be required if
                              you want to ship your products.
                            type: string
                            enum:
                              - g
                              - kg
                              - lb
                          shipping_dimension_length:
                            description: >-
                              The length of the product. Set the unit of
                              measurement with 'shipping_dimension_unit'. Not
                              required during import, but this information might
                              be required if you want to ship your products.
                            type: number
                          shipping_dimension_width:
                            description: >-
                              The width of the product. Set the unit of
                              measurement with 'shipping_dimension_unit'. Not
                              required during import, but this information might
                              be required if you want to ship your products.
                            type: number
                          shipping_dimension_height:
                            description: >-
                              The height of the product. Set the unit of
                              measurement with 'shipping_dimension_unit'. Not
                              required during import, but this information might
                              be required if you want to ship your products.
                            type: number
                          shipping_dimension_unit:
                            description: >-
                              The unit of measurement for the product
                              dimensions.
                            type: string
                            enum:
                              - cm
                              - in
                          external_identifiers:
                            description: >-
                              The product's external identifier(s). Note that if
                              you do not specify the SKU identifier, it is
                              automatically set to the value of the 'product_id'
                              field.
                            type: array
                            items:
                              type: object
                              required:
                                - type
                                - value
                              properties:
                                type:
                                  description: >-
                                    Type of the identifier. For example 'upc',
                                    'ean13' or 'gtin'.
                                  type: string
                                value:
                                  description: Value of the identifier.
                                  type: string
                          extended_attributes:
                            description: >-
                              A collection of key-value pairs for custom
                              diversification of the product. By default, you
                              can include a maximum of 500 extended attributes.
                            maxItems: 500
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  description: >-
                                    The name or key of the extended attribute.
                                    By default, the length of the name can be a
                                    maximum of 250 characters.
                                  maxLength: 250
                                  type: string
                                value:
                                  description: >-
                                    The value of the extended attribute. By
                                    default, the length of the value can be a
                                    maximum of 2000 characters.
                                  maxLength: 2000
                                  type: string
                          images:
                            description: >-
                              The images of the products. One image must have
                              the 'is_main' property set to 'true'.
                            type: array
                            items:
                              type: object
                              title: Product Image
                              description: Contains the image data of a product.
                              required:
                                - url
                              properties:
                                url:
                                  description: Product image URL.
                                  type: string
                                  format: uri
                                title:
                                  description: Product image title.
                                  type: string
                                identifier:
                                  type: string
                                  description: Product image identifier (e.g. image-top-1).
                                is_main:
                                  type: boolean
                                  description: >-
                                    Identifies the main image. The image that is
                                    considered the 'main image' is the first
                                    image of the product that
                                    consumers/associates see in the
                                    applications.
                                alt_text:
                                  description: >-
                                    The alternative text for the image, used if
                                    the image fails to be displayed.
                                  type: string
                                  nullable: true
                                is_color_swatch:
                                  type: boolean
                                  description: >-
                                    Determines that this image is the
                                    representation of the color of the product.
                                tags:
                                  description: >-
                                    Tenant specific tags or use
                                    'nwst::productonly' to override the main
                                    image coming from the catalog. This image is
                                    only displayed in the product overview of an
                                    order inside the Fulfillment app and HQ.
                                  type: array
                                  items:
                                    type: string
                          tax_class_id:
                            description: >-
                              An identifier representing the tax class of the
                              product.
                            type: string
                          categories:
                            description: >-
                              Categories of the product. One category must have
                              the 'is_main' property set to 'true'.
                            type: array
                            items:
                              type: object
                              required:
                                - path
                              properties:
                                path:
                                  description: >-
                                    The category path (e.g. 'Furniture >
                                    Chairs').
                                  type: string
                                position:
                                  description: >-
                                    The position of the product inside the given
                                    category.
                                  type: integer
                                is_main:
                                  description: >-
                                    Determines that this category is the main
                                    category of the product. The main category
                                    will be used if customers get deep linked to
                                    a product. Only one category can be main and
                                    an error will be thrown if two categories
                                    are assigned. Also if no category is marked
                                    as main.
                                  type: boolean
                          template_id:
                            type: string
                            description: >-
                              Determines a template that is used to display this
                              product.
                          variation_color_value:
                            description: >-
                              **Important:** set this property or
                              'variation_size_value' for every product in a
                              variant group with more than one product. The
                              display name of the product's color.
                            type: string
                          variation_size_value:
                            description: >-
                              **Important:** set this property or
                              'variation_color_value' for every product in a
                              variant group with more than one product. The
                              display name of the product's size.
                            type: string
                          variation_size_gender:
                            type: string
                            description: The gender of the product.
                            enum:
                              - male
                              - female
                              - unisex
                          google_category:
                            type: string
                            description: The size category of the product.
                            enum:
                              - clothing
                              - shoes
                              - hat
                              - gloves
                              - none
                          variation_size_type:
                            type: string
                            description: >-
                              This attribute is used to indicate the cut of the
                              product.
                            enum:
                              - regular
                              - petite
                              - plus
                              - big and tall
                              - maternity
                          variation_size_system:
                            type: string
                            description: >-
                              The size system this size is in. For example 'US',
                              'EU' or 'SML'. Individual size systems can be
                              defined via a size systems config.
                          variation_additional_1_name:
                            description: >-
                              Allows determining the name for an additional
                              dimension for the diversification of the product
                              on top of color and size.
                            type: string
                          variation_additional_1_value:
                            description: >-
                              Allows determining the value for an additional
                              dimension for the diversification of the product
                              on top of color and size.
                            type: string
                          variation_additional_2_name:
                            description: >-
                              Allows determining the name for an additional
                              dimension for the diversification of the product
                              on top of color and size.
                            type: string
                          variation_additional_2_value:
                            description: >-
                              Allows determining the value for an additional
                              dimension for the diversification of the product
                              on top of color and size.
                            type: string
                          preorder_start:
                            description: >-
                              Determines the datetime (inclusive) when the
                              product is available for pre-order.
                            type: string
                            format: date-time
                            example: '2020-03-16T05:00:14Z'
                          online_from:
                            description: >-
                              Determines the datetime (inclusive) when the
                              product is available to be sold.
                            type: string
                            format: date-time
                            example: '2020-03-01T17:00:00Z'
                          online_to:
                            description: >-
                              Determines the datetime (inclusive) when the
                              product is not available anymore to be sold.
                            type: string
                            format: date-time
                            example: '2020-02-14T10:01:00Z'
                          product_hts_number:
                            description: >-
                              A six digit code specified by harmonized system
                              for tariffs (required for international
                              shipments).
                            type: string
                          schedule_b:
                            description: >-
                              Classification number for exporting goods out of
                              the United States (required for international
                              shipments).
                            type: string
                          country_of_origin:
                            type: string
                            description: is the country of manufacture.
                          material:
                            type: string
                            description: >-
                              indicates the materials the product item is
                              produced of.
        required: true
      responses:
        '200':
          description: >
            The import request has been submitted successfully and will be
            processed.


            Use the [Get import job method](#/{import_id}-get-import-job) with
            returned `import_id` to check the import job's status or

            open the returned `status_url`.
          content:
            application/json:
              schema:
                type: object
                description: Provides the status for the import request.
                properties:
                  import_id:
                    type: string
                    description: The unique identifier of the job.
                  source:
                    type: string
                    description: The source provided by the import request.
                  provider:
                    type: string
                    description: >-
                      The name of the provider of the data, for example,
                      Demandware.
                  entities:
                    type: array
                    description: The type of data provided in the import job.
                    items:
                      type: string
                      enum:
                        - products
                        - categories
                        - availabilities
                        - prices
                    minItems: 1
                    uniqueItems: true
                  source_uri:
                    type: string
                    description: >-
                      The file location of the original file from the provider
                      (only for information).
                  transformed_uri:
                    type: string
                  revision:
                    type: integer
                    description: >-
                      The revision of the job with this set of entities. A
                      change from a job with an entity of lower revision, will
                      not overwrite an already recorded newer revision. The
                      revision is determined at the time of job creation.
                  name:
                    type: string
                    description: The name of the job.
                  received_at:
                    type: string
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the corresponding import
                      request was received.
                  completed_at:
                    type: string
                    nullable: true
                    format: date-time
                    description: >-
                      The UTC timestamp indicating when the import request was
                      completed. 'completed_at' is null when the response is
                      used for the 'processing' state.
                  state:
                    type: string
                    description: >-
                      The state of the import job. When all import chunks
                      failed, the state is 'failed' . When all chunks are done
                      and at least one chunk was successfully processed, the
                      state is 'finished' otherwise the state is in 'progress'.
                    enum:
                      - received
                      - waiting
                      - processing
                      - failed
                      - finished
                      - cleaning
                  reason:
                    type: string
                    description: The reason why the import job failed.
                  full:
                    type: boolean
                    description: >-
                      Determines if the job is a full or a partial import. A
                      full import deletes the existing data and imports the new
                      data. A partial import adds data on top of existing data.
                    default: false
        '500':
          description: |
            A server error occurred. Try again later.
      parameters:
        - name: full
          in: query
          description: >
            Determines if the job is a full or partial import. A full import
            deletes the existing data and imports

            the new data. A partial import adds data on top of existing data.
          schema:
            type: boolean
      deprecated: true
      x-annotation-deprecated:
        since: 01/2017
        replaceWith: >
          Use the [Create import job method](#import-jobs-create-import-job)
          instead.
components:
  securitySchemes:
    newStoreAccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT