Import Schemas | NewStore Documentation
Skip to main content
ðŸš€ User docs have moved
to a new docs experience platform!
.
This site will now host ONLY the API docs
.
API Explorer
Search
API Explorer
Integration APIs
Inventory management
Event Stream and GraphQL
Catalog and SFCC
Import Schemas
Pricebook Export
Product Export
Customer API (current)
Customer API (experimental)
Import Data API
Catalog Locale Manager API
NewStore SFCC Integration API
Delivery
Order management
Payments
Fiscalization and taxes
Store fulfillment
Omnichannel Manager
Discounts and promotions
Customer
Shopping App
Configuration APIs
Webhooks
New Generation APIs
Import Schemas
post
createImportSchema
get
showImportSchema
patch
updateImportSchema
del
destroyImportSchema
API docs by Redocly
Import Schemas
(
1.0.0
)
Download OpenAPI specification
:
Download
Team Products Prices Promotions
:
team-product-prices-promotions@newstore.com
URL:
https://www.newstore.com
Import Schemas API
Import Schemas
Import Schemas
createImportSchema
Create new schema object containing jsonschema of
version 7
.
This schema is  used during import process to validate entity object before persisting it in catalog indexes.
Valid jsonschema file
is validated against
meta schema
references only properties mentioned in whitelist
#ref points only to local resource, e.g. external resources are not allowed.
Here is list of whitelisted fields that can be used in schema (case sensitive):
brand (string, may be null)
title (string, may be null)
caption (string, may be null)
description (string, may be null)
keywords (array of strings, may be null)
product_id (string, max size 255, cannot contain characters
=%
)
variant_group_id (string, max size 255)
template_id (string, may be null)
tax_class_id (string, may be null)
schedule_b (string, may be null,
definition
)
product_hts_number (string, may be null)
google_category (string, may be null)
preorder_start (time RFC 3339 string, may be null)
online_to (time RFC 3339 string, may be null)
online_from (time RFC 3339 string, may be null)
country_of_origin (string, may be null)
material (string, may be null)
extended_attributes (array of attributes, may be null)
name (string, may be null)
value (string, may be null)
external_identifiers (array of identifiers, may be null)
type (string, may be null)
value (string, may be null)
filterable_attributes (array of attributes, may be null)
name (string, may be null)
value (string, may be null)
searchable_attributes (object contain key value string pairs, may be null )
[string] : [string] (name of searchable attribute)
shipping_dimension_unit (string, may be null)
shipping_dimension_width (number, may be null)
shipping_dimension_height (number, may be null)
shipping_dimension_length (number, may be null)
shipping_weight_value (number, may be null)
shipping_weight_unit (string, may be null)
variation_additional_1_name (string, may be null)
variation_additional_2_name (string, may be null)
variation_additional_1_value (string, may be null)
variation_additional_2_value (string, may be null)
variation_color_value (string, may be null)
variation_size_gender (string, may be null)
variation_size_system (string, may be null)
variation_size_value (string, may be null)
variation_size_type (string, may be null)
Authorizations:
oauth
query
Parameters
id
string
(
ImportSchemaID
)
[ 1 .. 36 ] characters
^[a-zA-Z0-9_-]+$
default generated id is returned
entity
string
(
ImportEntity
)
non-empty
Value
:
"PRODUCTS"
default id PRODUCTS
Request Body schema:
application/schema+json
string
<
binary
>
Responses
201
Created
400
Bad Request
409
Already Exists
500
Internal Server Error
default
Unexpected error
post
/import-schemas
/catalog
/import-schemas
/catalog
/import-schemas
Request samples
Payload
Content type
application/schema+json
Copy
"string"
Response samples
201
400
409
500
default
Content type
application/json
Copy
{
"id"
:
"string"
,
"last_updated_at"
:
"2020-01-01T00:00:00+00:00"
}
showImportSchema
Authorizations:
oauth
path
Parameters
id
required
string
(
ImportSchemaID
)
[ 1 .. 36 ] characters
^[a-zA-Z0-9_-]+$
ID of the import schema. It must be unique per tenant and contain only ASCII characters. F.e UUID4, human readable name without spaces
Responses
200
OK
400
Bad Request
404
Not Found
500
Internal Server Error
default
Unexpected error
get
/import-schemas/{id}
/catalog
/import-schemas/{id}
/catalog
/import-schemas/{id}
Response samples
200
400
404
500
default
Content type
application/schema+json
application/json
application/schema+json
Copy
{ }
updateImportSchema
Authorizations:
oauth
path
Parameters
id
required
string
(
ImportSchemaID
)
[ 1 .. 36 ] characters
^[a-zA-Z0-9_-]+$
ID of the import schema. It must be unique per tenant and contain only ASCII characters. F.e UUID4, human readable name without spaces
Request Body schema:
application/schema+json
string
<
binary
>
Responses
204
Updated
400
Bad Request
404
Not Found
500
Internal Server Error
default
Unexpected error
patch
/import-schemas/{id}
/catalog
/import-schemas/{id}
/catalog
/import-schemas/{id}
Request samples
Payload
Content type
application/schema+json
Copy
"string"
Response samples
400
404
500
default
Content type
application/problem+json
Copy
{
"request_id"
:
"string"
,
"type"
:
"/some/uri-reference"
,
"title"
:
"some title for the error situation"
,
"status"
:
100
,
"detail"
:
"some description for the error situation"
,
"instance"
:
"/some/uri-reference#specific-occurrence-context"
}
destroyImportSchema
Authorizations:
oauth
path
Parameters
id
required
string
(
ImportSchemaID
)
[ 1 .. 36 ] characters
^[a-zA-Z0-9_-]+$
ID of the import schema. It must be unique per tenant and contain only ASCII characters. F.e UUID4, human readable name without spaces
Responses
204
No Content
404
Not Found
500
Internal Server Error
default
Unexpected error
delete
/import-schemas/{id}
/catalog
/import-schemas/{id}
/catalog
/import-schemas/{id}
Response samples
500
default
Content type
application/problem+json
Copy
{
"request_id"
:
"string"
,
"type"
:
"/some/uri-reference"
,
"title"
:
"some title for the error situation"
,
"status"
:
100
,
"detail"
:
"some description for the error situation"
,
"instance"
:
"/some/uri-reference#specific-occurrence-context"
}
Previous
Event stream configuration API
Next
Pricebook Export
Copyright Â© 2025 NewStore, Inc.