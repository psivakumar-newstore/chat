Fulfillment App API | NewStore Documentation
Skip to main content
ðŸš€ User docs have moved
to a new docs experience platform!
.
This site will now host ONLY the API docs
.
API Explorer
Search
Dummy API
Associate App
Catalog and imports
Shopping App
Customer and clienteling
Shipping
Event Stream
Inventory and fulfillment
Omnichannel Manager
Order management
Capture Order
External Order API
Sales order historic import API
Order Injection configuration
Order line internal APIs
Service Level API
Customer Care Order Support API
Fulfillment App API
NewStore Checkout API
Order status notifications API
Support API
Sales Order Support API
External OMS Config API
API to manage sales order configurations
Shopping API
Swap products in order
Payments
Promotions and coupons
Stock
Other support APIs
Store fulfillment requests
post
Stores the consumer data.
get
Get associate
put
Update associate
post
Reassign orders to new associate
get
List all logistic orders
get
List completed logistic orders
get
List open logistic orders
get
Get logistic order
get
Get driver location
post
Initiate return
post
Execute action
get
Get product
get
Get return info
get
Get data
get
List printer locations.
post
Create printer location
get
Get printer location
put
Update printer location.
del
Delete printer location
get
List printers
post
Create printer
get
Get printer
put
Update printer
del
Delete printer
post
Sends test notification.
get
Unassigned fufillment requests.
API docs by Redocly
Fulfillment App API
(
0.1
)
Download OpenAPI specification
:
Download
Team Inventory
:
team-inventory@newstore.com
URL:
https://apidocs.newstore.io
Implements endpoints used by the app.
Store fulfillment requests
Use this resource to manage orders that are currently in the process of being fulfilled by a store or are in
transit from or to a store.
Stores the consumer data.
Stores the consumer data.
path
Parameters
correlation_id
required
string
Identifier for the corresponding sales order.
Request Body schema:
application/json
email
required
string
first_name
string
last_name
string
phone_number
string
Responses
200
The body contains the result of the call to store the consumer data.
500
An internal error occurred.
post
/consumer_data/{correlation_id}
/v0/d
/consumer_data/{correlation_id}
Request samples
Payload
Content type
application/json
Copy
{
"email"
:
"string"
,
"first_name"
:
"string"
,
"last_name"
:
"string"
,
"phone_number"
:
"string"
}
Response samples
200
Content type
application/json
Copy
{
"successful"
:
true
}
Get associate
Returns the associate object associated with the token sent with the header.
Responses
200
OK
404
The associate was not found.
500
An internal error occurred.
get
/fulfillment_associate
/v0/d
/fulfillment_associate
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"associate"
:
{
"absent_since"
:
"2019-08-24T14:15:22Z"
,
"completed_tasks_count"
:
0
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"email"
:
"string"
,
"first_name"
:
"string"
,
"id"
:
"string"
,
"image_url"
:
"string"
,
"is_available"
:
true
,
"last_name"
:
"string"
,
"open_tasks_count"
:
0
,
"revision"
:
1
,
"status"
:
"can_receive_requests"
,
"store_id"
:
"string"
,
"telephone_number"
:
"string"
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
}
}
Update associate
Updates the associate object.
Request Body schema:
application/json
status
required
string
Enum
:
"can_receive_requests"
"cannot_receive_requests"
"not_available"
Responses
200
OK
404
The associate was not found.
500
An internal error occurred.
put
/fulfillment_associate
/v0/d
/fulfillment_associate
Request samples
Payload
Content type
application/json
Copy
{
"status"
:
"can_receive_requests"
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"associate"
:
{
"absent_since"
:
"2019-08-24T14:15:22Z"
,
"completed_tasks_count"
:
0
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"email"
:
"string"
,
"first_name"
:
"string"
,
"id"
:
"string"
,
"image_url"
:
"string"
,
"is_available"
:
true
,
"last_name"
:
"string"
,
"open_tasks_count"
:
0
,
"revision"
:
1
,
"status"
:
"can_receive_requests"
,
"store_id"
:
"string"
,
"telephone_number"
:
"string"
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
}
}
Reassign orders to new associate
Reassign the list of open fulfillment logistic orders to another associate.
Request Body schema:
application/json
current_associate_id
required
string
new_associate_id
required
string
Responses
200
OK
400
Something wrong happened to the request.
404
Associate to be assigned was not found.
500
An internal error occurred.
post
/fulfillment_associate/_reassign
/v0/d
/fulfillment_associate/_reassign
Request samples
Payload
Content type
application/json
Copy
{
"current_associate_id"
:
"22IB3UROr1S3Je9hDaRh7f"
,
"new_associate_id"
:
"33JB3UROr1S3Je9hDaRh7f"
}
Response samples
400
404
500
Content type
application/json
Copy
Expand all
Collapse all
{
"error"
:
{
"code"
:
"associates_in_different_stores"
,
"description"
:
"Chosen associates are not assigned to the same store, choose another associate."
,
"extended_attributes"
:
{ }
}
}
List all logistic orders
Gets a list of all fulfillment logistic orders for the current associate.
query
Parameters
offset
integer
>= 0
Default:
0
The page offset.
count
integer
>= 1
Default:
10
The number of requested documents.
q
string
A free text search for orders.
sort
string
The field to sort and its sorting order. These 2 values are separated by the pipe character (
|
).
filter
string
The field to filter and its filter value(s); field is specified in subscript notation and its
values are comma separated. When the value is expression of a range, the min and max range are
separated by the "pipe" (|) character.
Responses
200
500
An internal error occurred.
get
/fulfillment_logistic_orders
/v0/d
/fulfillment_logistic_orders
List completed logistic orders
Gets a list of all completed fulfillment logistic orders for the current associate.
Responses
200
OK
500
An internal error occurred.
get
/fulfillment_logistic_orders/completed
/v0/d
/fulfillment_logistic_orders/completed
List open logistic orders
Gets a list of all the open fulfillment logistic orders for the current associate.
Responses
200
500
An internal error occurred.
get
/fulfillment_logistic_orders/open
/v0/d
/fulfillment_logistic_orders/open
Get logistic order
Retrieves the specified fulfillment logistic order.
path
Parameters
uuid
required
string
The identifier of the fulfillment logistic order.
header
Parameters
Retry-After
required
string
The time after the request can be retried.
Responses
200
OK
202
The request was accepted and is currently being processed.
404
The fulfillment logistic order was not found.
422
An error happened which needs NewStore support actions.
500
An internal error occurred.
503
A temporary error happened which can be retried.
get
/fulfillment_logistic_orders/{uuid}
/v0/d
/fulfillment_logistic_orders/{uuid}
Get driver location
Returns the current driver location for same day delivery orders.
path
Parameters
uuid
required
string
The identifier of the fulfillment logistic order.
Responses
200
OK
404
The delivery or fulfillment logistic order was not found.
500
An internal error occurred.
get
/fulfillment_logistic_orders/{uuid}/driver_location
/v0/d
/fulfillment_logistic_orders/{uuid}/driver_location
Initiate return
Initiates the return process for the specified items.
path
Parameters
uuid
required
string
The identifier of the fulfillment logistic order.
Request Body schema:
application/json
returned_order_items
required
Array of
objects
(
returnedItem
)
non-empty
A list of objects, containing returned items
sales_order_uuid
required
string
= 36 characters
store_id
string
The store where the return is initiated from.
Responses
200
OK
404
The sales order was not found.
422
The provided request body is not valid.
500
An internal error occurred.
post
/fulfillment_logistic_orders/{uuid}/initiate_return
/v0/d
/fulfillment_logistic_orders/{uuid}/initiate_return
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"returned_order_items"
:
[
{
"order_item_uuid"
:
"stringstringstringstringstringstring"
,
"quality_inspection_code"
:
0
,
"quality_inspection_option"
:
"string"
,
"return_code"
:
0
,
"return_reason"
:
"string"
,
"sales_order_item_uuid"
:
"stringstringstringstringstringstring"
}
]
,
"sales_order_uuid"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
}
Response samples
200
Content type
application/json
Copy
{
"return_uuid"
:
"stringstringstringstringstringstring"
}
Execute action
Performs a specific action to fulfill an order.
path
Parameters
action
required
string
Enum
:
"accept"
"decline"
"mispick"
"mispack"
"start_packing"
"finish_packing"
"ready_for_pickup"
"confirm_handover"
The specific action to perform for the fulfillment logistic order.
uuid
required
string
The identifier of the fulfillment logistic order.
header
Parameters
Retry-After
required
string
The time after the request can be retried.
Request Body schema:
application/json
boxes
required
Array of
objects
A list of boxes for the packing step. Each box can contain multiple items.
items
required
Array of
strings
[ items
= 36 characters
]
A list of fulfillment logistic order item UUIDs. This is necessary for request fulfillment documents.
itn
required
string
The box's itn, needed for easypost, if order>$2500. It is used in skip_packing action
mispacked_items
required
Array of
objects
A list of objects, containing mispacked item product_id and mispacked_quantity
mispicked_items
required
Array of
objects
A list of objects, containing mispicked item product_id and mispicked_quantity
package_number
required
integer
Specifies the number of the current package
scanned_order_items
required
Array of
objects
Responses
200
OK
202
The request was accepted and is currently being processed.
400
Something wrong happened to the request
404
Something was not found.
422
An error happened which needs NewStore support actions.
500
An internal error occurred.
503
A temporary error happened which should be retried.
post
/fulfillment_logistic_orders/{uuid}/{action}
/v0/d
/fulfillment_logistic_orders/{uuid}/{action}
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"boxes"
:
[
{
"index"
:
0
,
"items"
:
[
{
"external_identifier"
:
{
"EAN"
:
"string"
,
"EPC"
:
"string"
,
"SKU"
:
"string"
}
,
"order_item_uuid"
:
"stringstringstringstringstringstring"
}
]
,
"itn"
:
"string"
,
"package_option_uuid"
:
"stringstringstringstringstringstring"
}
]
,
"items"
:
[
"stringstringstringstringstringstring"
]
,
"itn"
:
"string"
,
"mispacked_items"
:
[
{
"mispacked_quantity"
:
0
,
"product_id"
:
"string"
}
]
,
"mispicked_items"
:
[
{
"mispicked_quantity"
:
0
,
"product_id"
:
"string"
}
]
,
"package_number"
:
0
,
"scanned_order_items"
:
[
{
"external_identifier"
:
{
"EAN"
:
"string"
,
"EPC"
:
"string"
,
"SKU"
:
"string"
}
,
"itn"
:
"string"
,
"order_item_uuid"
:
"stringstringstringstringstringstring"
}
]
}
Get product
Returns the product with the given ID.
path
Parameters
id
required
string
The identifier of the product.
query
Parameters
locale
string
A locale code. Can be used to fetch product information in different languages.
catalog
string
DEPRECATED. Use
shop
instead. The identifier of the product catalog.
shop
string
The identifier of the shop the product belongs to.
Responses
200
The product with the given id exists.
404
The product was not found.
500
An internal error occurred.
get
/products/{id}
/v0/d
/products/{id}
Response samples
200
Content type
application/json
Copy
{ }
Get return info
Gets the return information of the provided return uuid.
path
Parameters
return_uuid
required
string
The identifier of the return.
Responses
200
202
The return process is still in progress.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/returns/{return_uuid}
/v0/d
/returns/{return_uuid}
Response samples
200
Content type
application/json
Copy
{
"currency_code"
:
"str"
,
"refund_note_url"
:
"string"
,
"refunded_amount"
:
0
,
"return_fee"
:
0
}
Get data
Retrieves a dictionary with all the necessary data to set up the NewStore app.
query
Parameters
locale
string
A locale code. Can be used to fetch product information in different languages.
Responses
200
OK
404
The associate or store was not found.
500
An internal error occurred.
get
/setup_data
/v0/d
/setup_data
List printer locations.
Returns the list of printer locations set up in the store.
path
Parameters
store_id
required
string
The identifier of the store.
Responses
200
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/stores/{store_id}/printer_locations
/v0/d
/stores/{store_id}/printer_locations
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer_locations"
:
[
{
"created_at"
:
"2019-08-24T14:15:22Z"
,
"name"
:
"string"
,
"printers"
:
[
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
,
"revision"
:
0
,
"store_id"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
}
Create printer location
Creates a new printer location.
path
Parameters
store_id
required
string
The identifier of the store.
Request Body schema:
application/json
name
required
string
non-empty
store_id
required
string
[ 1 .. 256 ] characters
Responses
201
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
post
/stores/{store_id}/printer_locations
/v0/d
/stores/{store_id}/printer_locations
Request samples
Payload
Content type
application/json
Copy
{
"name"
:
"string"
,
"store_id"
:
"string"
}
Response samples
201
Content type
application/json
Copy
Expand all
Collapse all
{
"printer_location"
:
{
"created_at"
:
"2019-08-24T14:15:22Z"
,
"name"
:
"string"
,
"printers"
:
[
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
,
"revision"
:
0
,
"store_id"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Get printer location
Returns the printer location with the given ID.
path
Parameters
uuid
required
string
The identifier of the printer location.
store_id
required
string
The identifier of the store.
Responses
200
404
The printer location was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/stores/{store_id}/printer_locations/{uuid}
/v0/d
/stores/{store_id}/printer_locations/{uuid}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer_location"
:
{
"created_at"
:
"2019-08-24T14:15:22Z"
,
"name"
:
"string"
,
"printers"
:
[
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
,
"revision"
:
0
,
"store_id"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Update printer location.
Update existing printer location with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer location.
store_id
required
string
The identifier of the store.
Request Body schema:
*/*
name
required
string
non-empty
Responses
200
404
The printer location was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
put
/stores/{store_id}/printer_locations/{uuid}
/v0/d
/stores/{store_id}/printer_locations/{uuid}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer_location"
:
{
"created_at"
:
"2019-08-24T14:15:22Z"
,
"name"
:
"string"
,
"printers"
:
[
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
,
"revision"
:
0
,
"store_id"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Delete printer location
Remove the printer location with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer location.
store_id
required
string
The identifier of the store.
Responses
200
The printer location was deleted successfully.
404
The printer location was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
delete
/stores/{store_id}/printer_locations/{uuid}
/v0/d
/stores/{store_id}/printer_locations/{uuid}
List printers
Returns the list of printers set up in the store.
path
Parameters
store_id
required
string
The identifier of the store.
Responses
200
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/stores/{store_id}/printers
/v0/d
/stores/{store_id}/printers
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printers"
:
[
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
]
}
Create printer
Creates a new printer.
path
Parameters
store_id
required
string
The identifier of the store.
Request Body schema:
application/json
ipv4
string
<
ipv4
>
<= 16 characters
ipv6
string
<
ipv6
>
<= 40 characters
location
string
<= 100 characters
mac_address
string
[ 17 .. 32 ] characters
manufacturer
required
string
Enum
:
"Virtual"
"Star"
"AirPrint"
model
string
[ 3 .. 64 ] characters
name
required
string
[ 3 .. 64 ] characters
paper_size
string or null
<= 32 characters
printer_location_id
string
= 36 characters
store_id
required
string
[ 1 .. 256 ] characters
type
required
string
Enum
:
"document_printer"
"label_printer"
url
string
<= 256 characters
Responses
201
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
post
/stores/{store_id}/printers
/v0/d
/stores/{store_id}/printers
Request samples
Payload
Content type
application/json
Copy
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
}
Response samples
201
Content type
application/json
Copy
Expand all
Collapse all
{
"printer"
:
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Get printer
Returns the printer with the given ID.
path
Parameters
uuid
required
string
The identifier of the printer.
store_id
required
string
The identifier of the store.
Responses
200
404
The printer was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
get
/stores/{store_id}/printers/{uuid}
/v0/d
/stores/{store_id}/printers/{uuid}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer"
:
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Update printer
Updates existing printer with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer.
store_id
required
string
The identifier of the store.
Request Body schema:
appplication/json
ipv4
string
<
ipv4
>
<= 16 characters
ipv6
string
<
ipv6
>
<= 40 characters
location
string
<= 100 characters
mac_address
string
[ 17 .. 32 ] characters
manufacturer
required
string
Enum
:
"Virtual"
"Star"
"AirPrint"
model
string
[ 3 .. 64 ] characters
name
required
string
[ 3 .. 64 ] characters
paper_size
string or null
<= 32 characters
printer_location_id
string
= 36 characters
store_id
required
string
[ 1 .. 256 ] characters
type
required
string
Enum
:
"document_printer"
"label_printer"
url
string
<= 256 characters
Responses
200
OK
404
The printer was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
put
/stores/{store_id}/printers/{uuid}
/v0/d
/stores/{store_id}/printers/{uuid}
Request samples
Payload
Content type
appplication/json
Copy
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
}
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"printer"
:
{
"ipv4"
:
"192.168.0.1"
,
"ipv6"
:
"2001:0db8:85a3:0000:0000:8a2e:0370:7334"
,
"location"
:
"string"
,
"mac_address"
:
"stringstringstrin"
,
"manufacturer"
:
"Virtual"
,
"model"
:
"string"
,
"name"
:
"string"
,
"paper_size"
:
"string"
,
"printer_location_id"
:
"stringstringstringstringstringstring"
,
"store_id"
:
"string"
,
"type"
:
"document_printer"
,
"url"
:
"string"
,
"created_at"
:
"2019-08-24T14:15:22Z"
,
"revision"
:
0
,
"tenant"
:
"string"
,
"updated_at"
:
"2019-08-24T14:15:22Z"
,
"uuid"
:
"stringstringstringstringstringstring"
}
}
Delete printer
Removes the printer with the given UUID.
path
Parameters
uuid
required
string
The identifier of the printer.
store_id
required
string
The identifier of the store.
Responses
200
The printer was deleted successfully.
404
The printer was not found.
422
The request couldn't be processed with the provided payload.
500
An internal error occurred.
delete
/stores/{store_id}/printers/{uuid}
/v0/d
/stores/{store_id}/printers/{uuid}
Sends test notification.
Sends a test notification to the user. Use this method to verify the notification setup.
Request Body schema:
application/json
message
string
The message that will be sent in the notification, a default message is used if none is provided.
notification_type
required
string
non-empty
Responses
202
The request was accepted and the notification should be sent.
500
An internal error occurred.
post
/test_notifications
/v0/d
/test_notifications
Request samples
Payload
Content type
application/json
Copy
{
"message"
:
"string"
,
"notification_type"
:
"string"
}
Response samples
202
Content type
application/json
Copy
Expand all
Collapse all
{
"status"
:
{
"message"
:
"string"
,
"status_identifier"
:
"string"
}
}
Unassigned fufillment requests.
Gets the count of unassigned fulfillment requests, based on the priority.
Responses
200
OK
204
No content available.
500
An internal error occurred.
get
/unassigned_fulfillment_request_count
/v0/d
/unassigned_fulfillment_request_count
Previous
Customer Care Order Support API
Next
NewStore Checkout API
Copyright Â© 2025 NewStore, Inc.