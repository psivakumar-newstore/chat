Payment Config API | NewStore Documentation
Skip to main content
ðŸš€ User docs have moved
to a new docs experience platform!
.
This site will now host ONLY the API docs
.
API Explorer
Search
API Explorer
Integration APIs
Configuration APIs
Inventory and fulfillment
Fulfillment requests
Order management
Checkout
Payment
Payment Config API
Square credentials API
NOM and app
Fiscalization and taxes
Promotions
Webhooks
New Generation APIs
get
Adyen adapter configuration
put
Update adyen adapter configuration
get
Audit history for Adyen Adapter configuration
get
Cash drawer configuration
put
Update cash drawer configuration
get
Audit history for Cash Drawer configuration
get
FAT PSP configuration
put
Update FAT PSP configuration
get
Audit history for FAT PSP configuration
get
Gift card configuration
put
Update gift card configuration
get
Audit history for Gift Card configuration
get
Payment NOM configuration
put
Update NOM configuration
get
Audit history for NOM configuration
get
NewStore Checkout configuration
put
Update NewStore Checkout configuration
get
Audit history for NewStore Checkout configuration
get
Payment Account configuration
put
Update Payment Account configuration
get
Audit history for Payment Account configuration
get
Payment Capture configuration
put
Update payment capture configuration
get
Audit history for Payment Capture configuration
get
Payment Engine configuration
put
Update payment engine configuration
get
Audit history for Payment Engine configuration
get
Payment options configuration
put
Update payment options configuration
get
Audit history for Payment Options configuration
get
Payments watcher configuration
put
Update payments watcher configuration
get
Audit history for Payments Watcher configuration
get
PSP Adyen configuration
put
Update PSP Adyen configuration
get
Audit history for PSP Adyen configuration
get
PSP Square configuration
put
Update PSP Square configuration
get
Audit history for PSP Square configuration
post
Create a payment link for a customer to pay a cart
API docs by Redocly
Payment Config API
(
1
)
Download OpenAPI specification
:
Download
Use this API to manage Payment configuration.
Adyen adapter configuration
Returns the configuration of the adyen adapter.
Authorizations:
newStoreAccessToken
Responses
200
The Adyen adapter configuration.
get
/config/adyen_adapter
/v1/p
/config/adyen_adapter
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"config"
:
[
{
"timeout"
:
10
,
"provider_name"
:
"adyen"
,
"order_placement_delay"
:
4
,
"merchant_accounts"
:
[
"*"
]
,
"immediate_capture_payment_methods"
:
[
"alipay"
,
"wechatpay_pos"
]
,
"endpoint"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"capture_delay"
:
"manual"
,
"assume_refund_successful"
:
false
,
"assume_unreferenced_refund_successful"
:
false
,
"assume_void_successful"
:
false
,
"wait_for_auth_notification"
:
false
}
]
}
Update adyen adapter configuration
Updates the configuration of the adyen adapter.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
config
Array of
objects
Contains the list of configurations supported by the adapter.
Array
endpoint
required
string
Adyen Payments API base URL. Example: '
https://pal-test.adyen.com/pal/servlet/Payment/[version]'
.
assume_refund_successful
boolean
When set to true refunds will be marked as successful in NOM without waiting for Adyen's confirmation.
assume_unreferenced_refund_successful
boolean
When set to true unreferenced refunds will be marked as successful in NOM without waiting for Adyen's confirmation.
assume_void_successful
boolean
When set to true voids (revokes of payment authorizations) will be marked as successful without waiting for Adyen's confirmation.
wait_for_auth_notification
boolean
When set to true will make the adapter wait for the authentication webhook from Adyen. Important: This might delay the checkout process when set to True.
capture_delay
required
string
Enum
:
"manual"
"immediate"
Defines if payments should be manually captured. Should conform to what is configured on the Adyen portal.
immediate_capture_payment_methods
Array of
strings
List of always-precaptured payment methods, for which capture requests should not be forwarded to the provider.
provider_name
string
Provider name as configured in fat_psp -> external_providers. Example:
adyen
.
merchant_accounts
required
Array of
strings
The list of merchant accounts sharing this configuration.
order_placement_delay
integer
<= 10
Defines the delay in seconds for placing the order if the order is still in a draft state after the payment notification has been received.
track_revoke_requests
boolean
Ensures revoke requests for immediate capture payments are represented as refunds in NOM and events. This does not affect the actual operation on the payment instrument.
Enabled by default.
timeout
integer
API client timeout in seconds.
Responses
200
The operation was successful.
put
/config/adyen_adapter
/v1/p
/config/adyen_adapter
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"config"
:
[
{
"timeout"
:
10
,
"provider_name"
:
"adyen"
,
"order_placement_delay"
:
4
,
"merchant_accounts"
:
[
"*"
]
,
"immediate_capture_payment_methods"
:
[
"alipay"
,
"wechatpay_pos"
]
,
"endpoint"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"capture_delay"
:
"manual"
,
"assume_refund_successful"
:
false
,
"assume_unreferenced_refund_successful"
:
false
,
"assume_void_successful"
:
false
,
"wait_for_auth_notification"
:
false
}
]
}
Audit history for Adyen Adapter configuration
Returns a list of the current and all previous values for the Adyen Adapter configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Adyen Adapter configuration
get
/config/adyen_adapter/history
/v1/p
/config/adyen_adapter/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"config"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"2019-12-25T00:00:00Z"
,
"current"
:
true
,
"value"
:
[
{
"timeout"
:
10
,
"provider_name"
:
"adyen"
,
"order_placement_delay"
:
4
,
"merchant_accounts"
:
[
"*"
]
,
"immediate_capture_payment_methods"
:
[
"alipay"
,
"wechatpay_pos"
]
,
"endpoint"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"capture_delay"
:
"manual"
,
"assume_refund_successful"
:
false
,
"assume_unreferenced_refund_successful"
:
false
,
"assume_void_successful"
:
false
}
]
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"2019-12-12T14:30:00Z"
,
"value"
:
[
{
"timeout"
:
100
,
"provider_name"
:
"adyen"
,
"order_placement_delay"
:
4
,
"merchant_accounts"
:
[
"*"
]
,
"immediate_capture_payment_methods"
:
[
"alipay"
,
"wechatpay_pos"
]
,
"endpoint"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"capture_delay"
:
"manual"
,
"assume_refund_successful"
:
false
,
"assume_unreferenced_refund_successful"
:
false
,
"assume_void_successful"
:
false
}
]
}
]
}
Cash drawer configuration
Returns the configuration of the cash drawer.
Authorizations:
newStoreAccessToken
Responses
200
The Cash drawer configuration.
get
/config/cash_drawer
/v1/p
/config/cash_drawer
Response samples
200
Content type
application/json
Copy
{
"expose_count_expected_amount"
:
true
}
Update cash drawer configuration
Updates the configuration of cash drawer.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
expose_count_expected_amount
boolean
When set to true the API will return the expected amount when responding to a record count request.
Responses
200
The operation was successful.
put
/config/cash_drawer
/v1/p
/config/cash_drawer
Request samples
Payload
Content type
application/json
Copy
{
"expose_count_expected_amount"
:
true
}
Audit history for Cash Drawer configuration
Returns a list of the current and all previous values for the Cash Drawer configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Cash Drawer configuration
get
/config/cash_drawer/history
/v1/p
/config/cash_drawer/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"expose_count_expected_amount"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
true
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
false
}
]
}
FAT PSP configuration
Returns the configuration of fat psp.
Authorizations:
newStoreAccessToken
Responses
200
The FAT PSP configuration.
get
/config/fat_psp
/v1/p
/config/fat_psp
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"external_providers"
:
{
"adyen"
:
{
"callback_url"
:
"adyen_adapter"
,
"timeout"
:
60
}
,
"gift_card"
:
{
"callback_url"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"timeout"
:
600
}
,
"cybersource"
:
{
"callback_url"
:
"
https://k237thc08.execute-api.us-east-1.amazonaws.com/x
"
,
"timeout"
:
600
,
"api_key"
:
"RNTMN123AQT50"
}
}
,
"internal_providers"
:
{
"square"
:
{
"endpoint"
:
"/psp_square.PSPSquare/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
30
}
,
"store_credit"
:
{
"endpoint"
:
"/store_credit.StoreCredit/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
30
}
}
}
Update FAT PSP configuration
Updates the configuration of fat psp.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
braintree_partial_settlement_enabled
boolean
Feature flag to enable or disable the partial settlement feature.
external_providers
object
Map of available external payment providers that are being called via http.
internal_providers
object
Map of available payment providers that are being called internally via rpc.
Responses
200
The operation was successful.
put
/config/fat_psp
/v1/p
/config/fat_psp
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"external_providers"
:
{
"adyen"
:
{
"callback_url"
:
"adyen_adapter"
,
"timeout"
:
60
}
,
"gift_card"
:
{
"callback_url"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"timeout"
:
600
}
,
"cybersource"
:
{
"callback_url"
:
"
https://k237thc08.execute-api.us-east-1.amazonaws.com/x
"
,
"timeout"
:
600
,
"api_key"
:
"RNTMN123AQT50"
}
}
,
"internal_providers"
:
{
"square"
:
{
"endpoint"
:
"/psp_square.PSPSquare/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
30
}
,
"store_credit"
:
{
"endpoint"
:
"/store_credit.StoreCredit/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
30
}
}
}
Audit history for FAT PSP configuration
Returns a list of the current and all previous values for the FAT PSP configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the FAT PSP configuration
get
/config/fat_psp/history
/v1/p
/config/fat_psp/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"external_providers"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"adyen"
:
{
"callback_url"
:
"adyen_adapter"
,
"timeout"
:
60
}
,
"gift_card"
:
{
"callback_url"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"timeout"
:
600
}
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"adyen"
:
{
"callback_url"
:
"adyen_adapter"
,
"timeout"
:
600
}
,
"gift_card"
:
{
"callback_url"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"timeout"
:
6000
}
}
}
]
,
"internal_providers"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"square"
:
{
"endpoint"
:
"/psp_square.PSPSquare/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
30
}
,
"store_credit"
:
{
"endpoint"
:
"/store_credit.StoreCredit/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
30
}
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"square"
:
{
"endpoint"
:
"/psp_square.PSPSquare/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
300
}
,
"store_credit"
:
{
"endpoint"
:
"/store_credit.StoreCredit/Execute"
,
"protocol"
:
"grpc"
,
"timeout"
:
300
}
}
}
]
}
Gift card configuration
Returns the configuration of gift card.
Authorizations:
newStoreAccessToken
Responses
200
The gift card configuration.
get
/config/gift_card
/v1/p
/config/gift_card
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"provider"
:
{
"endpoint"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"gift_card_ids"
:
[
"2000081"
]
,
"name"
:
"gift_card"
,
"timeout"
:
15
,
"api_key"
:
"RNTMN123AQT50"
}
,
"store_configurations"
:
{
"cash_out_enabled"
:
false
,
"store_mapping"
:
[
{
"store_id"
:
"US01"
,
"cash_out_enabled"
:
true
}
]
}
}
Update gift card configuration
Updates the configuration of gift card.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
provider
required
object
provider configuration for the tenant
store_configurations
object
gift card store configuration for the tenant
Responses
200
The operation was successful.
put
/config/gift_card
/v1/p
/config/gift_card
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"provider"
:
{
"endpoint"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"gift_card_ids"
:
[
"2000081"
]
,
"name"
:
"gift_card"
,
"timeout"
:
15
,
"api_key"
:
"RNTMN123AQT50"
}
,
"store_configurations"
:
{
"cash_out_enabled"
:
false
,
"store_mapping"
:
[
{
"store_id"
:
"US01"
,
"cash_out_enabled"
:
true
}
]
}
}
Audit history for Gift Card configuration
Returns a list of the current and all previous values for the Gift Card configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Gift Card configuration
get
/config/gift_card/history
/v1/p
/config/gift_card/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"provider"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"endpoint"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"gift_card_ids"
:
[
"2000081"
]
,
"name"
:
"gift_card"
,
"timeout"
:
15
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"endpoint"
:
"
https://cdm9ij5w28.execute-api.us-east-1.amazonaws.com/x
"
,
"gift_card_ids"
:
[
"2000081"
]
,
"name"
:
"gift_card"
,
"timeout"
:
150
}
}
]
,
"store_configurations"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"cash_out_enabled"
:
"true,"
,
"store_mapping"
:
[
{
"store_id"
:
"US01"
,
"cash_out_enabled"
:
false
}
]
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"cash_out_enabled"
:
"false,"
,
"store_mapping"
:
[ ]
}
}
]
}
Payment NOM configuration
Returns the NOM configuration. If no configuration was set, the example payload will be returned as the default response.
Authorizations:
newStoreAccessToken
Responses
200
The NOM configuration for the payment context.
get
/config/nom
/v1/p
/config/nom
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"transaction_details_urls"
:
{
"adyen"
:
"
https://ca-test.adyen.com/ca/ca/accounts/showTx.shtml?txType=Payment&pspReference=
"
,
"paypal"
:
"
https://sandbox.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
,
"stripe"
:
"
https://dashboard.stripe.com/test/payments/
"
,
"vzero"
:
"
https://sandbox.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
}
}
Update NOM configuration
Updates the payment configuration of NOM.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
transaction_details_urls
object
Map of key/value where the key is the provider name and the value is the base url for payment links.
Responses
200
The operation was successful.
put
/config/nom
/v1/p
/config/nom
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"transaction_details_urls"
:
{
"adyen"
:
"
https://ca-test.adyen.com/ca/ca/accounts/showTx.shtml?txType=Payment&pspReference=
"
,
"paypal"
:
"
https://sandbox.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
,
"stripe"
:
"
https://dashboard.stripe.com/test/payments/
"
,
"vzero"
:
"
https://sandbox.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
}
}
Audit history for NOM configuration
Returns a list of the current and all previous values for the NOM configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the NOM configuration
get
/config/nom/history
/v1/p
/config/nom/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"transaction_details_urls"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"adyen"
:
"
https://ca-test.adyen.com/ca/ca/accounts/showTx.shtml?txType=Payment&pspReference=
"
,
"paypal"
:
"
https://sandbox.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
,
"stripe"
:
"
https://dashboard.stripe.com/test/payments/
"
,
"vzero"
:
"
https://sandbox.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"adyen"
:
"
https://ca-test.adyen.com/ca/ca/accounts/showTx.shtml?txType=Payment&pspReference=
"
,
"paypal"
:
"
https://sandbox.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
,
"stripe"
:
"
https://dashboard.stripe.com/test/payments/
"
,
"vzero"
:
"
https://staging.paypal.com/cgi-bin/webscr?cmd=_view-a-trans&id=
"
}
}
]
}
NewStore Checkout configuration
Returns the configuration of NewStore Checkout.
Authorizations:
newStoreAccessToken
Responses
200
The NewStore Checkout configuration.
get
/config/newstore_checkout
/v1/p
/config/newstore_checkout
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"http_timeout"
:
600
,
"encryption_pass_phrase"
:
"you can use any random value"
,
"supported_payment_methods"
:
[
"applepay"
,
"paywithgoogle"
,
"paypal"
,
"scheme"
]
,
"tenant_url"
:
"www.dodici.com"
,
"tenant_url_label"
:
"Dodici"
,
"payment_methods"
:
{
"scheme"
:
{
"capture_billing_address"
:
true
}
}
,
"wallets"
:
{
"apple_pay"
:
{
"domain_name"
:
"newstorecheckout.dodici.x.newstore.net"
,
"merchant_identifier"
:
"merchant.com.newstore.dodici.demo"
,
"display_name"
:
"Dodici"
,
"supported_networks"
:
{
"default"
:
[
"visa"
,
"masterCard"
,
"amex"
,
"discover"
]
}
,
"url"
:
"
https://apple-pay-gateway-cert.apple.com/paymentservices/startSession
"
}
,
"google_pay"
:
{
"merchant_identifier"
:
"Google merchant ID"
}
,
"paypal"
:
{
"merchant_identifier"
:
"PayPal merchant ID"
}
}
,
"psps"
:
{
"adyen"
:
{
"base_url"
:
"
https://dodici.x.newstore.net/_/v0/org/psps/adyen/newstorecheckout
"
,
"merchant_account"
:
"NewStorePOS"
}
}
,
"enable_web_drop_in"
:
true
}
Update NewStore Checkout configuration
Updates the configuration of NewStore Checkout.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
http_timeout
integer
Default:
10000
Maximum waiting time in milliseconds for an external HTTP request. MUST be smaller than gRPC timeout.
encryption_pass_phrase
string
Pass phrase used by the hash algorithm to generate the cart token.
supported_payment_methods
Array of
strings
Payment methods that are supported by the retailer
tenant_url
string
The URL to the tenant website displayed to the customer when the payment completes.
tenant_url_label
string
The label that should be used instead of the website URL for the link when the payment completes.
wallets
object
Digital wallet configuration.
payment_methods
object
Payment methods configuration.
psps
object
Payment Service Provider configuration.
enable_web_drop_in
boolean
Default:
false
Indicates wether the Adyen Web DropIn should be used.
Responses
200
The operation was successful.
put
/config/newstore_checkout
/v1/p
/config/newstore_checkout
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"http_timeout"
:
600
,
"encryption_pass_phrase"
:
"you can use any random value"
,
"supported_payment_methods"
:
[
"applepay"
,
"paywithgoogle"
,
"paypal"
,
"scheme"
]
,
"tenant_url"
:
"www.dodici.com"
,
"tenant_url_label"
:
"Dodici"
,
"payment_methods"
:
{
"scheme"
:
{
"capture_billing_address"
:
true
}
}
,
"wallets"
:
{
"apple_pay"
:
{
"domain_name"
:
"newstorecheckout.dodici.x.newstore.net"
,
"merchant_identifier"
:
"merchant.com.newstore.dodici.demo"
,
"display_name"
:
"Dodici"
,
"supported_networks"
:
{
"default"
:
[
"visa"
,
"masterCard"
,
"amex"
,
"discover"
]
}
,
"url"
:
"
https://apple-pay-gateway-cert.apple.com/paymentservices/startSession
"
}
,
"google_pay"
:
{
"merchant_identifier"
:
"Google merchant ID"
}
,
"paypal"
:
{
"merchant_identifier"
:
"PayPal merchant ID"
}
}
,
"psps"
:
{
"adyen"
:
{
"base_url"
:
"
https://dodici.x.newstore.net/_/v0/org/psps/adyen/newstorecheckout
"
,
"merchant_account"
:
"NewStorePOS"
}
}
,
"enable_web_drop_in"
:
true
}
Audit history for NewStore Checkout configuration
Returns a list of the current and all previous values for the NewStore Checkout configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the NewStore Checkout configuration
get
/config/newstore_checkout/history
/v1/p
/config/newstore_checkout/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"http_timeout"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
600
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
6000
}
]
,
"encryption_pass_phrase"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
"you can use any random value v2"
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
"you can use any random value v1"
}
]
,
"supported_payment_methods"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
[
"applepay"
,
"paywithgoogle"
,
"paypal"
,
"scheme"
]
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
[
"applepay"
,
"paywithgoogle"
,
"paypal"
]
}
]
,
"tenant_url"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
"www.dodici.com"
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
"www.dodici.com"
}
]
,
"tenant_url_label"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
"Dodici"
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
"Dodici"
}
]
,
"wallets"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"apple_pay"
:
null
,
"domain_name"
:
"newstorecheckout.dodici.x.newstore.net"
,
"merchant_identifier"
:
"merchant.com.newstore.dodici.demo"
,
"supported_networks"
:
{
"default"
:
[
"visa"
,
"masterCard"
,
"amex"
,
"discover"
]
}
,
"url"
:
"
https://apple-pay-gateway-cert.apple.com/paymentservices/startSession
"
}
,
"google_pay"
:
{
"merchant_identifier"
:
"Google merchant ID"
}
,
"paypal"
:
{
"merchant_identifier"
:
"PayPal merchant ID"
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"apple_pay"
:
null
,
"domain_name"
:
"newstorecheckout.dodici.x.newstore.net"
,
"merchant_identifier"
:
"merchant.com.newstore.dodici.demo"
,
"supported_networks"
:
{
"default"
:
[
"visa"
,
"masterCard"
,
"amex"
,
"discover"
]
}
,
"url"
:
"
https://apple-pay-gateway-cert.apple.com/paymentservices/startSession
"
}
,
"google_pay"
:
{
"merchant_identifier"
:
"Google merchant ID"
}
,
"paypal"
:
{
"merchant_identifier"
:
"PayPal merchant ID"
}
}
]
,
"psps"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"adyen"
:
{
"base_url"
:
"
https://dodici.x.newstore.net/_/v0/org/psps/adyen/newstorecheckout
"
,
"merchant_account"
:
"NewStorePOS"
}
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"adyen"
:
{
"base_url"
:
"
https://dodici.x.newstore.net/_/v0/org/psps/adyen/newstorecheckout
"
,
"merchant_account"
:
"NewStorePOS"
}
}
}
]
,
"enable_web_drop_in"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
true
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
true
}
]
}
Payment Account configuration
Returns the configuration of Payment Account.
Authorizations:
newStoreAccessToken
Responses
200
The Payment Account configuration.
get
/config/payment_account
/v1/p
/config/payment_account
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"default_capture_strategy"
:
"ordered"
,
"default_refund_strategy"
:
"ordered"
,
"available_strategies"
:
{
"gift_card"
:
null
,
"ordered"
:
{
"payment_methods"
:
[
"credit_card"
,
"store_credit"
,
"cash"
]
}
,
"store_credit"
:
null
}
,
"partial_unreferenced_refund_payment_invalidation"
:
true
,
"add_gift_card_instrument_on_issue"
:
true
}
Update Payment Account configuration
Updates the configuration of payment account.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
default_capture_strategy
string
the name of the default strategy for capture
default_refund_strategy
string
the name of the default strategy for refund
available_strategies
object
Mapping of strategy_name->configuration of the available strategies. For a list of available strategies, consult payment_account documentation
partial_unreferenced_refund_payment_invalidation
boolean
defines how unreferenced refunds affect existing payments. If set to true, invalidates only the amount for which the unreferenced refund was made. Otherwise, it invalidates all existing payments.
add_gift_card_instrument_on_issue
boolean
defines whether funds to process a new gift card refund are added to the account before or during the gift card issuing request.
Responses
200
The operation was successful.
put
/config/payment_account
/v1/p
/config/payment_account
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"default_capture_strategy"
:
"ordered"
,
"default_refund_strategy"
:
"ordered"
,
"available_strategies"
:
{
"gift_card"
:
null
,
"ordered"
:
{
"payment_methods"
:
[
"credit_card"
,
"store_credit"
,
"cash"
]
}
,
"store_credit"
:
null
}
,
"partial_unreferenced_refund_payment_invalidation"
:
true
,
"add_gift_card_instrument_on_issue"
:
true
}
Audit history for Payment Account configuration
Returns a list of the current and all previous values for the Payment Account configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Payment Account configuration
get
/config/payment_account/history
/v1/p
/config/payment_account/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"default_capture_strategy"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
"ordered"
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
"ordered"
}
]
,
"default_refund_strategy"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
"ordered"
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
"ordered"
}
]
,
"available_strategies"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"gift_card"
:
null
,
"ordered"
:
{
"payment_methods"
:
[
"credit_card"
,
"store_credit"
,
"cash"
]
}
,
"store_credit"
:
null
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"gift_card"
:
null
,
"ordered"
:
{
"payment_methods"
:
[
"credit_card"
,
"store_credit"
,
"cash"
]
}
,
"store_credit"
:
null
}
}
]
,
"partial_unreferenced_refund_payment_invalidation"
:
[
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
true
}
]
}
Payment Capture configuration
Returns the configuration of the payment capture.
Authorizations:
newStoreAccessToken
Responses
200
The Payment Capture configuration.
get
/config/payment_capture
/v1/p
/config/payment_capture
Response samples
200
Content type
application/json
Copy
{
"use_charge_api"
:
false
}
Update payment capture configuration
Updates the configuration of the payment capture.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
use_charge_api
boolean
Default:
false
Define whether captures are triggered based on logistic order events or explicitly via charge API.
Responses
200
The operation was successful.
put
/config/payment_capture
/v1/p
/config/payment_capture
Request samples
Payload
Content type
application/json
Copy
{
"use_charge_api"
:
false
}
Audit history for Payment Capture configuration
Returns a list of the current and all previous values for the Payment Capture configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Payment Capture configuration
get
/config/payment_capture/history
/v1/p
/config/payment_capture/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"use_charge_api"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"2019-12-25T00:00:00Z"
,
"current"
:
true
,
"value"
:
false
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"2019-12-12T14:30:00Z"
,
"value"
:
true
}
]
}
Payment Engine configuration
Returns the configuration of payment engine.
Authorizations:
newStoreAccessToken
Responses
200
The Payment Engine configuration.
get
/config/payment_engine
/v1/p
/config/payment_engine
Response samples
200
Content type
application/json
Copy
{
"experimental_mode"
:
false
}
Update payment engine configuration
Updates the configuration of payment engine.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
experimental_mode
boolean
Default:
false
Enable experimental mode in payment engine.
Responses
200
The operation was successful.
put
/config/payment_engine
/v1/p
/config/payment_engine
Request samples
Payload
Content type
application/json
Copy
{
"experimental_mode"
:
false
}
Audit history for Payment Engine configuration
Returns a list of the current and all previous values for the Payment Engine configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Payment Capture configuration
get
/config/payment_engine/history
/v1/p
/config/payment_engine/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"experimental_mode"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"2019-12-25T00:00:00Z"
,
"current"
:
true
,
"value"
:
false
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"2019-12-12T14:30:00Z"
,
"value"
:
true
}
]
}
Payment options configuration
Returns the configuration of payment options.
Authorizations:
newStoreAccessToken
Responses
200
The payment options configuration.
get
/config/payment_options
/v1/p
/config/payment_options
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"payment_options"
:
[
"adyen_terminal"
,
"cash"
,
"gift_card"
,
"worldline"
]
,
"refund_options"
:
[
"original"
,
"gift_card"
,
"e_gift_card"
,
"credit_card"
,
"external"
]
,
"store_mapping"
:
[
{
"payment_options"
:
[
"gift_card"
,
"adyen_terminal"
]
,
"refund_options"
:
[
"original"
,
"gift_card"
]
,
"store_id"
:
"US01"
}
]
}
Update payment options configuration
Updates the configuration of payment options.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
payment_options
Array of
strings
Items
Enum
:
"stripe"
"adyen"
"adyen_terminal"
"adyen_pay_by_link"
"adyen_pos"
"square"
"cash"
"gift_card"
"newstore_checkout"
"non_integrated"
"verifone"
"worldline"
"card_reader"
The default list of payment options that can be offered in a store.
refund_options
Array of
strings
Items
Enum
:
"original"
"gift_card"
"e_gift_card"
"credit_card"
"external"
"non_integrated"
"worldline"
"card_reader"
The default list of refund options that can be offered in a store.
store_mapping
Array of
objects
Store-specific payment options configuration. It overrides the defaults for the configured store.
non_integrated_payment_methods
Array of
strings
The default list of non-integrated payment methods that can be offered in a store.
non_integrated_methods_definition
object
Definition of non-integrated payment methods to be referenced globally or per store
Responses
200
The operation was successful.
put
/config/payment_options
/v1/p
/config/payment_options
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"payment_options"
:
[
"adyen_terminal"
,
"cash"
,
"gift_card"
,
"worldline"
]
,
"refund_options"
:
[
"original"
,
"gift_card"
,
"e_gift_card"
,
"credit_card"
,
"external"
]
,
"store_mapping"
:
[
{
"payment_options"
:
[
"gift_card"
,
"adyen_terminal"
]
,
"refund_options"
:
[
"original"
,
"gift_card"
]
,
"store_id"
:
"US01"
}
]
}
Audit history for Payment Options configuration
Returns a list of the current and all previous values for the Payment Options configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Payment Options configuration
get
/config/payment_options/history
/v1/p
/config/payment_options/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"payment_options"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
[
"adyen_terminal"
,
"adyen_pay_by_link"
,
"cash"
,
"gift_card"
]
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
[
"adyen_terminal"
,
"cash"
,
"gift_card"
]
}
]
,
"refund_options"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
[
"original"
,
"gift_card"
,
"e_gift_card"
,
"credit_card"
,
"external"
]
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
[
"original"
,
"gift_card"
,
"e_gift_card"
,
"credit_card"
,
"external"
]
}
]
,
"store_mapping"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
[
{
"payment_options"
:
[
"adyen"
,
"adyen_terminal"
,
"gift_card"
]
,
"refund_options"
:
[
"original"
,
"gift_card"
]
,
"store_id"
:
"US01"
}
]
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
[
{
"payment_options"
:
[
"adyen"
,
"adyen_terminal"
,
"gift_card"
]
,
"refund_options"
:
[
"original"
,
"gift_card"
]
,
"store_id"
:
"US01"
}
]
}
]
}
Payments watcher configuration
Returns the configuration of payments watcher.
Authorizations:
newStoreAccessToken
Responses
200
The payments watcher configuration.
get
/config/payments_watcher
/v1/p
/config/payments_watcher
Response samples
200
Content type
application/json
Copy
{
"failed_capture_retry_enabled"
:
true
,
"failed_refund_retry_enabled"
:
false
,
"failed_revoke_retry_enabled"
:
true
,
"failed_add_retry_enabled"
:
true
}
Update payments watcher configuration
Updates the configuration of payments watcher.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
failed_capture_retry_enabled
boolean
When enabled will trigger automatic retries for failed capture operations.
failed_refund_retry_enabled
boolean
When enabled will trigger automatic retries for failed refund operations.
failed_revoke_retry_enabled
boolean
When enabled will trigger automatic retries for failed revoke operations.
failed_add_retry_enabled
boolean
When enabled will trigger automatic retries for failed add financial instrument operations.
Responses
200
The operation was successful.
put
/config/payments_watcher
/v1/p
/config/payments_watcher
Request samples
Payload
Content type
application/json
Copy
{
"failed_capture_retry_enabled"
:
true
,
"failed_refund_retry_enabled"
:
false
,
"failed_revoke_retry_enabled"
:
true
,
"failed_add_retry_enabled"
:
true
}
Audit history for Payments Watcher configuration
Returns a list of the current and all previous values for the Payments Watcher configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the Payments Watcher configuration
get
/config/payments_watcher/history
/v1/p
/config/payments_watcher/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"failed_capture_retry_enabled"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
true
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
true
}
]
,
"failed_refund_retry_enabled"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
false
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
false
}
]
,
"failed_revoke_retry_enabled"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
true
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
true
}
]
,
"failed_add_retry_enabled"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
true
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
true
}
]
}
PSP Adyen configuration
Returns the configuration of PSP Adyen.
Authorizations:
newStoreAccessToken
Responses
200
The PSP Adyen configuration.
get
/config/psp_adyen
/v1/p
/config/psp_adyen
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"checkout_api"
:
{
"base_url"
:
"
https://checkout-test.adyen.com/v65
"
,
"environment"
:
"test"
,
"timeout"
:
30
}
,
"standard_api"
:
{
"base_url"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"timeout"
:
10
}
,
"payment_reauthorization"
:
{
"authorization_expiration"
:
7
,
"enabled"
:
true
}
,
"pos"
:
{
"authorization_type"
:
"PreAuth"
,
"credentials"
:
{
"account"
:
"NewStorePOS"
,
"company_account"
:
"NewStore"
}
,
"environment"
:
"test"
,
"terminal_api_url"
:
"
https://terminal-api-test.adyen.com
"
,
"payment_subject"
:
"Giovanna Dodici"
,
"store_mapping"
:
[
{
"adyen_store_id"
:
"1001"
,
"store_id"
:
"US01"
}
,
{
"adyen_store_id"
:
"1201"
,
"store_id"
:
"US02"
,
"terminal_api_url"
:
"
https://terminal-api-test.adyen.com
"
,
"merchant_config"
:
{
"credentials"
:
{
"account"
:
"NewStoreCOM"
,
"company_account"
:
"Dodici"
}
}
}
]
}
}
Update PSP Adyen configuration
Updates the configuration of PSP Adyen.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
checkout_api
object
The checkout Adyen API is used by NewStore Checkout.
standard_api
object
The standard Adyen API is used for payment reauthorizations.
payment_reauthorization
object
Specifies how the payment reauthorization should be performed.
pos
object
Defines the Associate App payment settings.
Responses
200
The operation was successful.
put
/config/psp_adyen
/v1/p
/config/psp_adyen
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"checkout_api"
:
{
"base_url"
:
"
https://checkout-test.adyen.com/v65
"
,
"environment"
:
"test"
,
"timeout"
:
30
}
,
"standard_api"
:
{
"base_url"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"timeout"
:
10
}
,
"payment_reauthorization"
:
{
"authorization_expiration"
:
7
,
"enabled"
:
true
}
,
"pos"
:
{
"authorization_type"
:
"PreAuth"
,
"credentials"
:
{
"account"
:
"NewStorePOS"
,
"company_account"
:
"NewStore"
}
,
"environment"
:
"test"
,
"terminal_api_url"
:
"
https://terminal-api-test.adyen.com
"
,
"payment_subject"
:
"Giovanna Dodici"
,
"store_mapping"
:
[
{
"adyen_store_id"
:
"1001"
,
"store_id"
:
"US01"
}
,
{
"adyen_store_id"
:
"1201"
,
"store_id"
:
"US02"
,
"terminal_api_url"
:
"
https://terminal-api-test.adyen.com
"
,
"merchant_config"
:
{
"credentials"
:
{
"account"
:
"NewStoreCOM"
,
"company_account"
:
"Dodici"
}
}
}
]
}
}
Audit history for PSP Adyen configuration
Returns a list of the current and all previous values for the PSP Adyen configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the PSP Adyen configuration
get
/config/psp_adyen/history
/v1/p
/config/psp_adyen/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"checkout_api"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"base_url"
:
"
https://checkout-test.adyen.com/v65
"
,
"environment"
:
"test"
,
"timeout"
:
30
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"base_url"
:
"
https://checkout-test.adyen.com/v65
"
,
"environment"
:
"test"
,
"timeout"
:
300
}
}
]
,
"standard_api"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"base_url"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"timeout"
:
10
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"base_url"
:
"
https://pal-test.adyen.com/pal/servlet/Payment/[version]
"
,
"timeout"
:
100
}
}
]
,
"payment_reauthorization"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"authorization_expiration"
:
7
,
"enabled"
:
true
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"authorization_expiration"
:
1
,
"enabled"
:
true
}
}
]
,
"pos"
:
[
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"authorization_type"
:
"PreAuth"
,
"terminal_api_url"
:
"
https://terminal-api-live.adyen.com
"
,
"capture_type"
:
"immediate"
,
"credentials"
:
{
"account"
:
"NewStorePOS"
,
"company_account"
:
"NewStore"
}
,
"environment"
:
"test"
,
"payment_subject"
:
"Giovanna Dodici"
,
"store_mapping"
:
[
{
"adyen_store_id"
:
"1001"
,
"store_id"
:
"US01"
}
,
{
"adyen_store_id"
:
"1201"
,
"store_id"
:
"US02"
,
"terminal_api_url"
:
"
https://terminal-api-live-au.adyen.com
"
,
"merchant_config"
:
{
"credentials"
:
{
"account"
:
"NewStoreCOM"
,
"company_account"
:
"Dodici"
}
}
}
]
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"authorization_type"
:
"PreAuth"
,
"capture_type"
:
"immediate"
,
"credentials"
:
{
"account"
:
"NewStorePOS"
,
"company_account"
:
"NewStore"
}
,
"terminal_api_url"
:
"
https://terminal-api-live.adyen.com
"
,
"environment"
:
"test"
,
"payment_subject"
:
"Giovanna Dodici"
,
"store_mapping"
:
[
{
"adyen_store_id"
:
"1001"
,
"store_id"
:
"US01"
}
,
{
"adyen_store_id"
:
"1201"
,
"store_id"
:
"US02"
,
"terminal_api_url"
:
"
https://terminal-api-live-au.adyen.com
"
,
"merchant_config"
:
{
"credentials"
:
{
"account"
:
"NewStoreCOM"
,
"company_account"
:
"Dodici"
}
}
}
]
}
}
]
}
PSP Square configuration
Returns the configuration of PSP Square.
Authorizations:
newStoreAccessToken
Responses
200
The PSP Square configuration.
get
/config/psp_square
/v1/p
/config/psp_square
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"api"
:
{
"base_url"
:
"
https://connect.squareup.com/v2
"
}
,
"store_mapping"
:
[
{
"store_id"
:
"US01"
,
"location_id"
:
"1001"
}
,
{
"store_id"
:
"JP01"
,
"location_id"
:
"1002"
}
]
}
Update PSP Square configuration
Updates the configuration of PSP Square.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
api
object
Configuration parameters for the Square API.
store_mapping
Array of
objects
A list of related NewStore store IDs and their corresponding Square location IDs. NewStore Store IDs should be unique.
Responses
200
The operation was successful.
put
/config/psp_square
/v1/p
/config/psp_square
Request samples
Payload
Content type
application/json
Copy
Expand all
Collapse all
{
"api"
:
{
"base_url"
:
"
https://connect.squareup.com/v2
"
}
,
"store_mapping"
:
[
{
"store_id"
:
"US01"
,
"location_id"
:
"1001"
}
,
{
"store_id"
:
"JP01"
,
"location_id"
:
"1002"
}
]
}
Audit history for PSP Square configuration
Returns a list of the current and all previous values for the PSP Square configuration.
Authorizations:
newStoreAccessToken
Responses
200
The audit history of the PSP Square configuration
get
/config/psp_square/history
/v1/p
/config/psp_square/history
Response samples
200
Content type
application/json
Copy
Expand all
Collapse all
{
"api"
:
[
{
"version"
:
3
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
{
"base_url"
:
"
https://connect.squareup.com/v3
"
}
}
,
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"base_url"
:
"
https://connect.squareup.com/v2
"
}
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
{
"base_url"
:
"
https://connect.squareup.com/v1
"
}
}
]
,
"store_mapping"
:
[
{
"version"
:
3
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"current"
:
true
,
"value"
:
[
{
"store_id"
:
"US03"
,
"location_id"
:
"1003"
}
,
{
"store_id"
:
"JP03"
,
"location_id"
:
"1003"
}
]
}
,
{
"version"
:
2
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
[
{
"store_id"
:
"US02"
,
"location_id"
:
"1002"
}
,
{
"store_id"
:
"JP02"
,
"location_id"
:
"1002"
}
]
}
,
{
"version"
:
1
,
"user_id"
:
"b040334f-a6ea-4bfb-a3e0-eb1adce2052d"
,
"inserted_at"
:
"0001-01-01T00:00:00Z"
,
"value"
:
[
{
"store_id"
:
"US01"
,
"location_id"
:
"1001"
}
,
{
"store_id"
:
"JP01"
,
"location_id"
:
"1001"
}
]
}
]
}
Create a payment link for a customer to pay a cart
Returns an object that includes a url for paying a specific amount referencing a cart. If the cart totals change, a new link has to be created.
Authorizations:
newStoreAccessToken
Request Body schema:
application/json
payment_reference
required
string
The payment reference
store_id
required
string
Id of the store
amount
required
number
Amount of the order in cents
currency
required
string
Currency of the order
country_code
string
Default:
"ZZ"
Two-letter country code to determine the payment options displayed. Unknown country is assumed when omitted.
customer
object
Customer object for optional risk assessment. If not present, it's captured from the shopper before paying.
Responses
200
Successful Pay Bu Link response
post
/adyen_pay_by_link/payment_links
/v1/p
/adyen_pay_by_link/payment_links
Request samples
Payload
Content type
application/json
Copy
{
"payment_reference"
:
"ref"
,
"amount"
:
5000
,
"currency"
:
"USD"
,
"store_id"
:
"7c9f2605-9fb3-5444-8fee-47fe51608efe"
,
"country_code"
:
"US"
}
Response samples
200
Content type
application/json
Copy
{
"url"
:
"
https://test.adyen.link/PLF7CEC74DABD9295D
"
,
"status"
:
"active"
,
"reusable"
:
false
,
"id"
:
"PLF7CEC74DABD9295D"
,
"expires_at"
:
"2022-09-03T07:48:50Z"
}
Previous
Item Return Configuration API
Next
Square credentials API
Copyright Â© 2025 NewStore, Inc.