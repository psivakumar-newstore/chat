openapi: 3.0.0
info:
  title: NOM API
  version: '0.1'
  description: >-
    NewStore HQ BFF, mirror service for the NewStore HQ providing HTTP
    endpoints.
servers:
  - url: https://dodici.x.newstore.net/_/v0/hq
paths:
  /coupon_definitions:
    get:
      responses:
        '200':
          description: List all coupon definitions.
          content:
            application/json:
              schema:
                title: Coupon Definitions
                description: List of coupon definitions
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/coupon_definition'
                required:
                  - items
        '500':
          description: Internal server error.
      description: Retrieves a list of all coupon definitions.
      operationId: List_coupon_definitions
      summary: List_coupon_definitions
      parameters:
        - $ref: '#/components/parameters/trait_Filtering_filter'
        - $ref: '#/components/parameters/trait_Paginated_offset'
        - $ref: '#/components/parameters/trait_Paginated_count'
        - $ref: '#/components/parameters/trait_Sorting_sort'
        - $ref: '#/components/parameters/trait_Supporting_Fulltext_Search_q'
    post:
      responses:
        '200':
          description: Successfully created the definition.
          content:
            application/json:
              schema:
                required:
                  - id
                  - label
                example:
                  id: 8E168C319380714DC78D399005105202FC8F
                  label: discount_christmas
                type: object
                properties:
                  id:
                    description: >-
                      The coupon definition ID generated by NewStore. This is
                      just exposed for tracing reasons. To create a coupon, use
                      the 'label' property of the definition.
                    type: string
                  label:
                    description: >-
                      The provided definition label. Use this label to create
                      coupons using the '/coupon_definitions POST' method.
                    type: string
        '404':
          description: No discount rule found with the given ID.
        '409':
          description: The given coupon definition label already exists.
        '500':
          description: Internal server error.
      description: >
        Creates a coupon definition from a [discount rule](#discount-rules). The
        coupon definition can be used to create a
        [coupon](#coupons-create-coupon).
      operationId: Create_coupon_definition
      summary: Create_coupon_definition
      requestBody:
        content:
          application/json:
            schema:
              title: Create coupon definition request
              required:
                - label
                - pattern
                - discount_rule_id
              description: >-
                A definition is required to create a coupon. Some of the
                properties set in the definition can be overwritten by the
                coupon itself at coupon creation time.
              type: object
              properties:
                label:
                  minLength: 1
                  description: >-
                    Label to identify the coupon definition by. Must be unique,
                    second call with the same label will fail.
                  type: string
                pattern:
                  minLength: 1
                  description: RegEx pattern to generate the coupon code with.
                  type: string
                validation_rules:
                  description: >-
                    A list of validation rules applied by default to the coupons
                    created with this coupon definition.
                  type: array
                  items:
                    type: string
                discount_rule_id:
                  minLength: 1
                  description: >-
                    Unique identifier of the discount rule applied by default to
                    the coupons.
                  type: string
                channel_types:
                  maxItems: 5
                  type: array
                  items:
                    enum:
                      - web
                      - mobile
                      - mobile_ios
                      - mobile_android
                      - store
                    type: string
                max_redemptions:
                  minimum: 1
                  description: >-
                    TThe maximum number of times a coupon based on this
                    definition can be redeemed.
                  type: integer
        required: true
  /coupon_definitions/{id}:
    get:
      responses:
        '200':
          description: The requested coupon definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coupon_definition'
        '404':
          description: No coupon definition found with the requested ID.
        '500':
          description: Internal server error.
      description: Retrieves the coupon definition with the provided ID.
      operationId: Get_coupon_definition
      summary: Get_coupon_definition
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The ID of a coupon definition.
  /coupons:
    get:
      responses:
        '200':
          description: List all coupons.
          content:
            application/json:
              schema:
                title: Coupons
                description: List of coupons
                example:
                  items:
                    - id: 8E168C319380714DC78D399005105202FC8F
                      code: XMAS2018-20
                      label: xmas-2018-20pt-order
                    - id: 3729C78D3945234455202FB8F32714D90050
                      code: XMAS2018-30
                      label: xmas-2018-30pt-order
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/coupon'
                required:
                  - items
        '500':
          description: Internal server error.
      description: not provided
      operationId: List_coupons
      summary: List_coupons
      parameters:
        - $ref: '#/components/parameters/trait_Filtering_filter'
        - $ref: '#/components/parameters/trait_Paginated_offset'
        - $ref: '#/components/parameters/trait_Paginated_count'
        - $ref: '#/components/parameters/trait_Sorting_sort'
        - $ref: '#/components/parameters/trait_Supporting_Fulltext_Search_q'
    post:
      responses:
        '201':
          description: Successfully created the coupon.
          content:
            application/json:
              schema:
                title: Coupon
                required:
                  - id
                  - code
                example:
                  id: 8E168C319380714DC78D399005105202FC8F
                  code: XMAS2018
                  label: discount_christmas
                  is_enabled: true
                type: object
                properties:
                  id:
                    minLength: 36
                    maxLength: 36
                    description: >-
                      Unique identifier of created coupon template (currently,
                      uuid)
                    type: string
                  code:
                    minLength: 1
                    description: Generated coupon code
                    type: string
                  label:
                    minLength: 1
                    description: Returned whenever there is a label assigned to the coupon.
                    type: string
                  is_enabled:
                    description: >-
                      If true, the coupon is enabled (active). If false, the
                      coupon is disabled (inactive)
                    type: boolean
        '400':
          description: Something was wrong with the request.
        '404':
          description: Discount rule or template label could not be found.
        '412':
          description: No more coupon codes available.
        '500':
          description: Something was wrong with the request.
      description: Creates a coupon using the given definition.
      operationId: Create_coupon
      summary: Create_coupon
      requestBody:
        content:
          application/json:
            schema:
              title: Create coupon request
              required:
                - template_label
              type: object
              properties:
                label:
                  description: Optional label to apply to the coupon.
                  type: string
                template_label:
                  minLength: 1
                  description: >-
                    Coupon template label to create coupon by. Multiple coupons
                    can be created using the same label.
                  type: string
                validation_rules:
                  description: >-
                    OPTIONAL: A list of validation rules to be applied to the
                    coupon. The list provided here is intersected with the one
                    coupon template provides, and validation rules from this
                    list override the ones from coupon template's list on
                    conflict
                  type: array
                  items:
                    type: string
        required: true
  /coupons/{id}:
    put:
      responses:
        '200':
          description: Successfully updated the coupon.
        '404':
          description: No coupon found with this ID.
        '500':
          description: Something was wrong with the request.
      description: Updates a coupon.
      operationId: Update_coupon
      summary: Update_coupon
      requestBody:
        content:
          application/json:
            schema:
              title: Update coupon request
              required:
                - id
                - is_enabled
              type: object
              properties:
                id:
                  minLength: 36
                  maxLength: 36
                  description: Unique identifier of the coupon (currently, uuid)
                  type: string
                is_enabled:
                  description: >-
                    If true, the coupon is enabled (active). If false, the
                    coupon is disabled (inactive)
                  type: boolean
        required: true
    get:
      responses:
        '200':
          description: The requested coupon.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coupon'
        '404':
          description: No coupon found with the requested ID.
        '500':
          description: Internal server error.
      description: Retrieves the coupon with the provided ID.
      operationId: Get_coupon
      summary: Get_coupon
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The ID of a coupon.
  /payments/{account_id}:
    get:
      responses:
        '200':
          description: The payment history of the given account ID.
          content:
            application/json:
              schema:
                title: Get payment by account id
                type: object
                properties:
                  payments:
                    type: array
                    items:
                      description: >-
                        Contains the payment information. Can be used for
                        multiple payments against multiple credit sources (i.e.
                        store credit + CC)
                      type: object
                      properties:
                        activities:
                          description: >-
                            A list of activities. For example
                            authorization-pending, authorization-authorized,
                            capture-captured...
                          type: array
                          items:
                            type: object
                            properties:
                              correlation_id:
                                description: Correlation id of the payment.
                                type: string
                              created_at:
                                format: date-time
                                description: >-
                                  The time the activity was recorded, this can
                                  be null in case canceled activity.
                                type: string
                              processed_at:
                                format: date-time
                                description: >-
                                  The timestamp when the transaction was
                                  processed. Example 2019-02-17T00:00:37.
                                type: string
                              name:
                                description: >-
                                  The name of the activity. E.g.
                                  authorization-pending,
                                  authorization-authorized,
                                  authorization-failed, capture-pending,
                                  capture-captured etc.
                                type: string
                              metadata:
                                type: object
                                properties:
                                  amount:
                                    description: The monetary value of the activity.
                                    type: number
                                  currency:
                                    maxLength: 3
                                    description: >-
                                      Currency code shown and billed to the
                                      consumer.
                                    type: string
                                  transaction_id:
                                    description: >-
                                      The external identifier of the transaction
                                      generated by the payment provider, if
                                      available.
                                    type: string
                                  error_message:
                                    description: >-
                                      Details the error that happened during the
                                      payment, if any. This message is displayed
                                      in Omnichannel Manager. Is filled only in
                                      *-failed cases.
                                    type: string
                                  error_code:
                                    description: >-
                                      The external code of the error. Is filled
                                      only in *-failed cases.
                                    type: string
                                required:
                                  - amount
                                  - currency
                                  - transaction_id
                                  - error_message
                                  - error_code
                            required:
                              - correlation_id
                              - created_at
                              - processed_at
                              - name
                              - metadata
                        id:
                          description: An identifier of the payment.
                          type: string
                        amount:
                          description: The monetary value of the payment.
                          type: number
                        status:
                          description: >-
                            The status of the last activity on the Payment. E.g.
                            authorization-pending authorization-authorized
                            authorization-failed capture-pending
                            capture-captured etc.
                          type: string
                        currency:
                          maxLength: 3
                          description: >-
                            The currency of the amount as 3 character ISO-4217
                            code. Example USD, EUR.
                          type: string
                        date:
                          format: date-time
                          type: string
                          description: The time the last activity was made on the Payment.
                        psp:
                          description: >-
                            The payment service provider (PSP). For example,
                            adyen, stripe, vzero, braintree.
                          type: string
                        method:
                          description: >-
                            The method customer paid for the order. For example,
                            credit_card/cash.
                          type: string
                        wallet:
                          maxLength: 64
                          description: >-
                            The payment wallet used in the transaction. For
                            example, APPLE_PAY/GOOGLE_PAY, or direct (when no
                            wallet was used).
                          type: string
                        origin:
                          maxLength: 64
                          description: >-
                            The origin of the payment. For example,
                            newstore_checkout.
                          type: string
                        payment_information:
                          description: >-
                            Any payment information related to the payment
                            method used. For example, the last 4 digits of the
                            credit card number.
                          type: string
                        category:
                          description: >-
                            Describes if it is a Payment (authorization or
                            capture) or Refund.
                          type: string
                      required:
                        - activities
                        - id
                        - amount
                        - status
                        - currency
                        - date
                        - psp
                        - method
                        - wallet
                        - origin
                        - payment_information
                        - category
                required:
                  - payments
        '400':
          description: Missing input parameter.
        '404':
          description: No payment history with the given account ID found.
      description: Returns the payment history of the specified account.
      operationId: Get_payment_history
      summary: Get_payment_history
    parameters:
      - name: account_id
        in: path
        required: true
        schema:
          type: string
        description: >
          The identifier of an account that contains all payments on an order.


          The value of this parameter must be the internal ID (`UUID`) of a
          sales order.
  /payments/{account_id}/_retry:
    post:
      responses:
        '202':
          description: The requested retry was accepted.
          content:
            application/json:
              schema:
                required:
                  - request_id
                type: object
                properties:
                  messages:
                    minLength: 1
                    description: A list of detailed errors.
                    type: array
                    items:
                      minLength: 1
                      type: string
                  request_id:
                    minLength: 1
                    description: The identifier of the request that failed.
                    type: string
                  error_code:
                    minLength: 1
                    description: A specific identifier about the error that happened.
                    type: string
        '400':
          description: Malformed request.
          content:
            application/json:
              schema:
                required:
                  - request_id
                type: object
                properties:
                  messages:
                    minLength: 1
                    description: A list of detailed errors.
                    type: array
                    items:
                      minLength: 1
                      type: string
                  request_id:
                    minLength: 1
                    description: The identifier of the request that failed.
                    type: string
                  error_code:
                    minLength: 1
                    description: A specific identifier about the error that happened.
                    type: string
        '404':
          description: Requested command not found.
          content:
            application/json:
              schema:
                required:
                  - request_id
                type: object
                properties:
                  messages:
                    minLength: 1
                    description: A list of detailed errors.
                    type: array
                    items:
                      minLength: 1
                      type: string
                  request_id:
                    minLength: 1
                    description: The identifier of the request that failed.
                    type: string
                  error_code:
                    minLength: 1
                    description: A specific identifier about the error that happened.
                    type: string
        '409':
          description: >
            Request is conflicting with internal state.

            This error typically happens when the correlation_id identifies an
            operation that is not an

            authorization or a capture or a refund or if the operation is a
            refund that uses several financial instruments.
          content:
            application/json:
              schema:
                required:
                  - request_id
                type: object
                properties:
                  messages:
                    minLength: 1
                    description: A list of detailed errors.
                    type: array
                    items:
                      minLength: 1
                      type: string
                  request_id:
                    minLength: 1
                    description: The identifier of the request that failed.
                    type: string
                  error_code:
                    minLength: 1
                    description: A specific identifier about the error that happened.
                    type: string
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                required:
                  - request_id
                type: object
                properties:
                  messages:
                    minLength: 1
                    description: A list of detailed errors.
                    type: array
                    items:
                      minLength: 1
                      type: string
                  request_id:
                    minLength: 1
                    description: The identifier of the request that failed.
                    type: string
                  error_code:
                    minLength: 1
                    description: A specific identifier about the error that happened.
                    type: string
      description: >
        Retries the financial operation (authorization, capture or refund)
        identified by the provided correlation identifier.

        To get an operation's correlation identifier,

        use the Get payments endpoint.
      operationId: Retry_operation
      summary: Retry_operation
      requestBody:
        content:
          application/json:
            example:
              correlation_id: 45143100-0922-11e9-b568-0800200c9a66
            schema:
              required:
                - correlation_id
              type: object
              properties:
                correlation_id:
                  minLength: 1
                  description: >-
                    Identifier of the request that should be retried. Only
                    authorizations, captures and refunds are supported.
                  type: string
        required: true
    parameters:
      - name: account_id
        in: path
        required: true
        schema:
          type: string
        description: >
          The identifier of an account that contains all payments on an order.


          The value of this parameter must be the internal ID (`UUID`) of a
          sales order.
  /inventory_transactions:
    get:
      responses:
        '200':
          description: List completed inventory transactions.
          content:
            application/json:
              schema:
                title: Inventory Transaction List
                description: List of inventory transactions
                example:
                  - inventory_transaction_id: e4dc79a3-a970-47eb-9e78-befaa6afe0cc
                    transaction_type: adjustment
                    adjustment_type: Damage Out
                    adjustment_reason: Broken
                    completed_date: '2020-04-14T14:28:54.943613Z'
                    from_location: US01
                    from_location_label: New York store
                    to_location: US01
                    to_location_label: Ney York store
                    associate_name: Jane Smith
                    associate_email: jsmith@company.com
                    status: closed
                    reference: null
                    from_stock_location: main
                    to_stock_location: damaged
                  - inventory_transaction_id: 2d9c16d7-b359-4800-af61-4de0968e0e27
                    transaction_type: transfer
                    adjustment_type: null
                    adjustment_reason: null
                    completed_date: '2020-04-15T14:20:54.943613Z'
                    from_location: US01
                    from_location_label: New York store
                    to_location: US02
                    to_location_label: Los Angeles store
                    associate_name: John Doe
                    associate_email: jdoe@company.com
                    status: closed
                    reference: null
                    from_stock_location: main
                    to_stock_location: null
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/inventory_transaction'
                required:
                  - items
        '500':
          description: Internal server error.
      description: >
        Retrieves a list of all inventory transactions completed using NewStore
        Fulfillment App,

        along with the details of the associates who performed these
        transactions.


        **Note:** The inventory transactions that are still in progress are not
        returned.
      operationId: List_inventory_transactions
      summary: List_inventory_transactions
      parameters:
        - $ref: '#/components/parameters/trait_Filtering_filter'
        - $ref: '#/components/parameters/trait_Paginated_offset'
        - $ref: '#/components/parameters/trait_Paginated_count'
        - $ref: '#/components/parameters/trait_Sorting_sort'
        - $ref: '#/components/parameters/trait_Supporting_Fulltext_Search_q'
  /inventory_transactions/{uuid}:
    get:
      responses:
        '200':
          description: The inventory transaction with the specified ID.
          content:
            application/json:
              example:
                inventory_transaction_id: e4dc79a3-a970-47eb-9e78-befaa6afe0cc
                transaction_type: adjustment
                adjustment_type: Damage Out
                adjustment_reason: Broken
                completed_date: '2020-04-14T14:28:54.943613Z'
                from_location: US01
                from_location_label: New York store
                to_location: US01
                to_location_label: Ney York store
                associate_name: Jane Smith
                associate_email: jsmith@company.com
                status: closed
                reference: null
                from_stock_location: main
                to_stock_location: damaged
                products:
                  - color: Black
                    extended_attributes:
                      - name: fit
                        value: Slim
                    external_identifiers:
                      - type: sku
                        value: PD0000342
                    id: PD0000342
                    quantity: 2
                    image_url: www.image-store.com/PD0000342.png
                    name: Shirt Dress
                    price_catalog: 199
                    size: '8'
                    variation_attribute_1_value: null
                    variation_attribute_2_value: null
              schema:
                $ref: '#/components/schemas/inventory_transaction'
        '400':
          description: Something was wrong with the request.
        '404':
          description: No inventory transaction found with this ID.
        '500':
          description: Internal server error.
      description: Retrieves the inventory transaction with the specified ID.
      operationId: Get_inventory_transaction
      summary: Get_inventory_transaction
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: >
          The internal ID (`UUID`) of an inventory transaction. To retrieve the
          UUID, use the

          [List inventory
          transactions](#inventory-transactions-list-inventory-transactions)
          method.
  /asns:
    get:
      responses:
        '200':
          description: List ASNs.
          content:
            application/json:
              schema:
                title: Inventory ASN List
                description: List of ASNs
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/asn'
                required:
                  - items
        '500':
          description: Internal server error.
      description: >
        Retrieves a list of all ASNs in the platform, along with the details of
        the associated inventory

        operations and associate related to this ASN.
      operationId: List_ASNs
      summary: List_ASNs
      parameters:
        - $ref: '#/components/parameters/trait_Filtering_filter'
        - $ref: '#/components/parameters/trait_Paginated_offset'
        - $ref: '#/components/parameters/trait_Paginated_count'
        - $ref: '#/components/parameters/trait_Sorting_sort'
        - $ref: '#/components/parameters/trait_Supporting_Fulltext_Search_q'
  /asns/{uuid}:
    get:
      responses:
        '200':
          description: The ASN with the specified ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asn'
        '400':
          description: Something was wrong with the request.
        '404':
          description: No ASN found with this ID.
        '500':
          description: Internal server error.
      description: Retrieves the ASN with the specified ID.
      operationId: Get_ASN
      summary: Get_ASN
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
        description: >
          The internal ID of the ASN. To retrieve the UUID, use the [List ASNs
          method](#asns-list-asns).
  /inventory_report:
    get:
      responses:
        '200':
          description: >-
            The list of items, with their associated details, was successfully
            retrieved.
          content:
            application/json:
              schema:
                title: Inventory SOH List
                description: List of the stock on hand
                example:
                  - stock_report_id: e4dc79a3-a970-47eb-9e78-befaa6afe0cc
                    sku: PD0000342
                    product_id: PD0000342
                    title: Shirt
                    color: Black
                    size: XXL
                    price: 99.99
                    currency: USD
                    fulfillment_node_id: US01
                    on_hand: 100
                    updated_at: '2020-04-14T14:28:54.943613Z'
                    stock_location: main
                    store_name: 5thAve
                    image_url: www.image-store.com/PD0000342.png
                  - stock_report_id: 2d9c16d7-b359-4800-af61-4de0968e0e27
                    sku: PD0000342
                    product_id: PD0000342
                    title: Shirt
                    color: Black
                    size: XXL
                    price: 99.99
                    currency: USD
                    fulfillment_node_id: US01
                    on_hand: 1
                    updated_at: '2020-04-14T14:28:54.943613Z'
                    stock_location: damaged
                    store_name: 5thAve
                    image_url: www.image-store.com/PD0000342.png
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/inventory_report'
                required:
                  - items
        '500':
          description: Internal server error.
      description: >
        Retrieves a list of all items in your stores, and associated details,
        including:

        - [Stock on hand](/docs/glossary.html#term-stock-on-hand)

        - [Stock locations](/docs/glossary.html#term-stock-location)

        - [Inventory
        operations](/docs/processes/about-inventory-management.html)
      operationId: List_inventory_stock_on_hand
      summary: List_inventory_stock_on_hand
      parameters:
        - $ref: '#/components/parameters/trait_Filtering_filter'
        - $ref: '#/components/parameters/trait_Paginated_offset'
        - $ref: '#/components/parameters/trait_Paginated_count'
        - $ref: '#/components/parameters/trait_Sorting_sort'
        - $ref: '#/components/parameters/trait_Supporting_Fulltext_Search_q'
components:
  schemas:
    valid_from:
      title: This object is used to set the moment when a coupon becomes usable.
      type: object
      required:
        - label
        - values
      properties:
        label:
          type: string
          enum:
            - valid_from
        values:
          type: object
          required:
            - valid_from
          properties:
            valid_from:
              type: string
              description: >-
                Coupon is valid starting this date. Can be overwritten by the
                coupon. Provide a date in the following format:
                '2006-01-02T15:04:05.999999Z'
              format: date-time
    valid_to:
      title: This object is used to set the moment when a coupon becomes unusable.
      type: object
      required:
        - label
        - values
      properties:
        label:
          type: string
          enum:
            - valid_to
        values:
          type: object
          required:
            - valid_to
          properties:
            valid_to:
              type: string
              description: >-
                Coupon is valid until this date. Can be overwritten by the
                coupon. Provide a date in the following format:
                '2006-01-02T15:04:05.999999Z'
              format: date-time
    restricted_to_consumer_id:
      title: >-
        Restricted to consumer id validation rule object. This object is used to
        limit the use of a coupon by a specific consumer id.
      type: object
      required:
        - label
        - values
      properties:
        label:
          type: string
          enum:
            - restricted_to_consumer_id
        values:
          type: object
          required:
            - consumer_id
          properties:
            consumer_id:
              type: string
              description: The only consumer id that can be used to redeem the coupon.
              minLength: 1
    coupon_definition_data:
      title: Create coupon definition request
      type: object
      description: >-
        A definition is required to create a coupon. Some of the properties set
        in the definition can be overwritten by the coupon itself at coupon
        creation time.
      required:
        - label
        - pattern
        - discount_rule_id
      properties:
        label:
          type: string
          description: >-
            Label to identify the coupon definition by. Must be unique, second
            call with the same label will fail.
          minLength: 1
        pattern:
          type: string
          description: RegEx pattern to generate the coupon code with.
          minLength: 1
        validation_rules:
          type: array
          description: >-
            A list of validation rules applied by default to the coupons created
            with this coupon definition.
          items:
            anyOf:
              - $ref: '#/components/schemas/valid_from'
              - $ref: '#/components/schemas/valid_to'
              - $ref: '#/components/schemas/restricted_to_consumer_id'
        discount_rule_id:
          description: >-
            Unique identifier of the discount rule applied by default to the
            coupons.
          type: string
          minLength: 1
        channel_types:
          type: array
          items:
            type: string
            enum:
              - web
              - mobile
              - mobile_ios
              - mobile_android
              - store
          maxItems: 5
        max_redemptions:
          description: >-
            TThe maximum number of times a coupon based on this definition can
            be redeemed.
          type: integer
          minimum: 1
    coupon_definition:
      title: Coupon Definition
      type: object
      allOf:
        - $ref: '#/components/schemas/coupon_definition_data'
        - required:
            - id
          properties:
            id:
              type: string
              description: >-
                The coupon definition ID generated by NewStore. This is just
                exposed for tracing reasons. To create a coupon, use the 'label'
                property of the definition.
            created_at:
              type: string
              format: date-time
    coupon:
      title: Coupon
      type: object
      required:
        - id
        - code
      properties:
        id:
          description: >-
            Unique identifier of created coupon definition (template)
            (currently, uuid)
          type: string
          minLength: 36
          maxLength: 36
        code:
          type: string
          description: Generated coupon code
          minLength: 1
        label:
          type: string
          description: Returned whenever there is a label assigned to the coupon.
          minLength: 1
        is_enabled:
          type: boolean
          description: Is true when the coupon is enabled
        created_at:
          type: string
          format: date-time
    inventory_transaction:
      description: Represents an inventory transaction
      required:
        - inventory_transaction_id
        - transaction_type
        - associate_name
        - associate_email
      title: Inventory Transaction
      type: object
      properties:
        inventory_transaction_id:
          type: string
          description: The unique identifier of the transaction
          minLength: 36
          maxLength: 36
        transaction_type:
          type: string
          description: The type of the transaction.
          enum:
            - receiving
            - transfer
            - adjustment
        adjustment_type:
          type: string
          nullable: true
          description: The type of adjustment made for the item.
        adjustment_reason:
          type: string
          nullable: true
          description: The reason for the adjustment.
        completed_date:
          format: date-time
          type: string
          nullable: true
          description: The date and time when the transaction was completed.
        from_location:
          type: string
          nullable: true
          description: >-
            The id of the fulfillment node (store or DC) that the transaction
            has originated from.
        from_location_label:
          type: string
          nullable: true
          description: >-
            The label of the store or DC that the transaction has originated
            from.
        to_location:
          type: string
          nullable: true
          description: >-
            The id of the fulfillment node (store or DC) that the transaction
            arrives at.
        to_location_label:
          type: string
          nullable: true
          description: The label of the store or DC the transaction arrives at.
        associate_name:
          type: string
          description: The full name of the associate who performed the transaction.
        associate_email:
          type: string
          description: The email of the associate who performed the transaction.
        status:
          type: string
          enum:
            - closed
            - awaiting_pickup
        reference:
          type: string
          nullable: true
          description: >-
            The reference to the ASN or transfer order that was the reason for
            the transaction. This is only applicable to receiving and transfer
            transactions. An adjustment transaction is internal to the store and
            does not have a reference associated with it.
        from_stock_location:
          type: string
          nullable: true
          description: >-
            Name of the stock location, inside the fulfillment node, that the
            transaction is originating from .
        to_stock_location:
          type: string
          nullable: true
          description: Name of the destination stock location inside the fulfillment node.
        products:
          type: array
          description: The list of products moved, with their quantities.
          items:
            type: object
            properties:
              color:
                type: string
                description: The color of the product.
              extended_attributes:
                description: >-
                  A tenant defined collection of keys and values for extended
                  attributes of this item.
                type: array
                items:
                  type: object
                  required:
                    - name
                    - value
                  maxProperties: 2
                  properties:
                    name:
                      type: string
                    value:
                      type: string
              external_identifiers:
                description: >-
                  A tenant defined collection of keys and values for extended
                  identifiers for this item.
                type: array
                items:
                  type: object
                  required:
                    - type
                    - value
                  properties:
                    type:
                      description: The type of the identifier.
                      example:
                        - GTIN
                        - UPC
                        - EAN-13
                        - JAN
                        - ISBN
                        - SKU
                    value:
                      description: The value of the identifier.
                      type: string
              id:
                type: string
                description: The unique identifier of the product.
              quantity:
                type: number
                minimum: 1
                description: The moved quantity of the product.
              image_url:
                description: URL of the main image of the product.
                type: string
              name:
                description: Human-readable name of the product.
                type: string
              price_catalog:
                description: >-
                  The original price of the product, as defined in the product
                  catalog.
                type: number
              size:
                type: string
                description: The size of the product.
              variation_attribute_1_value:
                type: string
                nullable: true
              variation_attribute_2_value:
                type: string
                nullable: true
    asn:
      title: Advanced shipment notice
      type: object
      description: Represents the ASN document.
      required:
        - inventory_asn_id
        - references
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              transactions:
                type: array
                items:
                  type: object
                  properties:
                    associate_email:
                      type: string
                      description: Email of the associate.
                    associate_name:
                      type: string
                      description: Name of the associate.
                    completed_date:
                      type: string
                      nullable: true
                      description: Date when the transaction is completed.
                    external_ref:
                      type: string
                      nullable: true
                      description: Reference for the transaction.
                    quantity:
                      type: integer
                      description: Quantity of the product.
                    status:
                      type: string
                      description: Status of the transaction.
              color:
                type: string
                nullable: true
                description: Color value, e.g. blue.
              id:
                type: string
                description: Product identifier.
              image_url:
                description: Product image url.
                type: string
                nullable: true
                format: uri
              name:
                type: string
                nullable: true
                description: Name of the product
              price_catalog:
                description: >-
                  Product price shown to the consumer (can be incl. or excl.
                  tax).
                type: number
                nullable: true
              quantity:
                type: integer
                description: Quantity of the product.
              size:
                type: string
                nullable: true
                description: Size of the product.
              variation_attribute_1_value:
                type: string
                nullable: true
                description: >-
                  An additional variation selection that provides more
                  information about the product. For example: material.
              variation_attribute_2_value:
                type: string
                nullable: true
                description: >-
                  An additional variation selection that provides more
                  information about the product. For example: material.
              external_identifiers:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    value:
                      type: string
        completed_date:
          type: string
          nullable: true
          description: Date when the ASN is completed.
        from_location:
          type: string
          description: Location ID from where the ASN is emitted.
        from_location_label:
          type: string
          nullable: true
          description: Location name from where the ASN is emitted.
        inventory_asn_id:
          type: string
          description: ASN identifier.
        references:
          type: object
          properties:
            shipment_ref:
              type: string
            po_number:
              type: string
              nullable: true
        status:
          type: string
          description: Status of the ASN.
        to_location_label:
          type: string
          nullable: true
          description: Location name to where the ASN is emitted.
        to_location:
          type: string
          nullable: true
          description: Location ID to where the ASN is emitted.
        shipment_date:
          type: string
          description: Date for shipment of the ASN.
          format: date-time
        product_count_distinct:
          type: integer
          description: Count distinct of products in the ASN.
        product_quantity_sum:
          type: integer
          description: Sum of quantity of all products in the ASN.
    inventory_report:
      description: Represents the stock on hand of an item
      required:
        - stock_report_id
        - sku
        - product_id
        - title
        - color
        - size
        - price
        - currency
        - fulfillment_node_id
        - on_hand
        - updated_at
        - stock_location
        - store_name
        - image_url
      title: Stock On Hand
      type: object
      properties:
        stock_report_id:
          type: string
          description: The unique identifier of the stock report
          minLength: 36
          maxLength: 36
        sku:
          type: string
          description: The product SKU.
        title:
          type: string
        image_url:
          type: string
        color:
          type: string
        size:
          type: string
        price:
          description: >-
            The product price displayed to the customer (can be inclusive or
            exclusive of tax).
          type: number
          multipleOf: 0.01
        currency:
          type: string
          description: The currency of this price as a 3-character ISO-4217 code.
          example:
            - USD
            - EUR
        updated_at:
          type: string
          format: date-time
          description: >-
            The last date and time the stock on hand has been updated for the
            item.
        fulfillment_node_id:
          type: string
          description: The fulfillment node identifier.
        on_hand:
          type: integer
          description: The current stock on hand value.
        stock_location:
          type: string
          description: The stock location of the item in the store.
        store_name:
          type: string
          description: The store label.
  responses: {}
  parameters:
    trait_Filtering_filter:
      name: filter
      in: query
      description: >
        The field to filter and its filter value(s). The field is specified in
        subscript notation and its

        values are comma separated. To filter by range of values, separate the
        boundaries by the pipe character (`|`).


        **Note:** When using the `placed_at` field, you must use a range
        notation even when you only need one date. See the example.


        **Note:** You can use this parameter several times in one query to
        create an `AND` operation.
      schema:
        type: string
    trait_Paginated_offset:
      name: offset
      in: query
      description: The page offset.
      schema:
        default: 0
        minimum: 0
        type: integer
    trait_Paginated_count:
      name: count
      in: query
      description: The number of requested documents.
      schema:
        default: 10
        minimum: 1
        type: integer
    trait_Sorting_sort:
      name: sort
      in: query
      description: >-
        Sorts the returned values. Takes 3 values separated by the pipe
        character (`|`), the field to sort, the sort order and sort mode for
        multi-valued fields.
      schema:
        type: string
    trait_Supporting_Fulltext_Search_q:
      name: q
      in: query
      description: |
        The term to filter on. A partial match is considered as a match.
      schema:
        type: string
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
x-annotation-crossOriginAllowed: true