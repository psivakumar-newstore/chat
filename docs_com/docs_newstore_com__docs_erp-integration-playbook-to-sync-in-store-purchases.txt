ERP integration playbook to sync in-store purchases
NewStore Introduction
NewStore basics
Business process models
Hardware and software
Glossary
Mobile POS
Get to know your mPOS
Set up your mPOS
Set up omnichannel services
Engage your customers
Use your mPOS
Manage your mPOS
OMS
Get to know your OMS
Set up your OMS
Expand your OMS
Dashboards and analytics
Shopping App
Get to know your Shopping App
Customize your Shopping App
Developer Resources
Managing data in NewStore
Data reconciliation and completeness playbook
Get started with NewStore APIs
Event consumption and handling
Build custom integrations
API Reference
Omnichannel Manager tools
Platform onboarding guide
End-User Guides
Associate App User Guide
Omnichannel Manager User Guide
Search or ask anything
EXPLORE ARTICLES
ERP integration playbook to sync in-store purchases
Updated on
Feb 26, 2025
Published on Oct 1, 2024
2 minute(s) read
Listen
Export PDF
Print
Prev
Next
NewStore allows you to create financial transactions in an ERP system and sync them with the NewStore platform for all store orders (in-store purchases).
This integration playbook helps you integrate an ERP system used in your business with the NewStore platform, to sync all in-store purchases. The integration is achieved via the
Event Stream
.
For each in-store order placed in the NewStore platform, a sales transaction is created in the ERP, which includes:
Purchased items with prices and taxes
Payment details
Process overview
The following sequence diagram represents a typical integration of in-store orders in the NewStore platform with an ERP:
In this playbook:
NewStore sends the
order.opened
event when the in-store purchase has been completed.
The integration fetches all necessary details via
GraphQL API
. Payments are processed asynchronously, therefore it may take some time until all payment details are available.
The integration creates a cash and carry sales transaction in the ERP by calling the ERP's API.
Exceptions
ERP unavailable
The integrations returns a 500 error, and the
Event stream
retries sending the macro event.
Payment details unavailable
In some cases, it takes more than a few seconds until payment processing at the
PSP
has been completed and the payment details become available in the platform. The integration moves the event into an internal queue (for example, SQS) for to reprocess later, and returns
200
.
Exchange orders
The integration needs the store credit information to create a balanced transaction in the ERP. Consider adding store credit transactions to external payment events.
To identify an exchange order, see
Event Stream documentation
.
Sample GraphQL Query
Here is an example
GraphQL
query to retrieve all the information required to create a cash and carry sales transaction in the ERP.
query MyQuery {
  order(id: "012345Ab-CdEf-GhIj-KlMn-OpQrStUvWxYz", tenant: "dodici") {
    externalId
    placedAt
    demandLocationId
    currency
    isExchange
    isHistorical
    channel
    channelType
    shippingTax
    shippingTotal
    taxExempt
    taxStrategy
    taxTotal
    subtotal
    grandTotal
    discounts {
      edges {
        node {
          couponCode
        }
      }
    }
  }
}
The below is an example of a bad GraphQL query because it uses multiple contexts, and calls the same data in a nested format. All of these can slow down the response times and cause timeouts and slow down the integration.
query MyQuery {
  order(id: "012345Ab-CdEf-GhIj-KlMn-OpQrStUvWxYz", tenant: "dodici") {
    channelType
    channel
    externalId
  }
  paymentAccount(id: "012345Ab-CdEf-GhIj-KlMn-OpQrStUvWxYz", tenant: "dodici") {
    externalOrderId
    instruments {
      edges {
        node {
          id
        }
      }
    }
    order {
      channel
      channelType
      externalId
    }
  }
  fulfillmentRequestItem(fulfillmentRequestId: "012345Ab-CdEf-GhIj-KlMn-OpQrStUvWxYz", id: "012345Ab-CdEf-GhIj-KlMn-OpQrStUvWxYz", tenant: "dodici") {
    carrier
    productId
  }
}
ERP integration example with NetSuite
For integrations with NetSuite as an ERP system for endless aisle orders, see this
example
.
Related topics
ERP integration playbook to sync returns
ERP integration playbook to sync appeasement refunds
ERP integration playbook to sync endless-aisle orders
ERP integration playbook for synchronizing cancellations
ERP integration example with NetSuite for in-store purchases
Integrating a payment service provider
GraphQL API
Was this article helpful?
Yes
No
Tags
api
developer
ERP integration
event stream
events
in-store pickup
integration
newstore platform
platform
selling experience
About Us
Newsroom
Careers
Platform
Mobile POS
Omnichannel OMS
Shopping App
Hardware and Software
Stories
Point of Sale
Mobile Checkout
Endless Aisle
Clienteling
Developers
API Reference
Developer Portal
API updates
Deprecation notices
Support
Support Portal
Status
Still have questions?
We’re here to help you!
Follow Us
Platform Status
Privacy Notice for Applicants
Privacy Policy
Terms of Use